var Rv=Object.defineProperty;var jv=(e,r,t)=>r in e?Rv(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var Y=(e,r,t)=>jv(e,typeof r!="symbol"?r+"":r,t);const aa=new Map,$n=[],Nv=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){const s=aa.get(e);if(s===void 0)aa.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){const o=$n.indexOf(e);o!==-1&&$n.splice(o,1);for(let n=0;n<$n.length;n++)if(aa.get($n[n]).priority<=t){$n.splice(n,0,e);return}$n.push(e)}return}throw new TypeError("not a valid backend")},Vv=async e=>{const r=aa.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{const t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},Uv=async e=>{const r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?$n:t;let o;const n=[],i=new Set;for(const l of s){const c=await Vv(l);typeof c=="string"?n.push({name:l,err:c}):(o||(o=c),o===c&&i.add(l))}if(!o)throw new Error(`no available backend found. ERR: ${n.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(const{name:l,err:c}of n)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);const a=r.filter(l=>i.has(typeof l=="string"?l:l.name));return[o,new Proxy(e,{get:(l,c)=>c==="executionProviders"?a:Reflect.get(l,c)})]},Wv="1.21.0";let J_="warning";const Cs={wasm:{},webgl:{},webgpu:{},versions:{common:Wv},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);J_=e}},get logLevel(){return J_}};Object.defineProperty(Cs,"logLevel",{enumerable:!0});const Gv=Cs,Kv=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];const s=t.getContext("2d");if(s!=null){let o,n;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(o=e.dims[2],n=e.dims[3]):(o=e.dims[3],n=e.dims[2]);const i=(r==null?void 0:r.format)!==void 0?r.format:"RGB",a=r==null?void 0:r.norm;let l,c;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?c=[0,0,0,0]:typeof a.bias=="number"?c=[a.bias,a.bias,a.bias,a.bias]:(c=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(c[3]=a.bias[3]));const m=n*o;let d=0,u=m,g=m*2,f=-1;i==="RGBA"?(d=0,u=m,g=m*2,f=m*3):i==="RGB"?(d=0,u=m,g=m*2):i==="RBG"&&(d=0,g=m,u=m*2);for(let y=0;y<n;y++)for(let I=0;I<o;I++){const w=(e.data[d++]-c[0])*l[0],b=(e.data[u++]-c[1])*l[1],k=(e.data[g++]-c[2])*l[2],x=f===-1?255:(e.data[f++]-c[3])*l[3];s.fillStyle="rgba("+w+","+b+","+k+","+x+")",s.fillRect(I,y,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Hv=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let s;if(t!=null){let o,n,i;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(o=e.dims[2],n=e.dims[1],i=e.dims[3]):(o=e.dims[3],n=e.dims[2],i=e.dims[1]);const a=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r==null?void 0:r.norm;let c,m;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?m=[0,0,0,0]:typeof l.bias=="number"?m=[l.bias,l.bias,l.bias,l.bias]:(m=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(m[3]=l.bias[3]));const d=n*o;if(r!==void 0&&(r.format!==void 0&&i===4&&r.format!=="RGBA"||i===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const u=4;let g=0,f=1,y=2,I=3,w=0,b=d,k=d*2,x=-1;a==="RGBA"?(w=0,b=d,k=d*2,x=d*3):a==="RGB"?(w=0,b=d,k=d*2):a==="RBG"&&(w=0,k=d,b=d*2),s=t.createImageData(o,n);for(let v=0;v<n*o;g+=u,f+=u,y+=u,I+=u,v++)s.data[g]=(e.data[w++]-m[0])*c[0],s.data[f]=(e.data[b++]-m[1])*c[1],s.data[y]=(e.data[k++]-m[2])*c[2],s.data[I]=x===-1?255:(e.data[x++]-m[3])*c[3]}else throw new Error("Can not access image data");return s},Rl=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:t,width:s}=r,o=r.norm??{mean:255,bias:0};let n,i;typeof o.mean=="number"?n=[o.mean,o.mean,o.mean,o.mean]:n=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?i=[o.bias,o.bias,o.bias,o.bias]:i=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];const a=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",c=t*s,m=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3);let d=4,u=0,g=1,f=2,y=3,I=0,w=c,b=c*2,k=-1;a==="RGB"&&(d=3,u=0,g=1,f=2,y=-1),l==="RGBA"?k=c*3:l==="RBG"?(I=0,b=c,w=c*2):l==="BGR"&&(b=0,w=c,I=c*2);for(let v=0;v<c;v++,u+=d,f+=d,g+=d,y+=d)m[I++]=(e[u]+i[0])/n[0],m[w++]=(e[g]+i[1])/n[1],m[b++]=(e[f]+i[2])/n[2],k!==-1&&y!==-1&&(m[k++]=(e[y]+i[3])/n[3]);return l==="RGBA"?new ps("float32",m,[1,4,t,s]):new ps("float32",m,[1,3,t,s])},qv=async(e,r)=>{const t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,o=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,n=typeof e=="string";let i,a=r??{};const l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=m=>typeof HTMLCanvasElement<"u"&&m instanceof HTMLCanvasElement||m instanceof OffscreenCanvas?m.getContext("2d"):null;if(t){const m=l();m.width=e.width,m.height=e.height;const d=c(m);if(d!=null){let u=e.height,g=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(u=r.resizedHeight,g=r.resizedWidth),r!==void 0){if(a=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=u,a.width=g}else a.tensorFormat="RGBA",a.height=u,a.width=g;d.drawImage(e,0,0),i=d.getImageData(0,0,g,u).data}else throw new Error("Can not access image data")}else if(s){let m,d;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(m=r.resizedHeight,d=r.resizedWidth):(m=e.height,d=e.width),r!==void 0&&(a=r),a.format="RGBA",a.height=m,a.width=d,r!==void 0){const u=l();u.width=d,u.height=m;const g=c(u);if(g!=null)g.putImageData(e,0,0),i=g.getImageData(0,0,d,m).data;else throw new Error("Can not access image data")}else i=e.data}else if(o){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");const m=l();m.width=e.width,m.height=e.height;const d=c(m);if(d!=null){const u=e.height,g=e.width;return d.drawImage(e,0,0,g,u),i=d.getImageData(0,0,g,u).data,a.height=u,a.width=g,Rl(i,a)}else throw new Error("Can not access image data")}else{if(n)return new Promise((m,d)=>{const u=l(),g=c(u);if(!e||!g)return d();const f=new Image;f.crossOrigin="Anonymous",f.src=e,f.onload=()=>{u.width=f.width,u.height=f.height,g.drawImage(f,0,0,u.width,u.height);const y=g.getImageData(0,0,u.width,u.height);a.height=u.height,a.width=u.width,m(Rl(y.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return Rl(i,a);throw new Error("Input data provided is not supported - aborted tensor creation")},Qv=(e,r)=>{const{width:t,height:s,download:o,dispose:n}=r,i=[1,s,t,4];return new ps({location:"texture",type:"float32",texture:e,dims:i,download:o,dispose:n})},Xv=(e,r)=>{const{dataType:t,dims:s,download:o,dispose:n}=r;return new ps({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:o,dispose:n})},Jv=(e,r)=>{const{dataType:t,dims:s,download:o,dispose:n}=r;return new ps({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:o,dispose:n})},Yv=(e,r,t)=>new ps({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]}),ro=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),la=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let Y_=!1;const Zv=()=>{if(!Y_){Y_=!0;const e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&(ro.set("int64",BigInt64Array),la.set(BigInt64Array,"int64")),r&&(ro.set("uint64",BigUint64Array),la.set(BigUint64Array,"uint64")),s?(ro.set("float16",t),la.set(t,"float16")):ro.set("float16",Uint16Array)}},ex=e=>{let r=1;for(let t=0;t<e.length;t++){const s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},tx=(e,r)=>{switch(e.location){case"cpu":return new ps(e.type,e.data,r);case"cpu-pinned":return new ps({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new ps({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new ps({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new ps({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}};let ps=class{constructor(r,t,s){Zv();let o,n;if(typeof r=="object"&&"location"in r)switch(this.dataLocation=r.location,o=r.type,n=r.dims,r.location){case"cpu-pinned":{const a=ro.get(o);if(!a)throw new TypeError(`unsupported type "${o}" to create tensor from pinned buffer`);if(!(r.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=r.data;break}case"texture":{if(o!=="float32")throw new TypeError(`unsupported type "${o}" to create tensor from texture`);this.gpuTextureData=r.texture,this.downloader=r.download,this.disposer=r.dispose;break}case"gpu-buffer":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="uint8"&&o!=="bool"&&o!=="uint4"&&o!=="int4")throw new TypeError(`unsupported type "${o}" to create tensor from gpu buffer`);this.gpuBufferData=r.gpuBuffer,this.downloader=r.download,this.disposer=r.dispose;break}case"ml-tensor":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="uint64"&&o!=="int8"&&o!=="uint8"&&o!=="bool"&&o!=="uint4"&&o!=="int4")throw new TypeError(`unsupported type "${o}" to create tensor from MLTensor`);this.mlTensorData=r.mlTensor,this.downloader=r.download,this.disposer=r.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,l;if(typeof r=="string")if(o=r,l=s,r==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");a=t}else{const c=ro.get(r);if(c===void 0)throw new TypeError(`Unsupported tensor type: ${r}.`);if(Array.isArray(t)){if(r==="float16"&&c===Uint16Array||r==="uint4"||r==="int4")throw new TypeError(`Creating a ${r} tensor from number array is not supported. Please use ${c.name} as data.`);r==="uint64"||r==="int64"?a=c.from(t,BigInt):a=c.from(t)}else if(t instanceof c)a=t;else if(t instanceof Uint8ClampedArray)if(r==="uint8")a=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(r==="float16"&&t instanceof Uint16Array&&c!==Uint16Array)a=new globalThis.Float16Array(t.buffer,t.byteOffset,t.length);else throw new TypeError(`A ${o} tensor's data must be type of ${c}`)}else if(l=t,Array.isArray(r)){if(r.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const c=typeof r[0];if(c==="string")o="string",a=r;else if(c==="boolean")o="bool",a=Uint8Array.from(r);else throw new TypeError(`Invalid element type of data array: ${c}.`)}else if(r instanceof Uint8ClampedArray)o="uint8",a=Uint8Array.from(r);else{const c=la.get(r.constructor);if(c===void 0)throw new TypeError(`Unsupported type for tensor data: ${r.constructor}.`);o=c,a=r}if(l===void 0)l=[a.length];else if(!Array.isArray(l))throw new TypeError("A tensor's dims must be a number array");n=l,this.cpuData=a,this.dataLocation="cpu"}const i=ex(n);if(this.cpuData&&i!==this.cpuData.length&&!((o==="uint4"||o==="int4")&&Math.ceil(i/2)===this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=o,this.dims=n,this.size=i}static async fromImage(r,t){return qv(r,t)}static fromTexture(r,t){return Qv(r,t)}static fromGpuBuffer(r,t){return Xv(r,t)}static fromMLTensor(r,t){return Jv(r,t)}static fromPinnedBuffer(r,t,s){return Yv(r,t,s)}toDataURL(r){return Kv(this,r)}toImageData(r){return Hv(this,r)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(r){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,r&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(r){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return tx(this,r)}};const eo=ps,FM=(e,r)=>{(typeof Cs.trace>"u"?!Cs.wasm.trace:!Cs.trace)||console.timeStamp(`${e}::ORT::${r}`)},OM=(e,r)=>{var o;const t=((o=new Error().stack)==null?void 0:o.split(/\r\n|\r|\n/g))||[];let s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let i=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(i+=`::${r}`),FM("CPU",i);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},Rc=e=>{(typeof Cs.trace>"u"?!Cs.wasm.trace:!Cs.trace)||OM("BEGIN",e)},jc=e=>{(typeof Cs.trace>"u"?!Cs.wasm.trace:!Cs.trace)||OM("END",e)};let rx=class DM{constructor(r){this.handler=r}async run(r,t,s){Rc();const o={};let n={};if(typeof r!="object"||r===null||r instanceof eo||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof eo)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(const c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);o[c]=null}if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let c=!1;const m=Object.getOwnPropertyNames(t);for(const d of this.outputNames)if(m.indexOf(d)!==-1){const u=t[d];(u===null||u instanceof eo)&&(c=!0,i=!1,o[d]=u)}if(c){if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else n=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const c of this.inputNames)if(typeof r[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(i)for(const c of this.outputNames)o[c]=null;const a=await this.handler.run(r,o,n),l={};for(const c in a)if(Object.hasOwnProperty.call(a,c)){const m=a[c];m instanceof eo?l[c]=m:l[c]=new eo(m.type,m.data,m.dims)}return jc(),l}async release(){return this.handler.dispose()}static async create(r,t,s,o){Rc();let n,i={};if(typeof r=="string"){if(n=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(n=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){const m=r;let d=0,u=r.byteLength;if(typeof t=="object"&&t!==null)i=t;else if(typeof t=="number"){if(d=t,!Number.isSafeInteger(d))throw new RangeError("'byteOffset' must be an integer.");if(d<0||d>=m.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${m.byteLength}).`);if(u=r.byteLength-d,typeof s=="number"){if(u=s,!Number.isSafeInteger(u))throw new RangeError("'byteLength' must be an integer.");if(u<=0||d+u>m.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${m.byteLength-d}].`);if(typeof o=="object"&&o!==null)i=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");n=new Uint8Array(m,d,u)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[a,l]=await Uv(i),c=await a.createInferenceSessionHandler(n,l);return jc(),new DM(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}};const sx=rx,nx=Object.freeze(Object.defineProperty({__proto__:null,InferenceSession:sx,TRACE:FM,TRACE_FUNC_BEGIN:Rc,TRACE_FUNC_END:jc,Tensor:eo,env:Gv,registerBackend:Nv},Symbol.toStringTag,{value:"Module"}));/*!
 * ONNX Runtime Web v1.22.0-dev.20250409-89f8206ba4
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var su=Object.defineProperty,ox=Object.getOwnPropertyDescriptor,ix=Object.getOwnPropertyNames,ax=Object.prototype.hasOwnProperty,lx=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,t)=>(typeof require<"u"?require:r)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),Ue=(e,r)=>()=>(e&&(r=e(e=0)),r),io=(e,r)=>{for(var t in r)su(e,t,{get:r[t],enumerable:!0})},cx=(e,r,t,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of ix(r))!ax.call(e,o)&&o!==t&&su(e,o,{get:()=>r[o],enumerable:!(s=ox(r,o))||s.enumerable});return e},Jo=e=>cx(su({},"__esModule",{value:!0}),e),Do,rn,An,Z_,LM,zM=Ue(()=>{Do=new Map,rn=[],An=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){let s=Do.get(e);if(s===void 0)Do.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){let o=rn.indexOf(e);o!==-1&&rn.splice(o,1);for(let n=0;n<rn.length;n++)if(Do.get(rn[n]).priority<=t){rn.splice(n,0,e);return}rn.push(e)}return}throw new TypeError("not a valid backend")},Z_=async e=>{let r=Do.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{let t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},LM=async e=>{let r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?rn:t,o,n=[],i=new Set;for(let l of s){let c=await Z_(l);typeof c=="string"?n.push({name:l,err:c}):(o||(o=c),o===c&&i.add(l))}if(!o)throw new Error(`no available backend found. ERR: ${n.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(let{name:l,err:c}of n)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);let a=r.filter(l=>i.has(typeof l=="string"?l:l.name));return[o,new Proxy(e,{get:(l,c)=>c==="executionProviders"?a:Reflect.get(l,c)})]}}),ux=Ue(()=>{zM()}),BM,dx=Ue(()=>{BM="1.22.0-dev.20250409-89f8206ba4"}),jl,ds,RM=Ue(()=>{dx(),jl="warning",ds={wasm:{},webgl:{},webgpu:{},versions:{common:BM},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);jl=e}},get logLevel(){return jl}},Object.defineProperty(ds,"logLevel",{enumerable:!0})}),er,px=Ue(()=>{RM(),er=ds}),jM,NM,mx=Ue(()=>{jM=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];let s=t.getContext("2d");if(s!=null){let o,n;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(o=e.dims[2],n=e.dims[3]):(o=e.dims[3],n=e.dims[2]);let i=(r==null?void 0:r.format)!==void 0?r.format:"RGB",a=r==null?void 0:r.norm,l,c;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?c=[0,0,0,0]:typeof a.bias=="number"?c=[a.bias,a.bias,a.bias,a.bias]:(c=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(c[3]=a.bias[3]));let m=n*o,d=0,u=m,g=m*2,f=-1;i==="RGBA"?(d=0,u=m,g=m*2,f=m*3):i==="RGB"?(d=0,u=m,g=m*2):i==="RBG"&&(d=0,g=m,u=m*2);for(let y=0;y<n;y++)for(let I=0;I<o;I++){let w=(e.data[d++]-c[0])*l[0],b=(e.data[u++]-c[1])*l[1],k=(e.data[g++]-c[2])*l[2],x=f===-1?255:(e.data[f++]-c[3])*l[3];s.fillStyle="rgba("+w+","+b+","+k+","+x+")",s.fillRect(I,y,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},NM=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),s;if(t!=null){let o,n,i;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(o=e.dims[2],n=e.dims[1],i=e.dims[3]):(o=e.dims[3],n=e.dims[2],i=e.dims[1]);let a=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r==null?void 0:r.norm,c,m;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?m=[0,0,0,0]:typeof l.bias=="number"?m=[l.bias,l.bias,l.bias,l.bias]:(m=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(m[3]=l.bias[3]));let d=n*o;if(r!==void 0&&(r.format!==void 0&&i===4&&r.format!=="RGBA"||i===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let u=4,g=0,f=1,y=2,I=3,w=0,b=d,k=d*2,x=-1;a==="RGBA"?(w=0,b=d,k=d*2,x=d*3):a==="RGB"?(w=0,b=d,k=d*2):a==="RBG"&&(w=0,k=d,b=d*2),s=t.createImageData(o,n);for(let v=0;v<n*o;g+=u,f+=u,y+=u,I+=u,v++)s.data[g]=(e.data[w++]-m[0])*c[0],s.data[f]=(e.data[b++]-m[1])*c[1],s.data[y]=(e.data[k++]-m[2])*c[2],s.data[I]=x===-1?255:(e.data[x++]-m[3])*c[3]}else throw new Error("Can not access image data");return s}}),Hi,VM,UM,WM,GM,KM,hx=Ue(()=>{nu(),Hi=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:t,width:s}=r,o=r.norm??{mean:255,bias:0},n,i;typeof o.mean=="number"?n=[o.mean,o.mean,o.mean,o.mean]:n=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?i=[o.bias,o.bias,o.bias,o.bias]:i=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let a=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",c=t*s,m=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3),d=4,u=0,g=1,f=2,y=3,I=0,w=c,b=c*2,k=-1;a==="RGB"&&(d=3,u=0,g=1,f=2,y=-1),l==="RGBA"?k=c*3:l==="RBG"?(I=0,b=c,w=c*2):l==="BGR"&&(b=0,w=c,I=c*2);for(let x=0;x<c;x++,u+=d,f+=d,g+=d,y+=d)m[I++]=(e[u]+i[0])/n[0],m[w++]=(e[g]+i[1])/n[1],m[b++]=(e[f]+i[2])/n[2],k!==-1&&y!==-1&&(m[k++]=(e[y]+i[3])/n[3]);return l==="RGBA"?new os("float32",m,[1,4,t,s]):new os("float32",m,[1,3,t,s])},VM=async(e,r)=>{let t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,o=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,n=typeof e=="string",i,a=r??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=m=>typeof HTMLCanvasElement<"u"&&m instanceof HTMLCanvasElement||m instanceof OffscreenCanvas?m.getContext("2d"):null;if(t){let m=l();m.width=e.width,m.height=e.height;let d=c(m);if(d!=null){let u=e.height,g=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(u=r.resizedHeight,g=r.resizedWidth),r!==void 0){if(a=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=u,a.width=g}else a.tensorFormat="RGBA",a.height=u,a.width=g;d.drawImage(e,0,0),i=d.getImageData(0,0,g,u).data}else throw new Error("Can not access image data")}else if(s){let m,d;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(m=r.resizedHeight,d=r.resizedWidth):(m=e.height,d=e.width),r!==void 0&&(a=r),a.format="RGBA",a.height=m,a.width=d,r!==void 0){let u=l();u.width=d,u.height=m;let g=c(u);if(g!=null)g.putImageData(e,0,0),i=g.getImageData(0,0,d,m).data;else throw new Error("Can not access image data")}else i=e.data}else if(o){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");let m=l();m.width=e.width,m.height=e.height;let d=c(m);if(d!=null){let u=e.height,g=e.width;return d.drawImage(e,0,0,g,u),i=d.getImageData(0,0,g,u).data,a.height=u,a.width=g,Hi(i,a)}else throw new Error("Can not access image data")}else{if(n)return new Promise((m,d)=>{let u=l(),g=c(u);if(!e||!g)return d();let f=new Image;f.crossOrigin="Anonymous",f.src=e,f.onload=()=>{u.width=f.width,u.height=f.height,g.drawImage(f,0,0,u.width,u.height);let y=g.getImageData(0,0,u.width,u.height);a.height=u.height,a.width=u.width,m(Hi(y.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return Hi(i,a);throw new Error("Input data provided is not supported - aborted tensor creation")},UM=(e,r)=>{let{width:t,height:s,download:o,dispose:n}=r,i=[1,s,t,4];return new os({location:"texture",type:"float32",texture:e,dims:i,download:o,dispose:n})},WM=(e,r)=>{let{dataType:t,dims:s,download:o,dispose:n}=r;return new os({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:o,dispose:n})},GM=(e,r)=>{let{dataType:t,dims:s,download:o,dispose:n}=r;return new os({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:o,dispose:n})},KM=(e,r,t)=>new os({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]})}),kn,Go,Nl,HM,_x=Ue(()=>{kn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Go=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),Nl=!1,HM=()=>{if(!Nl){Nl=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&(kn.set("int64",BigInt64Array),Go.set(BigInt64Array,"int64")),r&&(kn.set("uint64",BigUint64Array),Go.set(BigUint64Array,"uint64")),s?(kn.set("float16",t),Go.set(t,"float16")):kn.set("float16",Uint16Array)}}}),qM,QM,fx=Ue(()=>{nu(),qM=e=>{let r=1;for(let t=0;t<e.length;t++){let s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},QM=(e,r)=>{switch(e.location){case"cpu":return new os(e.type,e.data,r);case"cpu-pinned":return new os({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new os({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new os({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new os({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),os,nu=Ue(()=>{mx(),hx(),_x(),fx(),os=class{constructor(e,r,t){HM();let s,o;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,s=e.type,o=e.dims,e.location){case"cpu-pinned":{let i=kn.get(s);if(!i)throw new TypeError(`unsupported type "${s}" to create tensor from pinned buffer`);if(!(e.data instanceof i))throw new TypeError(`buffer should be of type ${i.name}`);this.cpuData=e.data;break}case"texture":{if(s!=="float32")throw new TypeError(`unsupported type "${s}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint64"&&s!=="int8"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,a;if(typeof e=="string")if(s=e,a=t,e==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");i=r}else{let l=kn.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(r)){if(e==="float16"&&l===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${l.name} as data.`);e==="uint64"||e==="int64"?i=l.from(r,BigInt):i=l.from(r)}else if(r instanceof l)i=r;else if(r instanceof Uint8ClampedArray)if(e==="uint8")i=Uint8Array.from(r);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(e==="float16"&&r instanceof Uint16Array&&l!==Uint16Array)i=new globalThis.Float16Array(r.buffer,r.byteOffset,r.length);else throw new TypeError(`A ${s} tensor's data must be type of ${l}`)}else if(a=r,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")s="string",i=e;else if(l==="boolean")s="bool",i=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else if(e instanceof Uint8ClampedArray)s="uint8",i=Uint8Array.from(e);else{let l=Go.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);s=l,i=e}if(a===void 0)a=[i.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");o=a,this.cpuData=i,this.dataLocation="cpu"}let n=qM(o);if(this.cpuData&&n!==this.cpuData.length&&!((s==="uint4"||s==="int4")&&Math.ceil(n/2)===this.cpuData.length))throw new Error(`Tensor's size(${n}) does not match data length(${this.cpuData.length}).`);this.type=s,this.dims=o,this.size=n}static async fromImage(e,r){return VM(e,r)}static fromTexture(e,r){return UM(e,r)}static fromGpuBuffer(e,r){return WM(e,r)}static fromMLTensor(e,r){return GM(e,r)}static fromPinnedBuffer(e,r,t){return KM(e,r,t)}toDataURL(e){return jM(this,e)}toImageData(e){return NM(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,e&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return QM(this,e)}}}),Ps,XM=Ue(()=>{nu(),Ps=os}),Yo,Vl,Ss,ms,JM=Ue(()=>{RM(),Yo=(e,r)=>{(typeof ds.trace>"u"?!ds.wasm.trace:!ds.trace)||console.timeStamp(`${e}::ORT::${r}`)},Vl=(e,r)=>{var o;let t=((o=new Error().stack)==null?void 0:o.split(/\r\n|\r|\n/g))||[],s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let i=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(i+=`::${r}`),Yo("CPU",i);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},Ss=e=>{(typeof ds.trace>"u"?!ds.wasm.trace:!ds.trace)||Vl("BEGIN",e)},ms=e=>{(typeof ds.trace>"u"?!ds.wasm.trace:!ds.trace)||Vl("END",e)}}),YM,gx=Ue(()=>{zM(),XM(),JM(),YM=class ZM{constructor(r){this.handler=r}async run(r,t,s){Ss();let o={},n={};if(typeof r!="object"||r===null||r instanceof Ps||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof Ps)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(let c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);o[c]=null}if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let c=!1,m=Object.getOwnPropertyNames(t);for(let d of this.outputNames)if(m.indexOf(d)!==-1){let u=t[d];(u===null||u instanceof Ps)&&(c=!0,i=!1,o[d]=u)}if(c){if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else n=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let c of this.inputNames)if(typeof r[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(i)for(let c of this.outputNames)o[c]=null;let a=await this.handler.run(r,o,n),l={};for(let c in a)if(Object.hasOwnProperty.call(a,c)){let m=a[c];m instanceof Ps?l[c]=m:l[c]=new Ps(m.type,m.data,m.dims)}return ms(),l}async release(){return this.handler.dispose()}static async create(r,t,s,o){Ss();let n,i={};if(typeof r=="string"){if(n=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(n=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){let m=r,d=0,u=r.byteLength;if(typeof t=="object"&&t!==null)i=t;else if(typeof t=="number"){if(d=t,!Number.isSafeInteger(d))throw new RangeError("'byteOffset' must be an integer.");if(d<0||d>=m.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${m.byteLength}).`);if(u=r.byteLength-d,typeof s=="number"){if(u=s,!Number.isSafeInteger(u))throw new RangeError("'byteLength' must be an integer.");if(u<=0||d+u>m.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${m.byteLength-d}].`);if(typeof o=="object"&&o!==null)i=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");n=new Uint8Array(m,d,u)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[a,l]=await LM(i),c=await a.createInferenceSessionHandler(n,l);return ms(),new ZM(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}get inputMetadata(){return this.handler.inputMetadata}get outputMetadata(){return this.handler.outputMetadata}}}),ou,wx=Ue(()=>{gx(),ou=YM}),Mx=Ue(()=>{}),bx=Ue(()=>{}),yx=Ue(()=>{}),vx=Ue(()=>{}),eb={};io(eb,{InferenceSession:()=>ou,TRACE:()=>Yo,TRACE_FUNC_BEGIN:()=>Ss,TRACE_FUNC_END:()=>ms,Tensor:()=>Ps,env:()=>er,registerBackend:()=>An});var $s=Ue(()=>{ux(),px(),wx(),XM(),Mx(),bx(),JM(),yx(),vx()}),iu=Ue(()=>{}),tb={};io(tb,{default:()=>rb});var Ul,Wl,rb,xx=Ue(()=>{var e;av(),Ln(),au(),Ul="ort-wasm-proxy-worker",Wl=((e=globalThis.self)==null?void 0:e.name)===Ul,Wl&&(self.onmessage=r=>{let{type:t,in:s}=r.data;try{switch(t){case"init-wasm":lu(s.wasm).then(()=>{Pu(s).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:n}=s;Cu(n,o).then(()=>{postMessage({type:t})},i=>{postMessage({type:t,err:i})});break}case"copy-from":{let{buffer:o}=s,n=ga(o);postMessage({type:t,out:n});break}case"create":{let{model:o,options:n}=s;Su(o,n).then(i=>{postMessage({type:t,out:i})},i=>{postMessage({type:t,err:i})});break}case"release":$u(s),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:n,inputs:i,outputIndices:a,options:l}=s;ku(o,n,i,a,new Array(a.length).fill(null),l).then(c=>{c.some(m=>m[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:c},Au([...i,...c]))},c=>{postMessage({type:t,err:c})});break}case"end-profiling":Iu(s),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}}),rb=Wl?null:r=>new Worker(r??ns,{type:"module",name:Ul})}),sb={};io(sb,{default:()=>nb});var Gl,Kl,nb,ef,Tx=Ue(()=>{var e,r;Kl=(Gl=import.meta.url,async function(t={}){var Qn;var s,o,n=t,i=new Promise((h,P)=>{s=h,o=P}),a=typeof window=="object",l=typeof WorkerGlobalScope<"u",c=l&&((Qn=self.name)==null?void 0:Qn.startsWith("em-pthread"));n.mountExternalData=(h,P)=>{h.startsWith("./")&&(h=h.substring(2)),(n.Eb||(n.Eb=new Map)).set(h,P)},n.unmountExternalData=()=>{delete n.Eb};var m=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,pc:!0}).buffer.constructor;let d=h=>async(...P)=>{var F;try{if(n.Fb)throw Error("Session already started");let B=n.Fb={dc:P[0],errors:[]},U=await h(...P);if(n.Fb!==B)throw Error("Session mismatch");(F=n.Jb)==null||F.flush();let ue=B.errors;if(0<ue.length){let Ce=await Promise.all(ue);if(Ce=Ce.filter(Le=>Le),0<Ce.length)throw Error(Ce.join(`
`))}return U}finally{n.Fb=null}};n.jsepInit=(h,P)=>{if(h==="webgpu"){[n.Jb,n.Ub,n.Yb,n.Kb,n.Xb,n.jb,n.Zb,n.ac,n.Vb,n.Wb,n.$b]=P;let F=n.Jb;n.jsepRegisterBuffer=(B,U,ue,Ce)=>F.registerBuffer(B,U,ue,Ce),n.jsepGetBuffer=B=>F.getBuffer(B),n.jsepCreateDownloader=(B,U,ue)=>F.createDownloader(B,U,ue),n.jsepOnCreateSession=B=>{F.onCreateSession(B)},n.jsepOnReleaseSession=B=>{F.onReleaseSession(B)},n.jsepOnRunStart=B=>F.onRunStart(B),n.bc=(B,U)=>{F.upload(B,U)}}else if(h==="webnn"){let F=P[0];[n.nc,n.Nb,n.webnnEnsureTensor,n.Ob,n.webnnDownloadTensor]=P.slice(1),n.webnnReleaseTensorId=n.Nb,n.webnnUploadTensor=n.Ob,n.webnnOnRunStart=B=>F.onRunStart(B),n.webnnOnRunEnd=F.onRunEnd.bind(F),n.webnnRegisterMLContext=(B,U)=>{F.registerMLContext(B,U)},n.webnnOnReleaseSession=B=>{F.onReleaseSession(B)},n.webnnCreateMLTensorDownloader=(B,U)=>F.createMLTensorDownloader(B,U),n.webnnRegisterMLTensor=(B,U,ue,Ce)=>F.registerMLTensor(B,U,ue,Ce),n.webnnCreateMLContext=B=>F.createMLContext(B),n.webnnRegisterMLConstant=(B,U,ue,Ce,Le,qe)=>F.registerMLConstant(B,U,ue,Ce,Le,n.Eb,qe),n.webnnRegisterGraphInput=F.registerGraphInput.bind(F),n.webnnIsGraphInput=F.isGraphInput.bind(F),n.webnnCreateTemporaryTensor=F.createTemporaryTensor.bind(F),n.webnnIsInt64Supported=F.isInt64Supported.bind(F)}};let u=()=>{let h=(P,F,B)=>(...U)=>{let ue=gr,Ce=F==null?void 0:F();U=P(...U);let Le=F==null?void 0:F();return Ce!==Le&&(P=Le,B(Ce),F=B=null),gr!=ue?new Promise((qe,at)=>{Br={resolve:qe,reject:at}}):U};(()=>{for(let P of["_OrtAppendExecutionProvider","_OrtCreateSession","_OrtRun","_OrtRunWithBinding","_OrtBindInput"])n[P]=h(n[P],()=>n[P],F=>n[P]=F)})(),d!==void 0&&(n._OrtRun=d(n._OrtRun),n._OrtRunWithBinding=d(n._OrtRunWithBinding)),u=void 0};n.asyncInit=()=>{u==null||u()};var g,f,y=Object.assign({},n),I=(h,P)=>{throw P},w="";(a||l)&&(l?w=self.location.href:typeof document<"u"&&document.currentScript&&(w=document.currentScript.src),Gl&&(w=Gl),w=w.startsWith("blob:")?"":w.slice(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1),l&&(f=h=>{var P=new XMLHttpRequest;return P.open("GET",h,!1),P.responseType="arraybuffer",P.send(null),new Uint8Array(P.response)}),g=async h=>{if(N(h))return new Promise((F,B)=>{var U=new XMLHttpRequest;U.open("GET",h,!0),U.responseType="arraybuffer",U.onload=()=>{U.status==200||U.status==0&&U.response?F(U.response):B(U.status)},U.onerror=B,U.send(null)});var P=await fetch(h,{credentials:"same-origin"});if(P.ok)return P.arrayBuffer();throw Error(P.status+" : "+P.url)});var b=console.log.bind(console),k=console.error.bind(console),x=b,v=k;Object.assign(n,y),y=null;var E,T,C,D,z,K,H,R,re,q,te,ee,ie,he=n.wasmBinary,de=!1,N=h=>h.startsWith("file://");function O(){return E.buffer!=D.buffer&&le(),D}function W(){return E.buffer!=D.buffer&&le(),z}function ne(){return E.buffer!=D.buffer&&le(),K}function fe(){return E.buffer!=D.buffer&&le(),H}function ae(){return E.buffer!=D.buffer&&le(),R}function xe(){return E.buffer!=D.buffer&&le(),re}function Be(){return E.buffer!=D.buffer&&le(),q}function Ke(){return E.buffer!=D.buffer&&le(),ie}if(c){let h=function(P){try{var F=P.data,B=F.Bb;if(B==="load"){let U=[];self.onmessage=ue=>U.push(ue),self.startWorker=()=>{postMessage({Bb:"loaded"});for(let ue of U)h(ue);self.onmessage=h};for(let ue of F.Rb)n[ue]&&!n[ue].proxy||(n[ue]=(...Ce)=>{postMessage({Bb:"callHandler",Qb:ue,args:Ce})},ue=="print"&&(x=n[ue]),ue=="printErr"&&(v=n[ue]));E=F.kc,le(),Ae(F.lc)}else if(B==="run"){Ws(F.Ab),Wn(F.Ab,0,0,1,0,0),as(),pe(F.Ab),J||(To(),J=!0);try{Gs(F.fc,F.Hb)}catch(U){if(U!="unwind")throw U}}else F.target!=="setimmediate"&&(B==="checkMailbox"?J&&Ee():B&&(v(`worker: received unknown command ${B}`),v(F)))}catch(U){throw Gn(),U}};var Ae,J=!1;v=function(...P){P=P.join(" "),console.error(P)},self.alert=function(...P){postMessage({Bb:"alert",text:P.join(" "),ic:_n()})},self.onunhandledrejection=P=>{throw P.reason||P},self.onmessage=h}function le(){var h=E.buffer;n.HEAP8=D=new Int8Array(h),n.HEAP16=K=new Int16Array(h),n.HEAPU8=z=new Uint8Array(h),n.HEAPU16=H=new Uint16Array(h),n.HEAP32=R=new Int32Array(h),n.HEAPU32=re=new Uint32Array(h),n.HEAPF32=q=new Float32Array(h),n.HEAPF64=ie=new Float64Array(h),n.HEAP64=te=new BigInt64Array(h),n.HEAPU64=ee=new BigUint64Array(h)}function G(){c?startWorker(n):pt.Ca()}c||(E=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),le());var ye,Ie=0,Pe=null;function be(){if(--Ie==0&&Pe){var h=Pe;Pe=null,h()}}function $e(h){throw v(h="Aborted("+h+")"),de=!0,h=new WebAssembly.RuntimeError(h+". Build with -sASSERTIONS for more info."),o(h),h}function Me(){return{a:{L:Xe,Aa:Re,b:Hs,$:ks,A:$,pa:X,X:se,Z:we,qa:Oe,na:st,ga:gt,ma:ht,J:xt,Y:nt,V:Bt,oa:Vt,W:Nr,va:Sr,E:Fs,Q:Wr,O:Gr,D:Ne,u:tt,r:Jt,P:zs,z:A,R:V,ja:Z,T:Ve,aa:Ge,M:rt,F:bt,ia:pe,sa:Rt,t:Gt,Ba:fr,w:cs,o:ar,l:Hr,c:hs,n:Bn,j:ti,v:ri,p:si,f:Qs,s:ni,m:oi,e:ii,k:ai,i:li,g:Xs,d:ci,da:ui,ea:po,fa:di,ba:mo,ca:Rn,N:_o,xa:fo,ua:pi,h:Nn,C:mi,G:hi,ta:wa,x:_i,ra:fi,U:gi,q:ho,y:wi,K:Mi,S:bi,za:go,ya:yi,ka:vi,la:Mo,_:At,B:xi,I:bo,ha:Vn,H:yo,a:E,wa:Ze}}}var Fe={829644:(h,P,F,B,U)=>{if(n===void 0||!n.Eb)return 1;if((h=Xt(Number(h>>>0))).startsWith("./")&&(h=h.substring(2)),!(h=n.Eb.get(h)))return 2;if(P=Number(P>>>0),F=Number(F>>>0),B=Number(B>>>0),P+F>h.byteLength)return 3;try{let ue=h.subarray(P,P+F);switch(U){case 0:W().set(ue,B>>>0);break;case 1:n.mc?n.mc(B,ue):n.bc(B,ue);break;default:return 4}return 0}catch{return 4}},830468:(h,P,F)=>{n.Ob(h,W().subarray(P>>>0,P+F>>>0))},830532:()=>n.nc(),830574:h=>{n.Nb(h)},830611:()=>{n.Vb()},830642:()=>{n.Wb()},830671:()=>{n.$b()},830696:h=>n.Ub(h),830729:h=>n.Yb(h),830761:(h,P,F)=>{n.Kb(Number(h),Number(P),Number(F),!0)},830824:(h,P,F)=>{n.Kb(Number(h),Number(P),Number(F))},830881:()=>typeof wasmOffsetConverter<"u",830938:h=>{n.jb("Abs",h,void 0)},830989:h=>{n.jb("Neg",h,void 0)},831040:h=>{n.jb("Floor",h,void 0)},831093:h=>{n.jb("Ceil",h,void 0)},831145:h=>{n.jb("Reciprocal",h,void 0)},831203:h=>{n.jb("Sqrt",h,void 0)},831255:h=>{n.jb("Exp",h,void 0)},831306:h=>{n.jb("Erf",h,void 0)},831357:h=>{n.jb("Sigmoid",h,void 0)},831412:(h,P,F)=>{n.jb("HardSigmoid",h,{alpha:P,beta:F})},831491:h=>{n.jb("Log",h,void 0)},831542:h=>{n.jb("Sin",h,void 0)},831593:h=>{n.jb("Cos",h,void 0)},831644:h=>{n.jb("Tan",h,void 0)},831695:h=>{n.jb("Asin",h,void 0)},831747:h=>{n.jb("Acos",h,void 0)},831799:h=>{n.jb("Atan",h,void 0)},831851:h=>{n.jb("Sinh",h,void 0)},831903:h=>{n.jb("Cosh",h,void 0)},831955:h=>{n.jb("Asinh",h,void 0)},832008:h=>{n.jb("Acosh",h,void 0)},832061:h=>{n.jb("Atanh",h,void 0)},832114:h=>{n.jb("Tanh",h,void 0)},832166:h=>{n.jb("Not",h,void 0)},832217:(h,P,F)=>{n.jb("Clip",h,{min:P,max:F})},832286:h=>{n.jb("Clip",h,void 0)},832338:(h,P)=>{n.jb("Elu",h,{alpha:P})},832396:h=>{n.jb("Gelu",h,void 0)},832448:h=>{n.jb("Relu",h,void 0)},832500:(h,P)=>{n.jb("LeakyRelu",h,{alpha:P})},832564:(h,P)=>{n.jb("ThresholdedRelu",h,{alpha:P})},832634:(h,P)=>{n.jb("Cast",h,{to:P})},832692:h=>{n.jb("Add",h,void 0)},832743:h=>{n.jb("Sub",h,void 0)},832794:h=>{n.jb("Mul",h,void 0)},832845:h=>{n.jb("Div",h,void 0)},832896:h=>{n.jb("Pow",h,void 0)},832947:h=>{n.jb("Equal",h,void 0)},833e3:h=>{n.jb("Greater",h,void 0)},833055:h=>{n.jb("GreaterOrEqual",h,void 0)},833117:h=>{n.jb("Less",h,void 0)},833169:h=>{n.jb("LessOrEqual",h,void 0)},833228:(h,P,F,B,U)=>{n.jb("ReduceMean",h,{keepDims:!!P,noopWithEmptyAxes:!!F,axes:B?Array.from(ae().subarray(Number(B)>>>0,Number(U)>>>0)):[]})},833403:(h,P,F,B,U)=>{n.jb("ReduceMax",h,{keepDims:!!P,noopWithEmptyAxes:!!F,axes:B?Array.from(ae().subarray(Number(B)>>>0,Number(U)>>>0)):[]})},833577:(h,P,F,B,U)=>{n.jb("ReduceMin",h,{keepDims:!!P,noopWithEmptyAxes:!!F,axes:B?Array.from(ae().subarray(Number(B)>>>0,Number(U)>>>0)):[]})},833751:(h,P,F,B,U)=>{n.jb("ReduceProd",h,{keepDims:!!P,noopWithEmptyAxes:!!F,axes:B?Array.from(ae().subarray(Number(B)>>>0,Number(U)>>>0)):[]})},833926:(h,P,F,B,U)=>{n.jb("ReduceSum",h,{keepDims:!!P,noopWithEmptyAxes:!!F,axes:B?Array.from(ae().subarray(Number(B)>>>0,Number(U)>>>0)):[]})},834100:(h,P,F,B,U)=>{n.jb("ReduceL1",h,{keepDims:!!P,noopWithEmptyAxes:!!F,axes:B?Array.from(ae().subarray(Number(B)>>>0,Number(U)>>>0)):[]})},834273:(h,P,F,B,U)=>{n.jb("ReduceL2",h,{keepDims:!!P,noopWithEmptyAxes:!!F,axes:B?Array.from(ae().subarray(Number(B)>>>0,Number(U)>>>0)):[]})},834446:(h,P,F,B,U)=>{n.jb("ReduceLogSum",h,{keepDims:!!P,noopWithEmptyAxes:!!F,axes:B?Array.from(ae().subarray(Number(B)>>>0,Number(U)>>>0)):[]})},834623:(h,P,F,B,U)=>{n.jb("ReduceSumSquare",h,{keepDims:!!P,noopWithEmptyAxes:!!F,axes:B?Array.from(ae().subarray(Number(B)>>>0,Number(U)>>>0)):[]})},834803:(h,P,F,B,U)=>{n.jb("ReduceLogSumExp",h,{keepDims:!!P,noopWithEmptyAxes:!!F,axes:B?Array.from(ae().subarray(Number(B)>>>0,Number(U)>>>0)):[]})},834983:h=>{n.jb("Where",h,void 0)},835036:(h,P,F)=>{n.jb("Transpose",h,{perm:P?Array.from(ae().subarray(Number(P)>>>0,Number(F)>>>0)):[]})},835160:(h,P,F,B)=>{n.jb("DepthToSpace",h,{blocksize:P,mode:Xt(F),format:B?"NHWC":"NCHW"})},835293:(h,P,F,B)=>{n.jb("DepthToSpace",h,{blocksize:P,mode:Xt(F),format:B?"NHWC":"NCHW"})},835426:(h,P,F,B,U,ue,Ce,Le,qe,at,Tt,Dt,Kt,vr,Os)=>{n.jb("ConvTranspose",h,{format:qe?"NHWC":"NCHW",autoPad:P,dilations:[F],group:B,kernelShape:[U],pads:[ue,Ce],strides:[Le],wIsConst:()=>!!O()[at>>>0],outputPadding:Tt?Array.from(ae().subarray(Number(Tt)>>>0,Number(Dt)>>>0)):[],outputShape:Kt?Array.from(ae().subarray(Number(Kt)>>>0,Number(vr)>>>0)):[],activation:Xt(Os)})},835859:(h,P,F,B,U,ue,Ce,Le,qe,at,Tt,Dt,Kt,vr)=>{n.jb("ConvTranspose",h,{format:Le?"NHWC":"NCHW",autoPad:P,dilations:Array.from(ae().subarray(Number(F)>>>0,2+(Number(F)>>>0)>>>0)),group:B,kernelShape:Array.from(ae().subarray(Number(U)>>>0,2+(Number(U)>>>0)>>>0)),pads:Array.from(ae().subarray(Number(ue)>>>0,4+(Number(ue)>>>0)>>>0)),strides:Array.from(ae().subarray(Number(Ce)>>>0,2+(Number(Ce)>>>0)>>>0)),wIsConst:()=>!!O()[qe>>>0],outputPadding:at?Array.from(ae().subarray(Number(at)>>>0,Number(Tt)>>>0)):[],outputShape:Dt?Array.from(ae().subarray(Number(Dt)>>>0,Number(Kt)>>>0)):[],activation:Xt(vr)})},836520:(h,P,F,B,U,ue,Ce,Le,qe,at,Tt,Dt,Kt,vr,Os)=>{n.jb("ConvTranspose",h,{format:qe?"NHWC":"NCHW",autoPad:P,dilations:[F],group:B,kernelShape:[U],pads:[ue,Ce],strides:[Le],wIsConst:()=>!!O()[at>>>0],outputPadding:Tt?Array.from(ae().subarray(Number(Tt)>>>0,Number(Dt)>>>0)):[],outputShape:Kt?Array.from(ae().subarray(Number(Kt)>>>0,Number(vr)>>>0)):[],activation:Xt(Os)})},836953:(h,P,F,B,U,ue,Ce,Le,qe,at,Tt,Dt,Kt,vr)=>{n.jb("ConvTranspose",h,{format:Le?"NHWC":"NCHW",autoPad:P,dilations:Array.from(ae().subarray(Number(F)>>>0,2+(Number(F)>>>0)>>>0)),group:B,kernelShape:Array.from(ae().subarray(Number(U)>>>0,2+(Number(U)>>>0)>>>0)),pads:Array.from(ae().subarray(Number(ue)>>>0,4+(Number(ue)>>>0)>>>0)),strides:Array.from(ae().subarray(Number(Ce)>>>0,2+(Number(Ce)>>>0)>>>0)),wIsConst:()=>!!O()[qe>>>0],outputPadding:at?Array.from(ae().subarray(Number(at)>>>0,Number(Tt)>>>0)):[],outputShape:Dt?Array.from(ae().subarray(Number(Dt)>>>0,Number(Kt)>>>0)):[],activation:Xt(vr)})},837614:(h,P)=>{n.jb("GlobalAveragePool",h,{format:P?"NHWC":"NCHW"})},837705:(h,P,F,B,U,ue,Ce,Le,qe,at,Tt,Dt,Kt,vr)=>{n.jb("AveragePool",h,{format:vr?"NHWC":"NCHW",auto_pad:P,ceil_mode:F,count_include_pad:B,storage_order:U,dilations:ue?Array.from(ae().subarray(Number(ue)>>>0,Number(Ce)>>>0)):[],kernel_shape:Le?Array.from(ae().subarray(Number(Le)>>>0,Number(qe)>>>0)):[],pads:at?Array.from(ae().subarray(Number(at)>>>0,Number(Tt)>>>0)):[],strides:Dt?Array.from(ae().subarray(Number(Dt)>>>0,Number(Kt)>>>0)):[]})},838184:(h,P)=>{n.jb("GlobalAveragePool",h,{format:P?"NHWC":"NCHW"})},838275:(h,P,F,B,U,ue,Ce,Le,qe,at,Tt,Dt,Kt,vr)=>{n.jb("AveragePool",h,{format:vr?"NHWC":"NCHW",auto_pad:P,ceil_mode:F,count_include_pad:B,storage_order:U,dilations:ue?Array.from(ae().subarray(Number(ue)>>>0,Number(Ce)>>>0)):[],kernel_shape:Le?Array.from(ae().subarray(Number(Le)>>>0,Number(qe)>>>0)):[],pads:at?Array.from(ae().subarray(Number(at)>>>0,Number(Tt)>>>0)):[],strides:Dt?Array.from(ae().subarray(Number(Dt)>>>0,Number(Kt)>>>0)):[]})},838754:(h,P)=>{n.jb("GlobalMaxPool",h,{format:P?"NHWC":"NCHW"})},838841:(h,P,F,B,U,ue,Ce,Le,qe,at,Tt,Dt,Kt,vr)=>{n.jb("MaxPool",h,{format:vr?"NHWC":"NCHW",auto_pad:P,ceil_mode:F,count_include_pad:B,storage_order:U,dilations:ue?Array.from(ae().subarray(Number(ue)>>>0,Number(Ce)>>>0)):[],kernel_shape:Le?Array.from(ae().subarray(Number(Le)>>>0,Number(qe)>>>0)):[],pads:at?Array.from(ae().subarray(Number(at)>>>0,Number(Tt)>>>0)):[],strides:Dt?Array.from(ae().subarray(Number(Dt)>>>0,Number(Kt)>>>0)):[]})},839316:(h,P)=>{n.jb("GlobalMaxPool",h,{format:P?"NHWC":"NCHW"})},839403:(h,P,F,B,U,ue,Ce,Le,qe,at,Tt,Dt,Kt,vr)=>{n.jb("MaxPool",h,{format:vr?"NHWC":"NCHW",auto_pad:P,ceil_mode:F,count_include_pad:B,storage_order:U,dilations:ue?Array.from(ae().subarray(Number(ue)>>>0,Number(Ce)>>>0)):[],kernel_shape:Le?Array.from(ae().subarray(Number(Le)>>>0,Number(qe)>>>0)):[],pads:at?Array.from(ae().subarray(Number(at)>>>0,Number(Tt)>>>0)):[],strides:Dt?Array.from(ae().subarray(Number(Dt)>>>0,Number(Kt)>>>0)):[]})},839878:(h,P,F,B,U)=>{n.jb("Gemm",h,{alpha:P,beta:F,transA:B,transB:U})},839982:h=>{n.jb("MatMul",h,void 0)},840036:(h,P,F,B)=>{n.jb("ArgMax",h,{keepDims:!!P,selectLastIndex:!!F,axis:B})},840144:(h,P,F,B)=>{n.jb("ArgMin",h,{keepDims:!!P,selectLastIndex:!!F,axis:B})},840252:(h,P)=>{n.jb("Softmax",h,{axis:P})},840315:(h,P)=>{n.jb("Concat",h,{axis:P})},840375:(h,P,F,B,U)=>{n.jb("Split",h,{axis:P,numOutputs:F,splitSizes:B?Array.from(ae().subarray(Number(B)>>>0,Number(U)>>>0)):[]})},840531:h=>{n.jb("Expand",h,void 0)},840585:(h,P)=>{n.jb("Gather",h,{axis:Number(P)})},840656:(h,P)=>{n.jb("GatherElements",h,{axis:Number(P)})},840735:(h,P)=>{n.jb("GatherND",h,{batch_dims:Number(P)})},840814:(h,P,F,B,U,ue,Ce,Le,qe,at,Tt)=>{n.jb("Resize",h,{antialias:P,axes:F?Array.from(ae().subarray(Number(F)>>>0,Number(B)>>>0)):[],coordinateTransformMode:Xt(U),cubicCoeffA:ue,excludeOutside:Ce,extrapolationValue:Le,keepAspectRatioPolicy:Xt(qe),mode:Xt(at),nearestMode:Xt(Tt)})},841176:(h,P,F,B,U,ue,Ce)=>{n.jb("Slice",h,{starts:P?Array.from(ae().subarray(Number(P)>>>0,Number(F)>>>0)):[],ends:B?Array.from(ae().subarray(Number(B)>>>0,Number(U)>>>0)):[],axes:ue?Array.from(ae().subarray(Number(ue)>>>0,Number(Ce)>>>0)):[]})},841440:h=>{n.jb("Tile",h,void 0)},841492:(h,P,F)=>{n.jb("InstanceNormalization",h,{epsilon:P,format:F?"NHWC":"NCHW"})},841606:(h,P,F)=>{n.jb("InstanceNormalization",h,{epsilon:P,format:F?"NHWC":"NCHW"})},841720:h=>{n.jb("Range",h,void 0)},841773:(h,P)=>{n.jb("Einsum",h,{equation:Xt(P)})},841854:(h,P,F,B,U)=>{n.jb("Pad",h,{mode:P,value:F,pads:B?Array.from(ae().subarray(Number(B)>>>0,Number(U)>>>0)):[]})},841997:(h,P,F,B,U,ue)=>{n.jb("BatchNormalization",h,{epsilon:P,momentum:F,spatial:!!U,trainingMode:!!B,format:ue?"NHWC":"NCHW"})},842166:(h,P,F,B,U,ue)=>{n.jb("BatchNormalization",h,{epsilon:P,momentum:F,spatial:!!U,trainingMode:!!B,format:ue?"NHWC":"NCHW"})},842335:(h,P,F)=>{n.jb("CumSum",h,{exclusive:Number(P),reverse:Number(F)})},842432:(h,P,F)=>{n.jb("DequantizeLinear",h,{axis:P,blockSize:F})},842522:(h,P,F,B,U)=>{n.jb("GridSample",h,{align_corners:P,mode:Xt(F),padding_mode:Xt(B),format:U?"NHWC":"NCHW"})},842692:(h,P,F,B,U)=>{n.jb("GridSample",h,{align_corners:P,mode:Xt(F),padding_mode:Xt(B),format:U?"NHWC":"NCHW"})},842862:(h,P)=>{n.jb("ScatterND",h,{reduction:Xt(P)})},842947:(h,P,F,B,U,ue,Ce,Le,qe)=>{n.jb("Attention",h,{numHeads:P,isUnidirectional:F,maskFilterValue:B,scale:U,doRotary:ue,qkvHiddenSizes:Ce?Array.from(ae().subarray(Number(Le)>>>0,Number(Le)+Ce>>>0)):[],pastPresentShareBuffer:!!qe})},843219:h=>{n.jb("BiasAdd",h,void 0)},843274:h=>{n.jb("BiasSplitGelu",h,void 0)},843335:h=>{n.jb("FastGelu",h,void 0)},843391:(h,P,F,B,U,ue,Ce,Le,qe,at,Tt,Dt,Kt,vr,Os,Ei)=>{n.jb("Conv",h,{format:Dt?"NHWC":"NCHW",auto_pad:P,dilations:F?Array.from(ae().subarray(Number(F)>>>0,Number(B)>>>0)):[],group:U,kernel_shape:ue?Array.from(ae().subarray(Number(ue)>>>0,Number(Ce)>>>0)):[],pads:Le?Array.from(ae().subarray(Number(Le)>>>0,Number(qe)>>>0)):[],strides:at?Array.from(ae().subarray(Number(at)>>>0,Number(Tt)>>>0)):[],w_is_const:()=>!!O()[Number(Kt)>>>0],activation:Xt(vr),activation_params:Os?Array.from(Be().subarray(Number(Os)>>>0,Number(Ei)>>>0)):[]})},843975:h=>{n.jb("Gelu",h,void 0)},844027:(h,P,F,B,U,ue,Ce,Le,qe)=>{n.jb("GroupQueryAttention",h,{numHeads:P,kvNumHeads:F,scale:B,softcap:U,doRotary:ue,rotaryInterleaved:Ce,smoothSoftmax:Le,localWindowSize:qe})},844244:(h,P,F,B)=>{n.jb("LayerNormalization",h,{axis:P,epsilon:F,simplified:!!B})},844355:(h,P,F,B)=>{n.jb("LayerNormalization",h,{axis:P,epsilon:F,simplified:!!B})},844466:(h,P,F,B,U,ue)=>{n.jb("MatMulNBits",h,{k:P,n:F,accuracyLevel:B,bits:U,blockSize:ue})},844593:(h,P,F,B,U,ue)=>{n.jb("MultiHeadAttention",h,{numHeads:P,isUnidirectional:F,maskFilterValue:B,scale:U,doRotary:ue})},844752:(h,P)=>{n.jb("QuickGelu",h,{alpha:P})},844816:(h,P,F,B,U)=>{n.jb("RotaryEmbedding",h,{interleaved:!!P,numHeads:F,rotaryEmbeddingDim:B,scale:U})},844955:(h,P,F)=>{n.jb("SkipLayerNormalization",h,{epsilon:P,simplified:!!F})},845057:(h,P,F)=>{n.jb("SkipLayerNormalization",h,{epsilon:P,simplified:!!F})},845159:(h,P,F,B)=>{n.jb("GatherBlockQuantized",h,{gatherAxis:P,quantizeAxis:F,blockSize:B})},845280:h=>{n.Zb(h)},845314:(h,P)=>n.ac(Number(h),Number(P),n.Fb.dc,n.Fb.errors)};function Re(h,P,F){return Ir(async()=>{await n.Xb(Number(h),Number(P),Number(F))})}function Xe(){return typeof wasmOffsetConverter<"u"}class Te{constructor(P){Y(this,"name","ExitStatus");this.message=`Program terminated with exit(${P})`,this.status=P}}var et=h=>{h.terminate(),h.onmessage=()=>{}},He=[],ot=h=>{$t.length==0&&(Cr(),Qt($t[0]));var P=$t.pop();if(!P)return 6;Mt.push(P),Pr[h.Ab]=P,P.Ab=h.Ab;var F={Bb:"run",fc:h.ec,Hb:h.Hb,Ab:h.Ab};return P.postMessage(F,h.Mb),0},Ye=0,De=(h,P,...F)=>{for(var B=2*F.length,U=Mn(),ue=Hn(8*B),Ce=ue>>>3,Le=0;Le<F.length;Le++){var qe=F[Le];typeof qe=="bigint"?(te[Ce+2*Le]=1n,te[Ce+2*Le+1]=qe):(te[Ce+2*Le]=0n,Ke()[Ce+2*Le+1>>>0]=qe)}return h=Eo(h,0,B,ue,P),wn(U),h};function Ze(h){if(c)return De(0,1,h);if(C=h,!(0<Ye)){for(var P of Mt)et(P);for(P of $t)et(P);$t=[],Mt=[],Pr={},de=!0}I(0,new Te(h))}function it(h){if(c)return De(1,0,h);At(h)}var At=h=>{if(C=h,c)throw it(h),"unwind";Ze(h)},$t=[],Mt=[],br=[],Pr={},jr=h=>{var P=h.Ab;delete Pr[P],$t.push(h),Mt.splice(Mt.indexOf(h),1),h.Ab=0,Po(P)};function as(){br.forEach(h=>h())}var Qt=h=>new Promise(P=>{h.onmessage=U=>{var ue=(U=U.data).Bb;if(U.Gb&&U.Gb!=_n()){var Ce=Pr[U.Gb];Ce?Ce.postMessage(U,U.Mb):v(`Internal error! Worker sent a message "${ue}" to target pthread ${U.Gb}, but that thread no longer exists!`)}else ue==="checkMailbox"?Ee():ue==="spawnThread"?ot(U):ue==="cleanupThread"?jr(Pr[U.hc]):ue==="loaded"?(h.loaded=!0,P(h)):ue==="alert"?alert(`Thread ${U.ic}: ${U.text}`):U.target==="setimmediate"?h.postMessage(U):ue==="callHandler"?n[U.Qb](...U.args):ue&&v(`worker sent an unknown command ${ue}`)},h.onerror=U=>{throw v(`worker sent an error! ${U.filename}:${U.lineno}: ${U.message}`),U};var F,B=[];for(F of[])n.propertyIsEnumerable(F)&&B.push(F);h.postMessage({Bb:"load",Rb:B,kc:E,lc:T})});function Cr(){var h=new Worker((()=>{let P=URL;return import.meta.url>"file:"&&import.meta.url<"file;"?new P("ort.bundle.min.mjs",import.meta.url):new URL(import.meta.url)})(),{type:"module",workerData:"em-pthread",name:"em-pthread"});$t.push(h)}var Ws=h=>{le();var P=xe()[h+52>>>2>>>0];h=xe()[h+56>>>2>>>0],Kn(P,P-h),wn(P)},Gs=(h,P)=>{Ye=0,h=$o(h,P),0<Ye?C=h:gn(h)};class Ks{constructor(P){this.Ib=P-24}}function Hs(h,P,F){var B=new Ks(h>>>=0);throw P>>>=0,F>>>=0,xe()[B.Ib+16>>>2>>>0]=0,xe()[B.Ib+4>>>2>>>0]=P,xe()[B.Ib+8>>>2>>>0]=F,h}function mt(h,P,F,B){return c?De(2,1,h,P,F,B):ks(h,P,F,B)}function ks(h,P,F,B){if(h>>>=0,F>>>=0,B>>>=0,m===void 0)return 6;var U=[];return c&&U.length===0?mt(h,P>>>=0,F,B):(h={ec:F,Ab:h,Hb:B,Mb:U},c?(h.Bb="spawnThread",postMessage(h,U),0):ot(h))}var Is=typeof TextDecoder<"u"?new TextDecoder:void 0,St=(h,P=0,F=NaN)=>{var B=(P>>>=0)+F;for(F=P;h[F]&&!(F>=B);)++F;if(16<F-P&&h.buffer&&Is)return Is.decode(h.buffer instanceof ArrayBuffer?h.subarray(P,F):h.slice(P,F));for(B="";P<F;){var U=h[P++];if(128&U){var ue=63&h[P++];if((224&U)==192)B+=String.fromCharCode((31&U)<<6|ue);else{var Ce=63&h[P++];65536>(U=(240&U)==224?(15&U)<<12|ue<<6|Ce:(7&U)<<18|ue<<12|Ce<<6|63&h[P++])?B+=String.fromCharCode(U):(U-=65536,B+=String.fromCharCode(55296|U>>10,56320|1023&U))}}else B+=String.fromCharCode(U)}return B},Xt=(h,P)=>(h>>>=0)?St(W(),h,P):"";function $(h,P,F){return c?De(3,1,h,P,F):0}function X(h,P){if(c)return De(4,1,h,P)}var j=h=>{for(var P=0,F=0;F<h.length;++F){var B=h.charCodeAt(F);127>=B?P++:2047>=B?P+=2:55296<=B&&57343>=B?(P+=4,++F):P+=3}return P},Q=(h,P,F)=>{var B=W();if(P>>>=0,0<F){var U=P;F=P+F-1;for(var ue=0;ue<h.length;++ue){var Ce=h.charCodeAt(ue);if(55296<=Ce&&57343>=Ce&&(Ce=65536+((1023&Ce)<<10)|1023&h.charCodeAt(++ue)),127>=Ce){if(P>=F)break;B[P++>>>0]=Ce}else{if(2047>=Ce){if(P+1>=F)break;B[P++>>>0]=192|Ce>>6}else{if(65535>=Ce){if(P+2>=F)break;B[P++>>>0]=224|Ce>>12}else{if(P+3>=F)break;B[P++>>>0]=240|Ce>>18,B[P++>>>0]=128|Ce>>12&63}B[P++>>>0]=128|Ce>>6&63}B[P++>>>0]=128|63&Ce}}B[P>>>0]=0,h=P-U}else h=0;return h};function se(h,P){if(c)return De(5,1,h,P)}function we(h,P,F){if(c)return De(6,1,h,P,F)}function Oe(h,P,F){return c?De(7,1,h,P,F):0}function st(h,P){if(c)return De(8,1,h,P)}function gt(h,P,F){if(c)return De(9,1,h,P,F)}function ht(h,P,F,B){if(c)return De(10,1,h,P,F,B)}function xt(h,P,F,B){if(c)return De(11,1,h,P,F,B)}function nt(h,P,F,B){if(c)return De(12,1,h,P,F,B)}function Bt(h){if(c)return De(13,1,h)}function Vt(h,P){if(c)return De(14,1,h,P)}function Nr(h,P,F){if(c)return De(15,1,h,P,F)}var Qr,sr,Sr=()=>$e(""),$r=h=>{for(var P="";W()[h>>>0];)P+=Qr[W()[h++>>>0]];return P},Vr={},ls={};function kr(h,P,F={}){return function(B,U,ue={}){var Ce=U.name;if(!B)throw new sr(`type "${Ce}" must have a positive integer typeid pointer`);if(ls.hasOwnProperty(B)){if(ue.Sb)return;throw new sr(`Cannot register type '${Ce}' twice`)}ls[B]=U,Vr.hasOwnProperty(B)&&(U=Vr[B],delete Vr[B],U.forEach(Le=>Le()))}(h,P,F)}var As=(h,P,F)=>{switch(P){case 1:return F?B=>O()[B>>>0]:B=>W()[B>>>0];case 2:return F?B=>ne()[B>>>1>>>0]:B=>fe()[B>>>1>>>0];case 4:return F?B=>ae()[B>>>2>>>0]:B=>xe()[B>>>2>>>0];case 8:return F?B=>te[B>>>3]:B=>ee[B>>>3];default:throw new TypeError(`invalid integer width (${P}): ${h}`)}};function Fs(h,P,F){F>>>=0,kr(h>>>=0,{name:P=$r(P>>>0),fromWireType:B=>B,toWireType:function(B,U){if(typeof U!="bigint"&&typeof U!="number")throw U=U===null?"null":(B=typeof U)=="object"||B==="array"||B==="function"?U.toString():""+U,new TypeError(`Cannot convert "${U}" to ${this.name}`);return typeof U=="number"&&(U=BigInt(U)),U},Cb:Ur,readValueFromPointer:As(P,F,P.indexOf("u")==-1),Db:null})}var Ur=8;function Wr(h,P,F,B){kr(h>>>=0,{name:P=$r(P>>>0),fromWireType:function(U){return!!U},toWireType:function(U,ue){return ue?F:B},Cb:Ur,readValueFromPointer:function(U){return this.fromWireType(W()[U>>>0])},Db:null})}var es=[],Dr=[];function hs(h){9<(h>>>=0)&&--Dr[h+1]==0&&(Dr[h]=void 0,es.push(h))}var mr=h=>{if(!h)throw new sr("Cannot use deleted val. handle = "+h);return Dr[h]},_r=h=>{switch(h){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let P=es.pop()||Dr.length;return Dr[P]=h,Dr[P+1]=1,P}};function Xr(h){return this.fromWireType(xe()[h>>>2>>>0])}var Ls={name:"emscripten::val",fromWireType:h=>{var P=mr(h);return hs(h),P},toWireType:(h,P)=>_r(P),Cb:Ur,readValueFromPointer:Xr,Db:null};function Gr(h){return kr(h>>>0,Ls)}var je=(h,P)=>{switch(P){case 4:return function(F){return this.fromWireType(Be()[F>>>2>>>0])};case 8:return function(F){return this.fromWireType(Ke()[F>>>3>>>0])};default:throw new TypeError(`invalid float width (${P}): ${h}`)}};function Ne(h,P,F){F>>>=0,kr(h>>>=0,{name:P=$r(P>>>0),fromWireType:B=>B,toWireType:(B,U)=>U,Cb:Ur,readValueFromPointer:je(P,F),Db:null})}function tt(h,P,F,B,U){if(h>>>=0,F>>>=0,P=$r(P>>>0),U===-1&&(U=4294967295),U=Le=>Le,B===0){var ue=32-8*F;U=Le=>Le<<ue>>>ue}var Ce=P.includes("unsigned")?function(Le,qe){return qe>>>0}:function(Le,qe){return qe};kr(h,{name:P,fromWireType:U,toWireType:Ce,Cb:Ur,readValueFromPointer:As(P,F,B!==0),Db:null})}function Jt(h,P,F){function B(ue){var Ce=xe()[ue>>>2>>>0];return ue=xe()[ue+4>>>2>>>0],new U(O().buffer,ue,Ce)}var U=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][P];kr(h>>>=0,{name:F=$r(F>>>0),fromWireType:B,Cb:Ur,readValueFromPointer:B},{Sb:!0})}function zs(h,P){kr(h>>>=0,{name:P=$r(P>>>0),fromWireType:function(F){for(var B,U=xe()[F>>>2>>>0],ue=F+4,Ce=ue,Le=0;Le<=U;++Le){var qe=ue+Le;Le!=U&&W()[qe>>>0]!=0||(Ce=Xt(Ce,qe-Ce),B===void 0?B=Ce:(B+="\0",B+=Ce),Ce=qe+1)}return ts(F),B},toWireType:function(F,B){B instanceof ArrayBuffer&&(B=new Uint8Array(B));var U=typeof B=="string";if(!(U||B instanceof Uint8Array||B instanceof Uint8ClampedArray||B instanceof Int8Array))throw new sr("Cannot pass non-string to std::string");var ue=U?j(B):B.length,Ce=fn(4+ue+1),Le=Ce+4;if(xe()[Ce>>>2>>>0]=ue,U)Q(B,Le,ue+1);else if(U)for(U=0;U<ue;++U){var qe=B.charCodeAt(U);if(255<qe)throw ts(Ce),new sr("String has UTF-16 code units that do not fit in 8 bits");W()[Le+U>>>0]=qe}else for(U=0;U<ue;++U)W()[Le+U>>>0]=B[U];return F!==null&&F.push(ts,Ce),Ce},Cb:Ur,readValueFromPointer:Xr,Db(F){ts(F)}})}var _s=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Bs=(h,P)=>{for(var F=h>>1,B=F+P/2;!(F>=B)&&fe()[F>>>0];)++F;if(32<(F<<=1)-h&&_s)return _s.decode(W().slice(h,F));for(F="",B=0;!(B>=P/2);++B){var U=ne()[h+2*B>>>1>>>0];if(U==0)break;F+=String.fromCharCode(U)}return F},fs=(h,P,F)=>{if(F??(F=2147483647),2>F)return 0;var B=P;F=(F-=2)<2*h.length?F/2:h.length;for(var U=0;U<F;++U){var ue=h.charCodeAt(U);ne()[P>>>1>>>0]=ue,P+=2}return ne()[P>>>1>>>0]=0,P-B},ln=h=>2*h.length,cn=(h,P)=>{for(var F=0,B="";!(F>=P/4);){var U=ae()[h+4*F>>>2>>>0];if(U==0)break;++F,65536<=U?(U-=65536,B+=String.fromCharCode(55296|U>>10,56320|1023&U)):B+=String.fromCharCode(U)}return B},un=(h,P,F)=>{if(P>>>=0,F??(F=2147483647),4>F)return 0;var B=P;F=B+F-4;for(var U=0;U<h.length;++U){var ue=h.charCodeAt(U);if(55296<=ue&&57343>=ue&&(ue=65536+((1023&ue)<<10)|1023&h.charCodeAt(++U)),ae()[P>>>2>>>0]=ue,(P+=4)+4>F)break}return ae()[P>>>2>>>0]=0,P-B},me=h=>{for(var P=0,F=0;F<h.length;++F){var B=h.charCodeAt(F);55296<=B&&57343>=B&&++F,P+=4}return P};function A(h,P,F){if(h>>>=0,P>>>=0,F=$r(F>>>=0),P===2)var B=Bs,U=fs,ue=ln,Ce=Le=>fe()[Le>>>1>>>0];else P===4&&(B=cn,U=un,ue=me,Ce=Le=>xe()[Le>>>2>>>0]);kr(h,{name:F,fromWireType:Le=>{for(var qe,at=xe()[Le>>>2>>>0],Tt=Le+4,Dt=0;Dt<=at;++Dt){var Kt=Le+4+Dt*P;Dt!=at&&Ce(Kt)!=0||(Tt=B(Tt,Kt-Tt),qe===void 0?qe=Tt:(qe+="\0",qe+=Tt),Tt=Kt+P)}return ts(Le),qe},toWireType:(Le,qe)=>{if(typeof qe!="string")throw new sr(`Cannot pass non-string to C++ string type ${F}`);var at=ue(qe),Tt=fn(4+at+P);return xe()[Tt>>>2>>>0]=at/P,U(qe,Tt+4,at+P),Le!==null&&Le.push(ts,Tt),Tt},Cb:Ur,readValueFromPointer:Xr,Db(Le){ts(Le)}})}function V(h,P){kr(h>>>=0,{Tb:!0,name:P=$r(P>>>0),Cb:0,fromWireType:()=>{},toWireType:()=>{}})}function Z(h){Wn(h>>>0,!l,1,!a,131072,!1),as()}var ce=h=>{if(!de)try{if(h(),!(0<Ye))try{c?gn(C):At(C)}catch(P){P instanceof Te||P=="unwind"||I(0,P)}}catch(P){P instanceof Te||P=="unwind"||I(0,P)}};function pe(h){h>>>=0,typeof Atomics.jc=="function"&&(Atomics.jc(ae(),h>>>2,h).value.then(Ee),h+=128,Atomics.store(ae(),h>>>2,1))}var Ee=()=>{var h=_n();h&&(pe(h),ce(So))};function Ve(h,P){(h>>>=0)==P>>>0?setTimeout(Ee):c?postMessage({Gb:h,Bb:"checkMailbox"}):(h=Pr[h])&&h.postMessage({Bb:"checkMailbox"})}var Qe=[];function Ge(h,P,F,B,U){for(P>>>=0,B/=2,Qe.length=B,F=U>>>0>>>3,U=0;U<B;U++)Qe[U]=te[F+2*U]?te[F+2*U+1]:Ke()[F+2*U+1>>>0];return(P?Fe[P]:Un[h])(...Qe)}var rt=()=>{Ye=0};function bt(h){h>>>=0,c?postMessage({Bb:"cleanupThread",hc:h}):jr(Pr[h])}function Rt(h){}var Lt=(h,P)=>{var F=ls[h];if(F===void 0)throw h=xo(h),F=$r(h),ts(h),new sr(`${P} has unknown type ${F}`);return F},nr=(h,P,F)=>{var B=[];return h=h.toWireType(B,F),B.length&&(xe()[P>>>2>>>0]=_r(B)),h};function Gt(h,P,F){return P>>>=0,F>>>=0,h=mr(h>>>0),P=Lt(P,"emval::as"),nr(P,F,h)}function fr(h,P){return P>>>=0,h=mr(h>>>0),(P=Lt(P,"emval::as")).toWireType(null,h)}var yr=h=>{try{h()}catch(P){$e(P)}},ir=0,gr=null,Lr=0,Jr=[],Zt={},wr={},Kr=0,Br=null,gs=[];function Ir(h){return function(P){if(!de){if(ir===0){var F=!1,B=!1;P((U=0)=>{if(!de&&(Lr=U,F=!0,B)){ir=2,yr(()=>Io(gr)),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.resume(),U=!1;try{var ue=function(){var qe=ae()[gr+8>>>2>>>0];return qe=pt[wr[qe]],--Ye,qe()}()}catch(qe){ue=qe,U=!0}var Ce=!1;if(!gr){var Le=Br;Le&&(Br=null,(U?Le.reject:Le.resolve)(ue),Ce=!0)}if(U&&!Ce)throw ue}}),B=!0,F||(ir=1,gr=function(){var U=fn(65548),ue=U+12;xe()[U>>>2>>>0]=ue,xe()[U+4>>>2>>>0]=ue+65536,ue=Jr[0];var Ce=Zt[ue];return Ce===void 0&&(Ce=Kr++,Zt[ue]=Ce,wr[Ce]=ue),ue=Ce,ae()[U+8>>>2>>>0]=ue,U}(),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.pause(),yr(()=>ko(gr)))}else ir===2?(ir=0,yr(Ao),ts(gr),gr=null,gs.forEach(ce)):$e(`invalid state: ${ir}`);return Lr}}(P=>{h().then(P)})}function cs(h){return h>>>=0,Ir(async()=>{var P=await mr(h);return _r(P)})}var ur=[];function ar(h,P,F,B){return F>>>=0,B>>>=0,(h=ur[h>>>0])(null,P=mr(P>>>0),F,B)}var hr={},or=h=>{var P=hr[h];return P===void 0?$r(h):P};function Hr(h,P,F,B,U){return F>>>=0,B>>>=0,U>>>=0,(h=ur[h>>>0])(P=mr(P>>>0),P[F=or(F)],B,U)}var Rs=()=>typeof globalThis=="object"?globalThis:Function("return this")();function Bn(h){return(h>>>=0)==0?_r(Rs()):(h=or(h),_r(Rs()[h]))}var qs=h=>{var P=ur.length;return ur.push(h),P},ei=(h,P)=>{for(var F=Array(h),B=0;B<h;++B)F[B]=Lt(xe()[P+4*B>>>2>>>0],"parameter "+B);return F},ao=(h,P)=>Object.defineProperty(P,"name",{value:h});function ti(h,P,F){var B=(P=ei(h,P>>>0)).shift();h--;var U=`return function (obj, func, destructorsRef, args) {
`,ue=0,Ce=[];F===0&&Ce.push("obj");for(var Le=["retType"],qe=[B],at=0;at<h;++at)Ce.push("arg"+at),Le.push("argType"+at),qe.push(P[at]),U+=`  var arg${at} = argType${at}.readValueFromPointer(args${ue?"+"+ue:""});
`,ue+=P[at].Cb;return U+=`  var rv = ${F===1?"new func":"func.call"}(${Ce.join(", ")});
`,B.Tb||(Le.push("emval_returnValue"),qe.push(nr),U+=`  return emval_returnValue(retType, destructorsRef, rv);
`),Le.push(U+`};
`),h=function(Tt){var Dt=Function;if(!(Dt instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof Dt} which is not a function`);var Kt=ao(Dt.name||"unknownFunctionName",function(){});return Kt.prototype=Dt.prototype,Kt=new Kt,(Tt=Dt.apply(Kt,Tt))instanceof Object?Tt:Kt}(Le)(...qe),F=`methodCaller<(${P.map(Tt=>Tt.name).join(", ")}) => ${B.name}>`,qs(ao(F,h))}function ri(h){return h=or(h>>>0),_r(n[h])}function si(h,P){return P>>>=0,h=mr(h>>>0),P=mr(P),_r(h[P])}function Qs(h){9<(h>>>=0)&&(Dr[h+1]+=1)}function ni(){return _r([])}function oi(h){h=mr(h>>>0);for(var P=Array(h.length),F=0;F<h.length;F++)P[F]=h[F];return _r(P)}function ii(h){return _r(or(h>>>0))}function ai(){return _r({})}function li(h){for(var P=mr(h>>>=0);P.length;){var F=P.pop();P.pop()(F)}hs(h)}function Xs(h,P,F){P>>>=0,F>>>=0,h=mr(h>>>0),P=mr(P),F=mr(F),h[P]=F}function ci(h,P){return P>>>=0,h=(h=Lt(h>>>0,"_emval_take_value")).readValueFromPointer(P),_r(h)}function ui(h,P){h=-9007199254740992>h||9007199254740992<h?NaN:Number(h),P>>>=0,h=new Date(1e3*h),ae()[P>>>2>>>0]=h.getUTCSeconds(),ae()[P+4>>>2>>>0]=h.getUTCMinutes(),ae()[P+8>>>2>>>0]=h.getUTCHours(),ae()[P+12>>>2>>>0]=h.getUTCDate(),ae()[P+16>>>2>>>0]=h.getUTCMonth(),ae()[P+20>>>2>>>0]=h.getUTCFullYear()-1900,ae()[P+24>>>2>>>0]=h.getUTCDay(),h=(h.getTime()-Date.UTC(h.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,ae()[P+28>>>2>>>0]=h}var lo=h=>h%4==0&&(h%100!=0||h%400==0),co=[0,31,60,91,121,152,182,213,244,274,305,335],uo=[0,31,59,90,120,151,181,212,243,273,304,334];function po(h,P){h=-9007199254740992>h||9007199254740992<h?NaN:Number(h),P>>>=0,h=new Date(1e3*h),ae()[P>>>2>>>0]=h.getSeconds(),ae()[P+4>>>2>>>0]=h.getMinutes(),ae()[P+8>>>2>>>0]=h.getHours(),ae()[P+12>>>2>>>0]=h.getDate(),ae()[P+16>>>2>>>0]=h.getMonth(),ae()[P+20>>>2>>>0]=h.getFullYear()-1900,ae()[P+24>>>2>>>0]=h.getDay();var F=(lo(h.getFullYear())?co:uo)[h.getMonth()]+h.getDate()-1|0;ae()[P+28>>>2>>>0]=F,ae()[P+36>>>2>>>0]=-60*h.getTimezoneOffset(),F=new Date(h.getFullYear(),6,1).getTimezoneOffset();var B=new Date(h.getFullYear(),0,1).getTimezoneOffset();h=0|(F!=B&&h.getTimezoneOffset()==Math.min(B,F)),ae()[P+32>>>2>>>0]=h}function di(h){h>>>=0;var P=new Date(ae()[h+20>>>2>>>0]+1900,ae()[h+16>>>2>>>0],ae()[h+12>>>2>>>0],ae()[h+8>>>2>>>0],ae()[h+4>>>2>>>0],ae()[h>>>2>>>0],0),F=ae()[h+32>>>2>>>0],B=P.getTimezoneOffset(),U=new Date(P.getFullYear(),6,1).getTimezoneOffset(),ue=new Date(P.getFullYear(),0,1).getTimezoneOffset(),Ce=Math.min(ue,U);return 0>F?ae()[h+32>>>2>>>0]=+(U!=ue&&Ce==B):0<F!=(Ce==B)&&(U=Math.max(ue,U),P.setTime(P.getTime()+6e4*((0<F?Ce:U)-B))),ae()[h+24>>>2>>>0]=P.getDay(),F=(lo(P.getFullYear())?co:uo)[P.getMonth()]+P.getDate()-1|0,ae()[h+28>>>2>>>0]=F,ae()[h>>>2>>>0]=P.getSeconds(),ae()[h+4>>>2>>>0]=P.getMinutes(),ae()[h+8>>>2>>>0]=P.getHours(),ae()[h+12>>>2>>>0]=P.getDate(),ae()[h+16>>>2>>>0]=P.getMonth(),ae()[h+20>>>2>>>0]=P.getYear(),h=P.getTime(),BigInt(isNaN(h)?-1:h/1e3)}function mo(h,P,F,B,U,ue,Ce){return c?De(16,1,h,P,F,B,U,ue,Ce):-52}function Rn(h,P,F,B,U,ue){if(c)return De(17,1,h,P,F,B,U,ue)}var Js={},ho=()=>performance.timeOrigin+performance.now();function _o(h,P){if(c)return De(18,1,h,P);if(Js[h]&&(clearTimeout(Js[h].id),delete Js[h]),!P)return 0;var F=setTimeout(()=>{delete Js[h],ce(()=>Co(h,performance.timeOrigin+performance.now()))},P);return Js[h]={id:F,qc:P},0}function fo(h,P,F,B){h>>>=0,P>>>=0,F>>>=0,B>>>=0;var U=new Date().getFullYear(),ue=new Date(U,0,1).getTimezoneOffset();U=new Date(U,6,1).getTimezoneOffset();var Ce=Math.max(ue,U);xe()[h>>>2>>>0]=60*Ce,ae()[P>>>2>>>0]=+(ue!=U),h=(P=Le=>{var qe=Math.abs(Le);return`UTC${0<=Le?"-":"+"}${String(Math.floor(qe/60)).padStart(2,"0")}${String(qe%60).padStart(2,"0")}`})(ue),P=P(U),U<ue?(Q(h,F,17),Q(P,B,17)):(Q(h,B,17),Q(P,F,17))}var wa=()=>Date.now();function pi(h,P,F){return 0<=h&&3>=h?(h===0?h=Date.now():h=performance.timeOrigin+performance.now(),te[F>>>0>>>3]=BigInt(Math.round(1e6*h)),0):28}var dn=[],jn=(h,P)=>{dn.length=0;for(var F;F=W()[h++>>>0];){var B=F!=105;P+=(B&=F!=112)&&P%8?4:0,dn.push(F==112?xe()[P>>>2>>>0]:F==106?te[P>>>3]:F==105?ae()[P>>>2>>>0]:Ke()[P>>>3>>>0]),P+=B?8:4}return dn};function Nn(h,P,F){return h>>>=0,P=jn(P>>>0,F>>>0),Fe[h](...P)}function mi(h,P,F){return h>>>=0,P=jn(P>>>0,F>>>0),Fe[h](...P)}var hi=()=>{};function _i(h,P){return v(Xt(h>>>0,P>>>0))}var fi=()=>{throw Ye+=1,"unwind"};function gi(){return 4294901760}var wi=()=>navigator.hardwareConcurrency;function Mi(){return $e("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function bi(h){h>>>=0;var P=W().length;if(h<=P||4294901760<h)return!1;for(var F=1;4>=F;F*=2){var B=P*(1+.2/F);B=Math.min(B,h+100663296);e:{B=(Math.min(4294901760,65536*Math.ceil(Math.max(h,B)/65536))-E.buffer.byteLength+65535)/65536|0;try{E.grow(B),le();var U=1;break e}catch{}U=void 0}if(U)return!0}return!1}var Ys=()=>($e("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),Zs={},pn=h=>{h.forEach(P=>{Ys()})};function go(){var h=Error().stack.toString().split(`
`);return h[0]=="Error"&&h.shift(),pn(h),Zs.Lb=Ys(),Zs.cc=h,Zs.Lb}function yi(h,P,F){if(h>>>=0,P>>>=0,Zs.Lb==h)var B=Zs.cc;else(B=Error().stack.toString().split(`
`))[0]=="Error"&&B.shift(),pn(B);for(var U=3;B[U]&&Ys()!=h;)++U;for(h=0;h<F&&B[h+U];++h)ae()[P+4*h>>>2>>>0]=Ys();return h}var mn,ws={},wo=()=>{if(!mn){var h,P={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(h in ws)ws[h]===void 0?delete P[h]:P[h]=ws[h];var F=[];for(h in P)F.push(`${h}=${P[h]}`);mn=F}return mn};function vi(h,P){if(c)return De(19,1,h,P);h>>>=0,P>>>=0;var F=0;return wo().forEach((B,U)=>{var ue=P+F;for(U=xe()[h+4*U>>>2>>>0]=ue,ue=0;ue<B.length;++ue)O()[U++>>>0]=B.charCodeAt(ue);O()[U>>>0]=0,F+=B.length+1}),0}function Mo(h,P){if(c)return De(20,1,h,P);h>>>=0,P>>>=0;var F=wo();xe()[h>>>2>>>0]=F.length;var B=0;return F.forEach(U=>B+=U.length+1),xe()[P>>>2>>>0]=B,0}function xi(h){return c?De(21,1,h):52}function bo(h,P,F,B){return c?De(22,1,h,P,F,B):52}function Vn(h,P,F,B){return c?De(23,1,h,P,F,B):70}var Ti=[null,[],[]];function yo(h,P,F,B){if(c)return De(24,1,h,P,F,B);P>>>=0,F>>>=0,B>>>=0;for(var U=0,ue=0;ue<F;ue++){var Ce=xe()[P>>>2>>>0],Le=xe()[P+4>>>2>>>0];P+=8;for(var qe=0;qe<Le;qe++){var at=W()[Ce+qe>>>0],Tt=Ti[h];at===0||at===10?((h===1?x:v)(St(Tt)),Tt.length=0):Tt.push(at)}U+=Le}return xe()[B>>>2>>>0]=U,0}c||function(){for(var h=n.numThreads-1;h--;)Cr();He.unshift(()=>{Ie++,function(P){c?P():Promise.all($t.map(Qt)).then(P)}(()=>be())})}();for(var vo=Array(256),hn=0;256>hn;++hn)vo[hn]=String.fromCharCode(hn);Qr=vo,sr=n.BindingError=class extends Error{constructor(h){super(h),this.name="BindingError"}},n.InternalError=class extends Error{constructor(h){super(h),this.name="InternalError"}},Dr.push(0,1,void 0,1,null,1,!0,1,!1,1),n.count_emval_handles=()=>Dr.length/2-5-es.length;var pt,Un=[Ze,it,mt,$,X,se,we,Oe,st,gt,ht,xt,nt,Bt,Vt,Nr,mo,Rn,_o,vi,Mo,xi,bo,Vn,yo];(async function(){function h(B,U){return pt=B.exports,pt=function(){var ue=pt,Ce={};for(let[Le,qe]of Object.entries(ue))Ce[Le]=typeof qe=="function"?(...at)=>{Jr.push(Le);try{return qe(...at)}finally{de||(Jr.pop(),gr&&ir===1&&Jr.length===0&&(ir=0,Ye+=1,yr(qn),typeof Fibers<"u"&&Fibers.rc()))}}:qe;return Ce}(),pt=function(){var ue=pt,Ce=qe=>at=>qe(at)>>>0,Le=qe=>()=>qe()>>>0;return(ue=Object.assign({},ue)).Da=Ce(ue.Da),ue.fb=Le(ue.fb),ue.hb=Ce(ue.hb),ue.tb=Ce(ue.tb),ue.ub=Le(ue.ub),ue.__cxa_get_exception_ptr=Ce(ue.__cxa_get_exception_ptr),ue}(),br.push(pt.ib),T=U,be(),pt}Ie++;var P=Me();if(n.instantiateWasm)return new Promise(B=>{n.instantiateWasm(P,(U,ue)=>{h(U,ue),B(U.exports)})});if(c)return new Promise(B=>{Ae=U=>{var ue=new WebAssembly.Instance(U,Me());B(h(ue,U))}});ye??(ye=n.locateFile?n.locateFile?n.locateFile("ort-wasm-simd-threaded.jsep.wasm",w):w+"ort-wasm-simd-threaded.jsep.wasm":new URL("/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href);try{var F=await async function(B){var U=ye;if(!he&&typeof WebAssembly.instantiateStreaming=="function"&&!N(U))try{var ue=fetch(U,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(ue,B)}catch(Ce){v(`wasm streaming compile failed: ${Ce}`),v("falling back to ArrayBuffer instantiation")}return async function(Ce,Le){try{var qe=await async function(at){if(!he)try{var Tt=await g(at);return new Uint8Array(Tt)}catch{}if(at==ye&&he)at=new Uint8Array(he);else{if(!f)throw"both async and sync fetching of the wasm failed";at=f(at)}return at}(Ce);return await WebAssembly.instantiate(qe,Le)}catch(at){v(`failed to asynchronously prepare wasm: ${at}`),$e(at)}}(U,B)}(P);return h(F.instance,F.module)}catch(B){return o(B),Promise.reject(B)}})();var xo=h=>(xo=pt.Da)(h),To=()=>(To=pt.Ea)();n._OrtInit=(h,P)=>(n._OrtInit=pt.Fa)(h,P),n._OrtGetLastError=(h,P)=>(n._OrtGetLastError=pt.Ga)(h,P),n._OrtCreateSessionOptions=(h,P,F,B,U,ue,Ce,Le,qe,at)=>(n._OrtCreateSessionOptions=pt.Ha)(h,P,F,B,U,ue,Ce,Le,qe,at),n._OrtAppendExecutionProvider=(h,P,F,B,U)=>(n._OrtAppendExecutionProvider=pt.Ia)(h,P,F,B,U),n._OrtAddFreeDimensionOverride=(h,P,F)=>(n._OrtAddFreeDimensionOverride=pt.Ja)(h,P,F),n._OrtAddSessionConfigEntry=(h,P,F)=>(n._OrtAddSessionConfigEntry=pt.Ka)(h,P,F),n._OrtReleaseSessionOptions=h=>(n._OrtReleaseSessionOptions=pt.La)(h),n._OrtCreateSession=(h,P,F)=>(n._OrtCreateSession=pt.Ma)(h,P,F),n._OrtReleaseSession=h=>(n._OrtReleaseSession=pt.Na)(h),n._OrtGetInputOutputCount=(h,P,F)=>(n._OrtGetInputOutputCount=pt.Oa)(h,P,F),n._OrtGetInputOutputMetadata=(h,P,F,B)=>(n._OrtGetInputOutputMetadata=pt.Pa)(h,P,F,B),n._OrtFree=h=>(n._OrtFree=pt.Qa)(h),n._OrtCreateTensor=(h,P,F,B,U,ue)=>(n._OrtCreateTensor=pt.Ra)(h,P,F,B,U,ue),n._OrtGetTensorData=(h,P,F,B,U)=>(n._OrtGetTensorData=pt.Sa)(h,P,F,B,U),n._OrtReleaseTensor=h=>(n._OrtReleaseTensor=pt.Ta)(h),n._OrtCreateRunOptions=(h,P,F,B)=>(n._OrtCreateRunOptions=pt.Ua)(h,P,F,B),n._OrtAddRunConfigEntry=(h,P,F)=>(n._OrtAddRunConfigEntry=pt.Va)(h,P,F),n._OrtReleaseRunOptions=h=>(n._OrtReleaseRunOptions=pt.Wa)(h),n._OrtCreateBinding=h=>(n._OrtCreateBinding=pt.Xa)(h),n._OrtBindInput=(h,P,F)=>(n._OrtBindInput=pt.Ya)(h,P,F),n._OrtBindOutput=(h,P,F,B)=>(n._OrtBindOutput=pt.Za)(h,P,F,B),n._OrtClearBoundOutputs=h=>(n._OrtClearBoundOutputs=pt._a)(h),n._OrtReleaseBinding=h=>(n._OrtReleaseBinding=pt.$a)(h),n._OrtRunWithBinding=(h,P,F,B,U)=>(n._OrtRunWithBinding=pt.ab)(h,P,F,B,U),n._OrtRun=(h,P,F,B,U,ue,Ce,Le)=>(n._OrtRun=pt.bb)(h,P,F,B,U,ue,Ce,Le),n._OrtEndProfiling=h=>(n._OrtEndProfiling=pt.cb)(h),n._JsepOutput=(h,P,F)=>(n._JsepOutput=pt.db)(h,P,F),n._JsepGetNodeName=h=>(n._JsepGetNodeName=pt.eb)(h);var _n=()=>(_n=pt.fb)(),ts=n._free=h=>(ts=n._free=pt.gb)(h),fn=n._malloc=h=>(fn=n._malloc=pt.hb)(h),Wn=(h,P,F,B,U,ue)=>(Wn=pt.kb)(h,P,F,B,U,ue),Gn=()=>(Gn=pt.lb)(),Eo=(h,P,F,B,U)=>(Eo=pt.mb)(h,P,F,B,U),Po=h=>(Po=pt.nb)(h),gn=h=>(gn=pt.ob)(h),Co=(h,P)=>(Co=pt.pb)(h,P),So=()=>(So=pt.qb)(),Kn=(h,P)=>(Kn=pt.rb)(h,P),wn=h=>(wn=pt.sb)(h),Hn=h=>(Hn=pt.tb)(h),Mn=()=>(Mn=pt.ub)(),$o=n.dynCall_ii=(h,P)=>($o=n.dynCall_ii=pt.vb)(h,P),ko=h=>(ko=pt.wb)(h),qn=()=>(qn=pt.xb)(),Io=h=>(Io=pt.yb)(h),Ao=()=>(Ao=pt.zb)();return n.stackSave=()=>Mn(),n.stackRestore=h=>wn(h),n.stackAlloc=h=>Hn(h),n.setValue=function(h,P,F="i8"){switch(F.endsWith("*")&&(F="*"),F){case"i1":case"i8":O()[h>>>0]=P;break;case"i16":ne()[h>>>1>>>0]=P;break;case"i32":ae()[h>>>2>>>0]=P;break;case"i64":te[h>>>3]=BigInt(P);break;case"float":Be()[h>>>2>>>0]=P;break;case"double":Ke()[h>>>3>>>0]=P;break;case"*":xe()[h>>>2>>>0]=P;break;default:$e(`invalid type for setValue: ${F}`)}},n.getValue=function(h,P="i8"){switch(P.endsWith("*")&&(P="*"),P){case"i1":case"i8":return O()[h>>>0];case"i16":return ne()[h>>>1>>>0];case"i32":return ae()[h>>>2>>>0];case"i64":return te[h>>>3];case"float":return Be()[h>>>2>>>0];case"double":return Ke()[h>>>3>>>0];case"*":return xe()[h>>>2>>>0];default:$e(`invalid type for getValue: ${P}`)}},n.UTF8ToString=Xt,n.stringToUTF8=Q,n.lengthBytesUTF8=j,function h(){if(0<Ie)Pe=h;else if(c)s(n),G();else{for(;0<He.length;)He.shift()(n);0<Ie?Pe=h:(n.calledRun=!0,de||(G(),s(n)))}}(),n.PTR_SIZE=4,i}),nb=Kl,ef=(r=(e=globalThis.self)==null?void 0:e.name)==null?void 0:r.startsWith("em-pthread"),ef&&Kl()}),Hl,Nc,tf,ns,ob,qi,rf,sf,ql,nf,Ql,ib,Xl,ab,au=Ue(()=>{iu(),Hl=typeof location>"u"?void 0:location.origin,Nc=import.meta.url>"file:"&&import.meta.url<"file;",tf=()=>{{if(Nc){let e=URL;return new URL(new e("ort.bundle.min.mjs",import.meta.url).href,Hl).href}return import.meta.url}},ns=tf(),ob=()=>{if(ns&&!ns.startsWith("blob:"))return ns.substring(0,ns.lastIndexOf("/")+1)},qi=(e,r)=>{try{let t=r??ns;return(t?new URL(e,t):new URL(e)).origin===Hl}catch{return!1}},rf=(e,r)=>{let t=r??ns;try{return(t?new URL(e,t):new URL(e)).href}catch{return}},sf=(e,r)=>`${r??"./"}${e}`,ql=async e=>{let r=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(r)},nf=async e=>(await import(e)).default,Ql=(xx(),Jo(tb)).default,ib=async()=>{if(!ns)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(qi(ns))return[void 0,Ql()];let e=await ql(ns);return[e,Ql(e)]},Xl=(Tx(),Jo(sb)).default,ab=async(e,r,t)=>{if(!e&&!r&&Xl&&ns&&qi(ns))return[void 0,Xl];{let s="ort-wasm-simd-threaded.jsep.mjs",o=e??rf(s,r),n=t&&o&&!qi(o,r),i=n?await ql(o):o??sf(s,r);return[n?i:void 0,await nf(i)]}}}),Jl,Qi,Lo,Yl,of,af,lf,lu,Yt,Ln=Ue(()=>{au(),Qi=!1,Lo=!1,Yl=!1,of=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},af=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},lf=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,19,1,17,0,65,1,253,15,65,2,253,15,65,3,253,15,253,147,2,11]))}catch{return!1}},lu=async e=>{if(Qi)return Promise.resolve();if(Lo)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Yl)throw new Error("previous call to 'initializeWebAssembly()' failed.");Lo=!0;let r=e.initTimeout,t=e.numThreads;if(e.simd!==!1){if(e.simd==="relaxed"){if(!lf())throw new Error("Relaxed WebAssembly SIMD is not supported in the current environment.")}else if(!af())throw new Error("WebAssembly SIMD is not supported in the current environment.")}let s=of();t>1&&!s&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+t+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=t=1);let o=e.wasmPaths,n=typeof o=="string"?o:void 0,i=o==null?void 0:o.mjs,a=(i==null?void 0:i.href)??i,l=o==null?void 0:o.wasm,c=(l==null?void 0:l.href)??l,m=e.wasmBinary,[d,u]=await ab(a,n,t>1),g=!1,f=[];if(r>0&&f.push(new Promise(y=>{setTimeout(()=>{g=!0,y()},r)})),f.push(new Promise((y,I)=>{let w={numThreads:t};if(m)w.wasmBinary=m;else if(c||n)w.locateFile=b=>c??n+b;else if(a&&a.indexOf("blob:")!==0)w.locateFile=b=>new URL(b,a).href;else if(d){let b=ob();b&&(w.locateFile=k=>b+k)}u(w).then(b=>{Lo=!1,Qi=!0,Jl=b,y(),d&&URL.revokeObjectURL(d)},b=>{Lo=!1,Yl=!0,I(b)})})),await Promise.race(f),g)throw new Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},Yt=()=>{if(Qi&&Jl)return Jl;throw new Error("WebAssembly is not initialized yet.")}}),Es,da,qt,cu=Ue(()=>{Ln(),Es=(e,r)=>{let t=Yt(),s=t.lengthBytesUTF8(e)+1,o=t._malloc(s);return t.stringToUTF8(e,o,s),r.push(o),o},da=(e,r,t,s)=>{if(typeof e=="object"&&e!==null){if(t.has(e))throw new Error("Circular reference in options");t.add(e)}Object.entries(e).forEach(([o,n])=>{let i=r?r+o:o;if(typeof n=="object")da(n,i+".",t,s);else if(typeof n=="string"||typeof n=="number")s(i,n.toString());else if(typeof n=="boolean")s(i,n?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof n}`)})},qt=e=>{let r=Yt(),t=r.stackSave();try{let s=r.PTR_SIZE,o=r.stackAlloc(2*s);r._OrtGetLastError(o,o+s);let n=Number(r.getValue(o,s===4?"i32":"i64")),i=r.getValue(o+s,"*"),a=i?r.UTF8ToString(i):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${a}`)}finally{r.stackRestore(t)}}}),lb,Ex=Ue(()=>{Ln(),cu(),lb=e=>{let r=Yt(),t=0,s=[],o=e||{};try{if((e==null?void 0:e.logSeverityLevel)===void 0)o.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if((e==null?void 0:e.logVerbosityLevel)===void 0)o.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);(e==null?void 0:e.terminate)===void 0&&(o.terminate=!1);let n=0;return(e==null?void 0:e.tag)!==void 0&&(n=Es(e.tag,s)),t=r._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,n),t===0&&qt("Can't create run options."),(e==null?void 0:e.extra)!==void 0&&da(e.extra,"",new WeakSet,(i,a)=>{let l=Es(i,s),c=Es(a,s);r._OrtAddRunConfigEntry(t,l,c)!==0&&qt(`Can't set a run config entry: ${i} - ${a}.`)}),[t,s]}catch(n){throw t!==0&&r._OrtReleaseRunOptions(t),s.forEach(i=>r._free(i)),n}}}),cf,uf,df,zo,pf,cb,Px=Ue(()=>{Ln(),cu(),cf=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},uf=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},df=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let r=e.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(t=>(typeof t=="string"?t:t.name)==="webgpu")&&(e.enableMemPattern=!1)},zo=(e,r,t,s)=>{let o=Es(r,s),n=Es(t,s);Yt()._OrtAddSessionConfigEntry(e,o,n)!==0&&qt(`Can't set a session config entry: ${r} - ${t}.`)},pf=async(e,r,t)=>{for(let s of r){let o=typeof s=="string"?s:s.name,n=[];switch(o){case"webnn":if(o="WEBNN",typeof s!="string"){let m=s==null?void 0:s.deviceType;m&&zo(e,"deviceType",m,t)}break;case"webgpu":if(o="JS",typeof s!="string"){let m=s;if(m!=null&&m.preferredLayout){if(m.preferredLayout!=="NCHW"&&m.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${m.preferredLayout}`);zo(e,"preferredLayout",m.preferredLayout,t)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${o}`)}let i=Es(o,t),a=n.length,l=0,c=0;if(a>0){l=Yt()._malloc(a*Yt().PTR_SIZE),t.push(l),c=Yt()._malloc(a*Yt().PTR_SIZE),t.push(c);for(let m=0;m<a;m++)Yt().setValue(l+m*Yt().PTR_SIZE,n[m][0],"*"),Yt().setValue(c+m*Yt().PTR_SIZE,n[m][1],"*")}await Yt()._OrtAppendExecutionProvider(e,i,l,c,a)!==0&&qt(`Can't append execution provider: ${o}.`)}},cb=async e=>{let r=Yt(),t=0,s=[],o=e||{};df(o);try{let n=cf(o.graphOptimizationLevel??"all"),i=uf(o.executionMode??"sequential"),a=typeof o.logId=="string"?Es(o.logId,s):0,l=o.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log serverity level is not valid: ${l}`);let c=o.logVerbosityLevel??0;if(!Number.isInteger(c)||c<0||c>4)throw new Error(`log verbosity level is not valid: ${c}`);let m=typeof o.optimizedModelFilePath=="string"?Es(o.optimizedModelFilePath,s):0;if(t=r._OrtCreateSessionOptions(n,!!o.enableCpuMemArena,!!o.enableMemPattern,i,!!o.enableProfiling,0,a,l,c,m),t===0&&qt("Can't create session options."),o.executionProviders&&await pf(t,o.executionProviders,s),o.enableGraphCapture!==void 0){if(typeof o.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${o.enableGraphCapture}`);zo(t,"enableGraphCapture",o.enableGraphCapture.toString(),s)}if(o.freeDimensionOverrides)for(let[d,u]of Object.entries(o.freeDimensionOverrides)){if(typeof d!="string")throw new Error(`free dimension override name must be a string: ${d}`);if(typeof u!="number"||!Number.isInteger(u)||u<0)throw new Error(`free dimension override value must be a non-negative integer: ${u}`);let g=Es(d,s);r._OrtAddFreeDimensionOverride(t,g,u)!==0&&qt(`Can't set a free dimension override: ${d} - ${u}.`)}return o.extra!==void 0&&da(o.extra,"",new WeakSet,(d,u)=>{zo(t,d,u,s)}),[t,s]}catch(n){throw t!==0&&r._OrtReleaseSessionOptions(t)!==0&&qt("Can't release session options."),s.forEach(i=>r._free(i)),n}}}),to,Vs,In,uu,pa,du,pu,Vc,wt=Ue(()=>{to=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},Vs=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},In=(e,r)=>{let t=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],s=typeof r=="number"?r:r.reduce((o,n)=>o*n,1);return t>0?Math.ceil(s*t):void 0},uu=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},pa=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},du=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",pu=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Vc=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),mu,ub=Ue(()=>{iu(),mu=async e=>{if(typeof e=="string"){let r=await fetch(e);if(!r.ok)throw new Error(`failed to load external data file: ${e}`);let t=r.headers.get("Content-Length"),s=t?parseInt(t,10):0;if(s<1073741824)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let o=r.body.getReader(),n;try{n=new ArrayBuffer(s)}catch(a){if(a instanceof RangeError){let l=Math.ceil(s/65536);n=new WebAssembly.Memory({initial:l,maximum:l}).buffer}else throw a}let i=0;for(;;){let{done:a,value:l}=await o.read();if(a)break;let c=l.byteLength;new Uint8Array(n,i,c).set(l),i+=c}return new Uint8Array(n,0,s)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),mf,hf,_f,ff,hu,gf,zt,Us=Ue(()=>{wt(),mf=["V","I","W","E","F"],hf=(e,r)=>{console.log(`[${mf[e]},${new Date().toISOString()}]${r}`)},hu=(e,r)=>{_f=e,ff=r},gf=(e,r)=>{let t=pa(e),s=pa(_f);t>=s&&hf(t,typeof r=="function"?r():r)},zt=(...e)=>{ff&&gf(...e)}}),wf,no,ve,ma,db,pb,mb,Pt=Ue(()=>{wf=class{static calcMatMulShape(e,r){return e[1]!==r[0]?void 0:[e[0],r[1]]}},no=class{static calcShape(e,r,t=!1){let s=e.length,o=r.length;if(s===0)return r;if(o===0)return e;let n=Math.max(e.length,r.length),i=new Array(n);if(t){if(s<2||o<2)return;let a=wf.calcMatMulShape([e[s-2],e[s-1]],[r[o-2],r[o-1]]);if(a===void 0)return;[i[n-2],i[n-1]]=a}for(let a=t?3:1;a<=n;a++){let l=s-a<0?1:e[s-a],c=o-a<0?1:r[o-a];if(l!==c&&l>1&&c>1)return;let m=Math.max(l,c);if(l&&c)i[n-a]=Math.max(l,c);else{if(m>1)return;i[n-a]=0}}return i}static isValidBroadcast(e,r){let t=e.length,s=r.length;if(t>s)return!1;for(let o=1;o<=t;o++)if(e[t-o]!==1&&e[t-o]!==r[s-o])return!1;return!0}},ve=class ca{static size(r){return ca.getSizeFromDimensionRange(r,0,r.length)}static convertShape(r,t=4){let s=r.length;if(s===0)return[];let o=new Array(s),n=s-1;for(;n>=0;){if(r[n]%t===0){o[n]=r[n]/t;break}if(t%r[n]!==0)throw new Error("cannot convert shape");o[n]=1,t/=r[n],n--}for(n--;n>=0;n--)o[n]=r[n];return o}static sizeFromDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return ca.getSizeFromDimensionRange(r,t,r.length)}static sizeToDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${r.length} dimensions.`);return ca.getSizeFromDimensionRange(r,0,t)}static getSizeFromDimensionRange(r,t,s){let o=1;for(let n=t;n<s;n++){if(r[n]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");o*=Number(r[n])}return o}static computeStrides(r){let t=r.length;if(t===0)return[];if(t===1)return[1];let s=new Array(t);s[t-1]=1,s[t-2]=r[t-1];for(let o=t-3;o>=0;--o)s[o]=s[o+1]*r[o+1];return s}static normalizeAxis(r,t){if(r<-t&&r>=t)throw new Error("unsupported axis for this operation.");return r<0?r+t:r}static normalizeAxes(r,t){return r.map(s=>this.normalizeAxis(s,t??r.length))}static sortBasedOnPerm(r,t){return t?t.map(s=>r[s]):r.slice().reverse()}static padShape(r,t){let s=r.length;return r.map((o,n)=>o+t[n]+t[n+s])}static areEqual(r,t){return r.length!==t.length?!1:r.every((s,o)=>s===t[o])}},ma=class Ko{static adjustPoolAttributes(r,t,s,o,n,i){if(!r&&s.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(r)for(let a=0;a<t.length-2;a++)a>=s.length?s.push(t[a+2]):s[a]=t[a+2];for(let a=0;a<s.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<s.length;a++)if(a<n.length){if(n[a]<0)throw new Error("dilations should be greater than or equal to 1")}else n.push(1);for(let a=0;a<s.length*2;a++)if(a<i.length){if(i[a]<0)throw new Error("pad should be greater than or equal to 1")}else i.push(0);for(let a=0;a<s.length;a++){if(s[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(i[a]>=s[a]||i[a+s.length]>=s[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,t,s,o,n,i,a){if(a){if(n.length!==2*(r.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==r.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==r.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<r.length-2;l++)Ko.adjustPadAndReturnShape(r[l+(i?1:2)],t[l],s[l],o[l],n,l,l+r.length-2,a)}}static computePoolOutputShape(r,t,s,o,n,i,a){if(t.length<=0)throw new Error("input shape must be of size greater than 0");let l=[t[0],t[1]];return Ko.computeShapeHelper(r,t,l,s,o,n,i,a),l}static computeConvOutputShape(r,t,s,o,n,i,a){if(r.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[r[0],t[0]];return Ko.computeShapeHelper(!1,r,l,s,o,n,i,a),l}static computeShapeHelper(r,t,s,o,n,i,a,l){if(r)for(let c=0;c<t.length-2;c++)s.push(1);else for(let c=0;c<t.length-2;c++)s.push(Ko.adjustPadAndReturnShape(t[c+2],o[c],n[c],i[c],a,c,c+t.length-2,l))}static adjustPadAndReturnShape(r,t,s,o,n,i,a,l){let c=s*(o-1)+1;if(l&&l!=="NOTSET")switch(l){case"VALID":return n[i]=0,n[a]=0,Math.floor((r-c)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(s!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let m=((r+t-1)/t-1)*t+o-r;return n[i]=Math.floor(l==="SAME_LOWER"?(m+1)/2:m/2),n[a]=m-n[i],Math.floor((r+m-o)/t+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((r+n[i]+n[a]-c)/t+1)}},db=class{static getShapeOfGemmResult(e,r,t,s,o){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let n,i,a;r?(n=e[1],i=e[0]):(n=e[0],i=e[1]);let l=-1;if(s?(a=t[0],l=1):(a=t[1],l=0),t[l]!==i)throw new Error("dimension mismatch");if(n<=0||a<=0||i<=0)throw new Error("invalid shape specified");if(o&&!no.isValidBroadcast(o,[n,a]))throw new Error("gemm: invalid bias shape for broadcast");return[n,a,i]}},pb=-34028234663852886e22,mb=34028234663852886e22}),_u,hb=Ue(()=>{wt(),_u=(e,r)=>new(uu(r))(e)}),Uc,Zl,Mf,ec,bf,tc,rc,sc,yf,_b,Cx=Ue(()=>{Us(),Uc=(e,r=!0)=>{if(e.byteLength%8!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 8 (BigInt).");let t=e.byteLength/8,s=new BigInt64Array(e.buffer,e.byteOffset,t),o=new Int32Array(t);for(let n=0;n<t;n++){let i=s[n];if(i>2147483647n||i<-2147483648n)throw new Error(`Overflow occurred when converting BigInt to Int32 at index ${n}: ${i}`);o[n]=Number(i)}return r?new Uint8Array(o.buffer):o},Zl=(e,r=!0)=>{if(e.byteLength%4!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 4 (Int32).");let t=e.byteLength/4,s=new Int32Array(e.buffer,e.byteOffset,t),o=BigInt64Array.from(s,BigInt);return r?new Uint8Array(o.buffer):o},Mf=1,ec=()=>Mf++,bf=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),tc=(e,r)=>{let t=bf.get(e);if(!t)throw new Error("Unsupported data type.");return r.length>0?Math.ceil(r.reduce((s,o)=>s*o)*t/8):0},rc=class{constructor(e){this.shouldConvertInt64toInt32=!1,this.isInt64ToInt32Converted=!1;let{sessionId:r,context:t,tensor:s,dataType:o,shape:n,shouldConvertInt64toInt32:i=!1}=e;this.sessionId=r,this.mlContext=t,this.mlTensor=s,this.dataType=o,this.tensorShape=n,this.shouldConvertInt64toInt32=i}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return tc(this.dataType,this.tensorShape)}destroy(){zt("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e,r){if(e){let t=await this.mlContext.readTensor(this.mlTensor),s=Zl(new Uint8Array(t));if(r){(r instanceof ArrayBuffer?new Uint8Array(r):new Uint8Array(r.buffer,r.byteOffset,r.byteLength)).set(s);return}else return s.buffer}else return r?this.mlContext.readTensor(this.mlTensor,r):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,r,t){return this.mlContext===e&&this.dataType===r&&this.tensorShape.length===t.length&&this.tensorShape.every((s,o)=>s===t[o])}setIsInt64ToInt32Converted(e){this.isInt64ToInt32Converted=e}},sc=class{constructor(e,r){this.tensorManager=e,this.wrapper=r}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,r,t,s){let o=r,n=this.tensorManager.getMLContext(e),i=o==="int64"&&!n.opSupportLimits().input.dataTypes.includes("int64");if(i&&(o="int32",zt("verbose",()=>"[WebNN] TensorIdTracker.ensureTensor: convert dataType from int64 to int32")),this.wrapper){if(this.wrapper.canReuseTensor(n,o,t))return this.wrapper.tensor;if(s){if(this.wrapper.byteLength!==tc(o,t))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let a=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,o,t,a,!0,!0,i),s&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){let r=e;if(this.wrapper)if(this.wrapper.shouldConvertInt64toInt32&&(r=Uc(e,!0),this.wrapper.setIsInt64ToInt32Converted(!0)),r.byteLength===this.wrapper.byteLength){this.wrapper.write(r);return}else zt("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(r):this.activeUpload=new Uint8Array(r)}async download(e){var r,t,s;if(this.activeUpload){let o=(r=this.wrapper)!=null&&r.isInt64ToInt32Converted?Zl(this.activeUpload):this.activeUpload;if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(o):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(o);return}else return o.buffer}if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read((t=this.wrapper)==null?void 0:t.shouldConvertInt64toInt32,e):this.wrapper.read((s=this.wrapper)==null?void 0:s.shouldConvertInt64toInt32)}},yf=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(e){let r=this.backend.getMLContext(e);if(!r)throw new Error("MLContext not found for session.");return r}reserveTensorId(){let e=ec();return this.tensorTrackersById.set(e,new sc(this)),e}releaseTensorId(e){let r=this.tensorTrackersById.get(e);r&&(this.tensorTrackersById.delete(e),r.tensorWrapper&&this.releaseTensor(r.tensorWrapper))}async ensureTensor(e,r,t,s,o){zt("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${r}, dataType: ${t}, shape: ${s}, copyOld: ${o}}`);let n=this.tensorTrackersById.get(r);if(!n)throw new Error("Tensor not found.");return n.ensureTensor(e,t,s,o)}upload(e,r){let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");t.upload(r)}async download(e,r){zt("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${r==null?void 0:r.byteLength}}`);let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");return t.download(r)}releaseTensorsForSession(e){for(let r of this.freeTensors)r.sessionId===e&&r.destroy();this.freeTensors=this.freeTensors.filter(r=>r.sessionId!==e)}registerTensor(e,r,t,s){let o=this.getMLContext(e),n=ec(),i=new rc({sessionId:e,context:o,tensor:r,dataType:t,shape:s});return this.tensorTrackersById.set(n,new sc(this,i)),this.externalTensors.add(i),n}async getCachedTensor(e,r,t,s,o,n,i=!1){let a=this.getMLContext(e);for(let[c,m]of this.freeTensors.entries())if(m.canReuseTensor(a,r,t)){zt("verbose",()=>`[WebNN] Reusing tensor {dataType: ${r}, shape: ${t}}`);let d=this.freeTensors.splice(c,1)[0];return d.sessionId=e,d}zt("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${r}, shape: ${t}}`);let l=await a.createTensor({dataType:r,shape:t,dimensions:t,usage:s,writable:o,readable:n});return new rc({sessionId:e,context:a,tensor:l,dataType:r,shape:t,shouldConvertInt64toInt32:i})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},_b=(...e)=>new yf(...e)}),Xi,vf,fb,Sx=Ue(()=>{wt(),Ln(),hb(),Cx(),Us(),Xi=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),vf=(e,r)=>{if(e===r)return!0;if(e===void 0||r===void 0)return!1;let t=Object.keys(e).sort(),s=Object.keys(r).sort();return t.length===s.length&&t.every((o,n)=>o===s[n]&&e[o]===r[o])},fb=class{constructor(e){this.tensorManager=_b(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,hu(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){zt("verbose",()=>`[WebNN] onRunStart {sessionId: ${e}}`),this.activeSessionId=e}onRunEnd(e){zt("verbose",()=>`[WebNN] onRunEnd {sessionId: ${e}}`);let r=this.temporarySessionTensorIds.get(e);if(r){for(let t of r)zt("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t);this.temporarySessionTensorIds.delete(e),this.activeSessionId=void 0}}async createMLContext(e){if(e instanceof GPUDevice){let t=this.mlContextCache.findIndex(s=>s.gpuDevice===e);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:s}),s}}else if(e===void 0){let t=this.mlContextCache.findIndex(s=>s.options===void 0&&s.gpuDevice===void 0);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:s}),s}}let r=this.mlContextCache.findIndex(t=>vf(t.options,e));if(r!==-1)return this.mlContextCache[r].mlContext;{let t=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:t}),t}}registerMLContext(e,r){this.mlContextBySessionId.set(e,r);let t=this.sessionIdsByMLContext.get(r);t||(t=new Set,this.sessionIdsByMLContext.set(r,t)),t.add(e),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(e,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(e){this.sessionGraphInputs.delete(e);let r=this.mlContextBySessionId.get(e);if(!r)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let t=this.sessionIdsByMLContext.get(r);if(t.delete(e),t.size===0){this.sessionIdsByMLContext.delete(r);let s=this.mlContextCache.findIndex(o=>o.mlContext===r);s!==-1&&this.mlContextCache.splice(s,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){zt("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,r,t,s,o){let n=Xi.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e??this.currentSessionId,r,n,s,o)}async createTemporaryTensor(e,r,t){zt("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${r}, shape: ${t}}`);let s=Xi.get(r);if(!s)throw new Error(`Unsupported ONNX data type: ${r}`);let o=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(e,o,s,t,!1);let n=this.temporarySessionTensorIds.get(e);return n?n.push(o):this.temporarySessionTensorIds.set(e,[o]),o}uploadTensor(e,r){if(!Yt().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");zt("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${r.byteLength}}`),this.tensorManager.upload(e,r)}async downloadTensor(e,r){return this.tensorManager.download(e,r)}createMLTensorDownloader(e,r){return async()=>{let t=await this.tensorManager.download(e);return _u(t,r)}}registerMLTensor(e,r,t,s){let o=Xi.get(t);if(!o)throw new Error(`Unsupported ONNX data type: ${t}`);let n=this.tensorManager.registerTensor(e,r,o,s);return zt("verbose",()=>`[WebNN] registerMLTensor {tensor: ${r}, dataType: ${o}, dimensions: ${s}} -> {tensorId: ${n}}`),n}registerMLConstant(e,r,t,s,o,n,i=!1){if(!n)throw new Error("External mounted files are not available.");let a=e;e.startsWith("./")&&(a=e.substring(2));let l=n.get(a);if(!l)throw new Error(`File with name ${a} not found in preloaded files.`);if(r+t>l.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let c=l.slice(r,r+t).buffer,m;switch(o.dataType){case"float32":m=new Float32Array(c);break;case"float16":m=typeof Float16Array<"u"&&Float16Array.from?new Float16Array(c):new Uint16Array(c);break;case"int32":m=new Int32Array(c);break;case"uint32":m=new Uint32Array(c);break;case"int64":i?(m=Uc(new Uint8Array(c),!1),o.dataType="int32"):m=new BigInt64Array(c);break;case"uint64":m=new BigUint64Array(c);break;case"int8":m=new Int8Array(c);break;case"int4":case"uint4":case"uint8":m=new Uint8Array(c);break;default:throw new Error(`Unsupported data type: ${o.dataType} in creating WebNN Constant from external data.`)}return zt("verbose",()=>`[WebNN] registerMLConstant {dataType: ${o.dataType}, shape: ${o.shape}}} ${i?"(Note: it was int64 data type and registered to int32 as workaround)":""}`),s.constant(o,m)}registerGraphInput(e){this.temporaryGraphInputs.push(e)}isGraphInput(e,r){let t=this.sessionGraphInputs.get(e);return t?t.includes(r):!1}isInt64Supported(e){var r;return!!((r=this.mlContextBySessionId.get(e))!=null&&r.opSupportLimits().input.dataTypes.includes("int64"))}flush(){}}}),fu=Ue(()=>{}),nc,Ji,Yi,xf,Tf,oc,Wc,Ef,gb,$x=Ue(()=>{Us(),fu(),nc=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),Ji=[],Yi=e=>Math.ceil(Number(e)/16)*16,xf=e=>{for(let r=0;r<Ji.length;r++){let t=Ji[r];if(e<=t)return t}return Math.ceil(e/16)*16},Tf=1,oc=()=>Tf++,Wc=async(e,r,t,s)=>{let o=Yi(t),n=e.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let i=e.getCommandEncoder();e.endComputePass(),i.copyBufferToBuffer(r,0,n,0,o),e.flush(),await n.mapAsync(GPUMapMode.READ);let a=n.getMappedRange();if(s){let l=s();return l.set(new Uint8Array(a,0,t)),l}else return new Uint8Array(a.slice(0,t))}finally{n.destroy()}},Ef=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[r]of nc)Ji.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[]);this.sessionCount=0}upload(e,r){let t=r.buffer,s=r.byteOffset,o=r.byteLength,n=Yi(o),i=this.storageCache.get(e);if(!i)throw new Error("gpu data for uploading does not exist");if(Number(i.originalSize)!==o)throw new Error(`inconsistent data size. gpu data size=${i.originalSize}, data size=${o}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=a.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,s,o)),a.unmap();let c=this.backend.device.createCommandEncoder();c.copyBufferToBuffer(a,0,i.gpuData.buffer,0,n),this.backend.device.queue.submit([c.finish()]),a.destroy(),zt("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,r){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(r);if(!s)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==s.originalSize)throw new Error("inconsistent source and destination gpu data size");let o=Yi(t.originalSize),n=this.backend.getCommandEncoder();this.backend.endComputePass(),n.copyBufferToBuffer(t.gpuData.buffer,0,s.gpuData.buffer,0,o)}registerExternalBuffer(e,r,t){let s;if(t){if(s=t[0],e===t[1])return zt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else s=oc();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:e},originalSize:r}),zt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, registered.`),s}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),zt("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=xf(e),s,o=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,n=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(o||n){let a=(o?this.freeBuffers:this.freeUniformBuffers).get(t);a?a.length>0?s=a.pop():s=this.backend.device.createBuffer({size:t,usage:r}):s=this.backend.device.createBuffer({size:t,usage:r})}else s=this.backend.device.createBuffer({size:t,usage:r});let i={id:oc(),type:0,buffer:s};return this.storageCache.set(i.id,{gpuData:i,originalSize:Number(e)}),zt("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${i.id}`),i}get(e){var r;return(r=this.storageCache.get(e))==null?void 0:r.gpuData}release(e){let r=typeof e=="bigint"?Number(e):e,t=this.storageCache.get(r);if(!t){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return zt("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,r){let t=this.storageCache.get(Number(e));if(!t)throw new Error("data does not exist");await Wc(this.backend,t.gpuData.buffer,t.originalSize,r)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let r=nc.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let t=this.freeBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let t=this.freeUniformBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let r of this.buffersPending)e.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let r=this.capturedPendingBuffers.get(e);r&&(r.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(zt("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map)}},gb=(...e)=>new Ef(...e)}),Pf,Wt,pr=Ue(()=>{Pf=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Wt=e=>new Pf(e)}),oo,Zi,Or,qr,ut,cr,Gc,so,on,ct,Bo,ke,lt,wb,gu,Cf,Mb,Ct=Ue(()=>{wt(),Pt(),oo=64,Zi=(e,r)=>{if(r===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(r!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},Or=(e,r=1)=>{let t=Zi(e,r);return typeof t=="string"?t:t[0]},qr=(e,r=1)=>{let t=Zi(e,r);return typeof t=="string"?t:t[1]},ut=(...e)=>{let r=[];return e.forEach(t=>{t.length!==0&&r.push({type:12,data:t},{type:12,data:ve.computeStrides(t)})}),r},cr=e=>e%4===0?4:e%2===0?2:1,Gc=(e="f32",r,t="0")=>!r||r===1?`${e}(${t})`:`vec${r}<${e}>(${t})`,so=(e,r,t)=>e==="f32"?t:r===1?`f32(${t})`:`vec${r}<f32>(${t})`,on=(e,r)=>r===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:r===2?`(${e}.x + ${e}.y)`:r===3?`(${e}.x + ${e}.y + ${e}.z)`:e,ct=(e,r,t,s)=>e.startsWith("uniforms.")&&t>4?typeof r=="string"?s==="f16"?`${e}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${e}[(${r}) / 4][(${r}) % 4]`:s==="f16"?`${e}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${e}[${Math.floor(r/4)}][${r%4}]`:t>1?`${e}[${r}]`:e,Bo=(e,r,t,s,o)=>{let n=typeof t=="number",i=n?t:t.length,a=[...new Array(i).keys()],l=i<2?"u32":i<=4?`vec${i}<u32>`:`array<u32, ${i}>`,c=Zi(r,o),m=typeof c=="string"?c:c[1],d=typeof c=="string"?c:c[0],u={indices:l,value:m,storage:d,tensor:r},g=N=>typeof N=="string"?N:`${N}u`,f={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},y=n?"uniforms.":"",I=`${y}${e}_shape`,w=`${y}${e}_strides`,b="";for(let N=0;N<i-1;N++)b+=`
    let dim${N} = current / ${ct(w,N,i)};
    let rest${N} = current % ${ct(w,N,i)};
    indices[${N}] = dim${N};
    current = rest${N};
    `;b+=`indices[${i-1}] = current;`;let k=i<2?"":`
  fn o2i_${e}(offset: u32) -> ${u.indices} {
    var indices: ${u.indices};
    var current = offset;
    ${b}
    return indices;
  }`,x=N=>(f.offsetToIndices=!0,i<2?N:`o2i_${e}(${N})`),v=[];if(i>=2)for(let N=i-1;N>=0;N--)v.push(`${ct(w,N,i)} * (indices[${N}])`);let E=i<2?"":`
  fn i2o_${e}(indices: ${u.indices}) -> u32 {
    return ${v.join("+")};
  }`,T=N=>(f.indicesToOffset=!0,i<2?N:`i2o_${e}(${N})`),C=(...N)=>i===0?"0u":`${u.indices}(${N.map(g).join(",")})`,D=(N,O)=>i<2?`${N}`:`${ct(N,O,i)}`,z=(N,O,W)=>i<2?`${N}=${W};`:`${ct(N,O,i)}=${W};`,K={},H=(N,O)=>{f.broadcastedIndicesToOffset=!0;let W=`${O.name}broadcastedIndicesTo${e}Offset`;if(W in K)return`${W}(${N})`;let ne=[];for(let fe=i-1;fe>=0;fe--){let ae=O.indicesGet("outputIndices",fe+O.rank-i);ne.push(`${D(w,fe)} * (${ae} % ${D(I,fe)})`)}return K[W]=`fn ${W}(outputIndices: ${O.type.indices}) -> u32 {
             return ${ne.length>0?ne.join("+"):"0u"};
           }`,`${W}(${N})`},R=(N,O)=>(()=>{if(u.storage===u.value)return`${e}[${N}]=${O};`;if(u.storage==="vec2<u32>"&&u.value==="i32")return`${e}[${N}]=vec2<u32>(u32(${O}), select(0u, 0xFFFFFFFFu, ${O} < 0));`;if(u.storage==="vec2<u32>"&&u.value==="u32")return`${e}[${N}]=vec2<u32>(u32(${O}), 0u);`;if(u.storage==="u32"&&u.value==="vec4<bool>")return`${e}[${N}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${O}));`;throw new Error(`not supported combination of storage type ${u.storage} and value type ${u.value} yet`)})(),re=N=>(()=>{if(u.storage===u.value)return`${e}[${N}]`;if(u.storage==="vec2<u32>"&&u.value==="i32")return`i32(${e}[${N}].x)`;if(u.storage==="vec2<u32>"&&u.value==="u32")return`u32(${e}[${N}].x)`;if(u.storage==="u32"&&u.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${N}] & 0xFFu), bool(${e}[${N}] & 0xFF00u), bool(${e}[${N}] & 0xFF0000u), bool(${e}[${N}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${u.storage} and value type ${u.value} yet`)})(),q=i<2?"":`
  fn get_${e}ByIndices(indices: ${u.indices}) -> ${m} {
    return ${re(`i2o_${e}(indices)`)};
  }`,te=i<2?"":(()=>{let N=a.map(W=>`d${W}: u32`).join(", "),O=a.map(W=>`d${W}`).join(", ");return`
  fn get_${e}(${N}) -> ${m} {
    return get_${e}ByIndices(${C(O)});
  }`})(),ee=(...N)=>{if(N.length!==i)throw new Error(`indices length must be ${i}`);let O=N.map(g).join(",");return i===0?re("0u"):i===1?re(O[0]):(f.get=!0,f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}(${O})`)},ie=N=>i<2?re(N):(f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}ByIndices(${N})`),he=i<2?"":`
  fn set_${e}ByIndices(indices: ${u.indices}, value: ${m}) {
    ${R(`i2o_${e}(indices)`,"value")}
  }`,de=i<2?"":(()=>{let N=a.map(W=>`d${W}: u32`).join(", "),O=a.map(W=>`d${W}`).join(", ");return`
  fn set_${e}(${N}, value: ${m}) {
    set_${e}ByIndices(${C(O)}, value);
  }`})();return{impl:()=>{let N=[],O=!1;return f.offsetToIndices&&(N.push(k),O=!0),f.indicesToOffset&&(N.push(E),O=!0),f.broadcastedIndicesToOffset&&(Object.values(K).forEach(W=>N.push(W)),O=!0),f.set&&(N.push(de),O=!0),f.setByIndices&&(N.push(he),O=!0),f.get&&(N.push(te),O=!0),f.getByIndices&&(N.push(q),O=!0),!n&&O&&N.unshift(`const ${I} = ${u.indices}(${t.join(",")});`,`const ${w} = ${u.indices}(${ve.computeStrides(t).join(",")});`),N.join(`
`)},type:u,offsetToIndices:x,indicesToOffset:T,broadcastedIndicesToOffset:H,indices:C,indicesGet:D,indicesSet:z,set:(...N)=>{if(N.length!==i+1)throw new Error(`indices length must be ${i}`);let O=N[i];if(typeof O!="string")throw new Error("value must be string");let W=N.slice(0,i).map(g).join(",");return i===0?R("0u",O):i===1?R(W[0],O):(f.set=!0,f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}(${W}, ${O})`)},setByOffset:R,setByIndices:(N,O)=>i<2?R(N,O):(f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}ByIndices(${N}, ${O});`),get:ee,getByOffset:re,getByIndices:ie,usage:s,name:e,strides:w,shape:I,rank:i}},ke=(e,r,t,s=1)=>Bo(e,r,t,"input",s),lt=(e,r,t,s=1)=>Bo(e,r,t,"output",s),wb=(e,r,t)=>Bo(e,r,t,"atomicOutput",1),gu=(e,r,t,s=1)=>Bo(e,r,t,"internal",s),Cf=class{constructor(e,r){this.normalizedDispatchGroup=e,this.limits=r,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=oo){let r=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],s=typeof e=="number"?1:e[2];if(r>this.limits.maxComputeWorkgroupSizeX||t>this.limits.maxComputeWorkgroupSizeY||s>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*t*s>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let o=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,n=o?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,i=o?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${r*t*s}u + local_idx;`;return`@compute @workgroup_size(${r}, ${t}, ${s})
  fn main(${n}) {
    ${i}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,r){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",s=e.usage==="atomicOutput"?"atomic<i32>":e.type.storage;return`@group(0) @binding(${r}) var<storage, ${t}> ${e.name}: array<${s}>;`}declareVariables(...e){return e.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(e,r,t=1){return this.uniforms.push({name:e,type:r,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:r,type:t,length:s}of this.uniforms)if(s&&s>4)t==="f16"?e.push(`@align(16) ${r}:array<mat2x4<${t}>, ${Math.ceil(s/8)}>`):e.push(`${r}:array<vec4<${t}>, ${Math.ceil(s/4)}>`);else{let o=s==null||s===1?t:`vec${s}<${t}>`;e.push(`${r}:${o}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[e(r.type),r.length??1])}},Mb=(e,r)=>new Cf(e,r)}),Sf,ic,$f,kf,If,Af,is,bb,yb,an=Ue(()=>{wt(),Pt(),pr(),Ct(),Sf=(e,r)=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.");if(r.length!==0&&r.length!==e[0].dims.length)throw new Error(`perm size ${r.length} does not match input rank ${e[0].dims.length}`)},ic=(e,r)=>r.length!==0?r:[...new Array(e).keys()].reverse(),$f=(e,r)=>ve.sortBasedOnPerm(e,ic(e.length,r)),kf=(e,r,t,s)=>{let o=`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`;for(let n=0;n<r;++n)o+=`a[${e[n]}]=i[${n}];`;return o+="return a;}"},If=(e,r)=>{let t=[],s=[];for(let o=0;o<e.length;++o)e[o]!==1&&t.push(e[o]),e[r[o]]!==1&&s.push(r[o]);return{newShape:t,newPerm:s}},Af=(e,r)=>{let t=0;for(let s=0;s<e.length;++s)if(r[e[s]]!==1){if(e[s]<t)return!1;t=e[s]}return!0},is=(e,r)=>{let t=e.dataType,s=e.dims.length,o=ic(s,r),n=$f(e.dims,o),i=e.dims,a=n,l=s<2||Af(o,e.dims),c;if(l)return c=f=>{let y=ke("input",t,i,4),I=lt("output",t,a,4);return`
  ${f.registerUniform("output_size","u32").declareVariables(y,I)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let f=ve.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(f/64/4)},programUniforms:[{type:12,data:Math.ceil(f/4)}]}},getShaderSource:c};let{newShape:m,newPerm:d}=If(e.dims,o),u=ve.areEqual(d,[2,3,1]),g=ve.areEqual(d,[3,1,2]);if(m.length===2||u||g){i=u?[m[0],m[1]*m[2]]:g?[m[0]*m[1],m[2]]:m,a=[i[1],i[0]];let f=16;return c=y=>{let I=ke("a",t,i.length),w=lt("output",t,a.length);return`
  ${y.registerUniform("output_size","u32").declareVariables(I,w)}
  var<workgroup> tile : array<array<${w.type.value}, ${f+1}>, ${f}>;
  ${y.mainStart([f,f,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${f} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${f}u + local_id.x;
    let input_row = workgroup_id_x * ${f}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${I.getByIndices(`${I.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${f}u + local_id.x;
    let output_row = workgroup_id_y * ${f}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${w.setByIndices(`${w.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let y=ve.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(a[1]/f),y:Math.ceil(a[0]/f)},programUniforms:[{type:12,data:y},...ut(i,a)]}},getShaderSource:c}}return c=f=>{let y=ke("a",t,i.length),I=lt("output",t,a.length);return`
  ${f.registerUniform("output_size","u32").declareVariables(y,I)}

  ${kf(o,s,y,I)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${I.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${I.setByOffset("global_idx",y.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>{let f=ve.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...ut(i,a)]}},getShaderSource:c}},bb=(e,r)=>{Sf(e.inputs,r.perm),e.compute(is(e.inputs[0],r.perm))},yb=e=>Wt({perm:e.perm})}),Ff,Of,Df,Lf,zf,Bf,Rf,jf,Nf,Vf,bs,vb,xb,Tb,Eb,Pb,Cb,Sb,$b,kb,Ib,kx=Ue(()=>{wt(),Pt(),Ct(),wu(),an(),Ff={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Of={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Df={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Lf={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},zf=(e,r)=>{let t=[];for(let s=r-e;s<r;++s)t.push(s);return t},Bf=(e,r)=>{let t=[],s=e.length;for(let n=0;n<s;n++)r.indexOf(n)===-1&&t.push(e[n]);let o=r.map(n=>e[n]);return[t,o]},Rf=(e,r)=>{let t=e.length+r.length,s=[],o=0;for(let n=0;n<t;n++)r.indexOf(n)===-1?s.push(e[o++]):s.push(1);return s},jf=(e,r)=>{for(let t=0;t<e.length;++t)if(e[e.length-t-1]!==r-1-t)return!1;return!0},Nf=(e,r)=>{let t=[];if(!jf(e,r)){for(let s=0;s<r;++s)e.indexOf(s)===-1&&t.push(s);e.forEach(s=>t.push(s))}return t},Vf=(e,r,t,s,o,n,i)=>{let a=t[0].dims,l=ve.size(n),c=ve.size(i),m=ke("_A",t[0].dataType,a),d=lt("output",o,n),u=64;l===1&&(u=256);let g=`
          var<workgroup> aBestValues : array<f32, ${u}>;
       `,f=y=>`
        ${y.registerUniform("reduceSize","u32").declareVariables(m,d)}
        ${g}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${y.mainStart(u)}

          let outputIndex = global_idx / ${u};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${Df[s]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${u}) {
           let candidate = f32(${m.getByOffset("offset + k")});
           bestValue = ${Ff[s]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${u}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Of[s]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${d.setByOffset("outputIndex",`${s==="mean"?`${d.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${d.type.storage}(${Lf[s]})`}`)};
         }
        }`;return{name:e,shaderCache:{hint:`${r};${u}`,inputDependencies:["type"]},getShaderSource:f,getRunData:()=>({outputs:[{dims:n,dataType:o}],dispatchGroup:{x:l},programUniforms:[{type:12,data:c}]})}},bs=(e,r,t,s)=>{let o=e.inputs.length===1?t:Kc(e.inputs,t),n=o.axes;n.length===0&&!o.noopWithEmptyAxes&&(n=e.inputs[0].dims.map((g,f)=>f));let i=ve.normalizeAxes(n,e.inputs[0].dims.length),a=i,l=e.inputs[0],c=Nf(a,e.inputs[0].dims.length);c.length>0&&(l=e.compute(is(e.inputs[0],c),{inputs:[0],outputs:[-1]})[0],a=zf(a.length,l.dims.length));let[m,d]=Bf(l.dims,a),u=m;o.keepDims&&(u=Rf(m,i)),e.compute(Vf(r,o.cacheKey,[l],s,e.inputs[0].dataType,u,d),{inputs:[l]})},vb=(e,r)=>{bs(e,"ReduceMeanShared",r,"mean")},xb=(e,r)=>{bs(e,"ReduceL1Shared",r,"l1")},Tb=(e,r)=>{bs(e,"ReduceL2Shared",r,"l2")},Eb=(e,r)=>{bs(e,"ReduceLogSumExpShared",r,"logSumExp")},Pb=(e,r)=>{bs(e,"ReduceMaxShared",r,"max")},Cb=(e,r)=>{bs(e,"ReduceMinShared",r,"min")},Sb=(e,r)=>{bs(e,"ReduceProdShared",r,"prod")},$b=(e,r)=>{bs(e,"ReduceSumShared",r,"sum")},kb=(e,r)=>{bs(e,"ReduceSumSquareShared",r,"sumSquare")},Ib=(e,r)=>{bs(e,"ReduceLogSumShared",r,"logSum")}}),ys,Uf,ha,Kc,vs,Wf,Gf,Kf,Hf,qf,Qf,Xf,Jf,Yf,Zf,xs,Ab,Fb,Ob,Db,Lb,zb,Bb,Rb,jb,Nb,wu=Ue(()=>{wt(),Pt(),pr(),Ct(),kx(),ys=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Uf=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],ha=(e,r,t,s,o,n,i=!1,a=!1)=>{let l=[],c=t[0].dims,m=c.length,d=ve.normalizeAxes(o,m),u=!a&&d.length===0;c.forEach((y,I)=>{u||d.indexOf(I)>=0?i&&l.push(1):l.push(y)});let g=l.length,f=ve.size(l);return{name:e,shaderCache:r,getShaderSource:y=>{let I=[],w=ke("_A",t[0].dataType,m),b=lt("output",n,g),k=s(w,b,d),x=k[2];for(let v=0,E=0;v<m;v++)u||d.indexOf(v)>=0?(i&&E++,x=`for(var j${v}: u32 = 0; j${v} < ${c[v]}; j${v}++) {
                  ${k[2].includes("last_index")?`let last_index = j${v};`:""}
                  ${w.indicesSet("input_indices",v,`j${v}`)}
                  ${x}
                }`):(I.push(`${w.indicesSet("input_indices",v,b.indicesGet("output_indices",E))};`),E++);return`

        ${y.registerUniform("output_size","u32").declareVariables(w,b)}

        ${y.mainStart()}
          ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${w.type.indices};
          let output_indices = ${b.offsetToIndices("global_idx")};

          ${I.join(`
`)}
          ${k[0]}       // init ops for reduce max/min
          ${k[1]}
          ${x}
          ${k[3]}
          ${k.length===4?b.setByOffset("global_idx","value"):k.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:l,dataType:n}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...ut(c,l)]})}},Kc=(e,r)=>{let t=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(s=>t.push(Number(s))),Wt({axes:t,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},vs=(e,r,t,s)=>{let o=e.inputs,n=o.length===1?t:Kc(o,t);e.compute(ha(r,{hint:n.cacheKey,inputDependencies:["rank"]},[o[0]],n.noopWithEmptyAxes&&n.axes.length===0?Uf:s,n.axes,o[0].dataType,n.keepDims,n.noopWithEmptyAxes),{inputs:[0]})},Wf=(e,r)=>{ys(e.inputs),vs(e,"ReduceLogSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},Gf=(e,r)=>{ys(e.inputs),vs(e,"ReduceL1",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},Kf=(e,r)=>{ys(e.inputs),vs(e,"ReduceL2",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Hf=(e,r)=>{ys(e.inputs),vs(e,"ReduceLogSumExp",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},qf=(e,r)=>{ys(e.inputs),vs(e,"ReduceMax",r,(t,s,o)=>{let n=[];for(let i=0;i<t.rank;i++)(o.indexOf(i)>=0||o.length===0)&&n.push(t.indicesSet("input_indices",i,0));return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},Qf=(e,r)=>{ys(e.inputs),vs(e,"ReduceMean",r,(t,s,o)=>{let n=1;for(let i=0;i<t.rank;i++)(o.indexOf(i)>=0||o.length===0)&&(n*=e.inputs[0].dims[i]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${n});`]})},Xf=(e,r)=>{ys(e.inputs),vs(e,"ReduceMin",r,(t,s,o)=>{let n=[];for(let i=0;i<t.rank;i++)(o.indexOf(i)>=0||o.length===0)&&n.push(`input_indices[${i}] = 0;`);return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},Jf=(e,r)=>{ys(e.inputs),vs(e,"ReduceProd",r,(t,s)=>[`var value = ${s.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},Yf=(e,r)=>{ys(e.inputs),vs(e,"ReduceSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},Zf=(e,r)=>{ys(e.inputs),vs(e,"ReduceSumSquare",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},xs=(e,r,t)=>{if(r.length===0)return t;let s=1,o=1;for(let n=0;n<r.length;n++)r.indexOf(n)===-1?s*=e[n]:o*=e[n];return o<32&&s>1024},Ab=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Qf(e,r):vb(e,r)},Fb=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Gf(e,r):xb(e,r)},Ob=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Kf(e,r):Tb(e,r)},Db=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Hf(e,r):Eb(e,r)},Lb=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?qf(e,r):Pb(e,r)},zb=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Xf(e,r):Cb(e,r)},Bb=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Jf(e,r):Sb(e,r)},Rb=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Yf(e,r):$b(e,r)},jb=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Zf(e,r):kb(e,r)},Nb=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Wf(e,r):Ib(e,r)}}),ac,Vb,Ub,Hc,Ix=Ue(()=>{wt(),pr(),wu(),ac=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Vb=(e,r)=>{ac(e.inputs);let t=(s,o,n)=>{let i=[];for(let a=0;a<s.rank;a++)(n.indexOf(a)>=0||n.length===0)&&i.push(`input_indices[${a}] = 0;`);return[`${i.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};e.compute(ha("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},Ub=(e,r)=>{ac(e.inputs);let t=(s,o,n)=>{let i=[];for(let a=0;a<s.rank;a++)(n.indexOf(a)>=0||n.length===0)&&i.push(`input_indices[${a}] = 0;`);return[`${i.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};e.compute(ha("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},Hc=e=>Wt(e)}),eg,ea,tg,rg,sg,Zo,ng,Wb,Mu=Ue(()=>{wt(),Pt(),fu(),Ct(),eg=(e,r)=>{let t=e[0],s=e[1],o=e[2],n=e[3],i=e[4],a=e[5];if(i&&a)throw new Error("Attention cannot have both past and attention_bias");if(t.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let l=t.dims[0],c=t.dims[1],m=t.dims[2];if(o.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(s.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(s.dims[0]!==m)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(o.dims[0]!==s.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let d=o.dims[0]/3,u=d,g=u;if(r.qkvHiddenSizes.length>0){if(r.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let k of r.qkvHiddenSizes)if(k%r.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");d=r.qkvHiddenSizes[0],u=r.qkvHiddenSizes[1],g=r.qkvHiddenSizes[2]}let f=c;if(d!==u)throw new Error("qkv_hidden_sizes first element should be same as the second");if(o.dims[0]!==d+u+g)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let y=0;if(i){if(u!==g)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(i.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(i.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(i.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(i.dims[2]!==r.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(i.dims[4]!==u/r.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');r.pastPresentShareBuffer||(y=i.dims[3])}let I=f+y,w=-1,b=0;if(n)throw new Error("Mask not supported");if(i)throw new Error("past is not supported");if(a){if(a.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(a.dims[0]!==l||a.dims[1]!==r.numHeads||a.dims[2]!==c||a.dims[3]!==I)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:c,pastSequenceLength:y,kvSequenceLength:f,totalSequenceLength:I,maxSequenceLength:w,inputHiddenSize:m,hiddenSize:d,vHiddenSize:g,headSize:Math.floor(d/r.numHeads),vHeadSize:Math.floor(g/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:b,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},ea=(e,r,t)=>r&&e?`
      let total_sequence_length_input = u32(${r.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e==null?void 0:e.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${t?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,tg=(e,r,t,s,o,n,i,a)=>{let l=cr(i?1:n),c=64,m=n/l;m<c&&(c=32);let d=Math.ceil(n/l/c),u=[{type:12,data:r},{type:12,data:t},{type:12,data:s},{type:12,data:o},{type:12,data:m},{type:12,data:d}],g=Or(e.dataType,l),f=qr(1,l),y=["type"];i&&y.push("type"),a&&y.push("type");let I=w=>{let b=lt("x",e.dataType,e.dims,l),k=[b],x=i?ke("seq_lens",i.dataType,i.dims):void 0;x&&k.push(x);let v=a?ke("total_sequence_length_input",a.dataType,a.dims):void 0;v&&k.push(v);let E=qr(e.dataType),T=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${c}>;
  var<workgroup> thread_sum: array<f32, ${c}>;
  ${w.registerUniforms(T).declareVariables(...k)}
  ${w.mainStart([c,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${ea(x,v,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${c}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${i?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${f}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${f}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(l){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${c}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${f}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${f}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(l){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${c}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${b.type.value}(${E}(1.0) / ${E}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${f}(x[offset + i]);
        x[offset + i] = ${b.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${i?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${b.type.value}(${E}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${c};${g};${l}`,inputDependencies:y},getShaderSource:I,getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:o,z:r*t},programUniforms:u})}},rg=(e,r,t,s,o,n,i,a,l)=>{let c=i+n.kvSequenceLength,m=[n.batchSize,n.numHeads,n.sequenceLength,c],d=e>1&&s,u=n.kvNumHeads?n.kvNumHeads:n.numHeads,g=d?[n.batchSize,u,c,n.headSize]:void 0,f=n.nReps?n.nReps:1,y=n.scale===0?1/Math.sqrt(n.headSize):n.scale,I=cr(n.headSize),w=n.headSize/I,b=12,k={x:Math.ceil(c/b),y:Math.ceil(n.sequenceLength/b),z:n.batchSize*n.numHeads},x=[{type:12,data:n.sequenceLength},{type:12,data:w},{type:12,data:c},{type:12,data:n.numHeads},{type:12,data:n.headSize},{type:1,data:y},{type:12,data:i},{type:12,data:n.kvSequenceLength},{type:12,data:f}],v=d&&s&&ve.size(s.dims)>0,E=["type","type"];v&&E.push("type"),o&&E.push("type"),a&&E.push("type"),l&&E.push("type");let T=[{dims:m,dataType:r.dataType,gpuDataType:0}];d&&T.push({dims:g,dataType:r.dataType,gpuDataType:0});let C=D=>{let z=ke("q",r.dataType,r.dims,I),K=ke("key",t.dataType,t.dims,I),H=[z,K];if(v){let he=ke("past_key",s.dataType,s.dims,I);H.push(he)}o&&H.push(ke("attention_bias",o.dataType,o.dims));let R=a?ke("seq_lens",a.dataType,a.dims):void 0;R&&H.push(R);let re=l?ke("total_sequence_length_input",l.dataType,l.dims):void 0;re&&H.push(re);let q=lt("output",r.dataType,m),te=[q];d&&te.push(lt("present_key",r.dataType,g,I));let ee=qr(1,I),ie=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${b}u;

  var<workgroup> tileQ: array<${z.type.storage}, ${b*b}>;
  var<workgroup> tileK: array<${z.type.storage}, ${b*b}>;
  ${D.registerUniforms(ie).declareVariables(...H,...te)}
  ${D.mainStart([b,b,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${f===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${f===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${ea(R,re,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${v&&d?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${d?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${ee}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${v&&d?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${d?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${ee}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(I){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${I}`)}})()};
        output[outputIdx] = ${q.type.value} (sum * uniforms.alpha) + ${o?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${I};${o!==void 0};${s!==void 0};${e}`,inputDependencies:E},getRunData:()=>({outputs:T,dispatchGroup:k,programUniforms:x}),getShaderSource:C}},sg=(e,r,t,s,o,n,i=void 0,a=void 0)=>{let l=n+o.kvSequenceLength,c=o.nReps?o.nReps:1,m=o.vHiddenSize*c,d=e>1&&s,u=o.kvNumHeads?o.kvNumHeads:o.numHeads,g=d?[o.batchSize,u,l,o.headSize]:void 0,f=[o.batchSize,o.sequenceLength,m],y=12,I={x:Math.ceil(o.vHeadSize/y),y:Math.ceil(o.sequenceLength/y),z:o.batchSize*o.numHeads},w=[{type:12,data:o.sequenceLength},{type:12,data:l},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.headSize},{type:12,data:m},{type:12,data:n},{type:12,data:o.kvSequenceLength},{type:12,data:c}],b=d&&s&&ve.size(s.dims)>0,k=["type","type"];b&&k.push("type"),i&&k.push("type"),a&&k.push("type");let x=[{dims:f,dataType:r.dataType,gpuDataType:0}];d&&x.push({dims:g,dataType:r.dataType,gpuDataType:0});let v=E=>{let T=ke("probs",r.dataType,r.dims),C=ke("v",t.dataType,t.dims),D=[T,C];b&&D.push(ke("past_value",s.dataType,s.dims));let z=i?ke("seq_lens",i.dataType,i.dims):void 0;i&&D.push(z);let K=a?ke("total_sequence_length_input",a.dataType,a.dims):void 0;a&&D.push(K);let H=[lt("output",r.dataType,f)];d&&H.push(lt("present_value",r.dataType,g));let R=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${y}u;
  var<workgroup> tileQ: array<${T.type.value}, ${y*y}>;
  var<workgroup> tileV: array<${T.type.value}, ${y*y}>;
  ${E.registerUniforms(R).declareVariables(...D,...H)}
  ${E.mainStart([y,y,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${c===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${c===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${ea(z,K,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${b&&d?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${d?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${T.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${b&&d?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${d?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${s!==void 0};${e}`,inputDependencies:k},getRunData:()=>({outputs:x,dispatchGroup:I,programUniforms:w}),getShaderSource:v}},Zo=(e,r,t,s,o,n,i,a,l,c,m=void 0,d=void 0)=>{let u=Math.min(e.outputCount,1+(i?1:0)+(a?1:0)),g=u>1?c.pastSequenceLength:0,f=g+c.kvSequenceLength,y=l&&ve.size(l.dims)>0?l:void 0,I=[r,t];u>1&&i&&ve.size(i.dims)>0&&I.push(i),y&&I.push(y),m&&I.push(m),d&&I.push(d);let w=e.compute(rg(u,r,t,i,y,c,g,m,d),{inputs:I,outputs:u>1?[-1,1]:[-1]})[0];e.compute(tg(w,c.batchSize,c.numHeads,g,c.sequenceLength,f,m,d),{inputs:m&&d?[w,m,d]:[w],outputs:[]});let b=[w,s];u>1&&a&&ve.size(a.dims)>0&&b.push(a),m&&b.push(m),d&&b.push(d),e.compute(sg(u,w,s,a,c,g,m,d),{inputs:b,outputs:u>1?[0,2]:[0]})},ng=(e,r)=>{let t=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],s=r.sequenceLength,o=r.inputHiddenSize,n=r.headSize,i=12,a={x:Math.ceil(r.headSize/i),y:Math.ceil(r.sequenceLength/i),z:r.batchSize*r.numHeads},l=[e.inputs[0],e.inputs[1],e.inputs[2]],c=[{type:12,data:s},{type:12,data:o},{type:12,data:n},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}],m=d=>{let u=lt("output_q",l[0].dataType,t),g=lt("output_k",l[0].dataType,t),f=lt("output_v",l[0].dataType,t),y=ke("input",l[0].dataType,l[0].dims),I=ke("weight",l[1].dataType,l[1].dims),w=ke("bias",l[2].dataType,l[2].dims),b=y.type.storage,k=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${i}u;
  var<workgroup> tileInput: array<${b}, ${i*i}>;
  var<workgroup> tileWeightQ: array<${b}, ${i*i}>;
  var<workgroup> tileWeightK: array<${b}, ${i*i}>;
  var<workgroup> tileWeightV: array<${b}, ${i*i}>;
  ${d.registerUniforms(k).declareVariables(y,I,w,u,g,f)}
  ${d.mainStart([i,i,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${b}(0);
    var valueK = ${b}(0);
    var valueV = ${b}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:c}),getShaderSource:m},{inputs:l,outputs:[-1,-1,-1]})},Wb=(e,r)=>{let t=eg(e.inputs,r),[s,o,n]=ng(e,t);return Zo(e,s,o,n,e.inputs[4],void 0,void 0,void 0,e.inputs[5],t)}}),og,ig,ag,Gb,Ax=Ue(()=>{$s(),wt(),Pt(),pr(),Ct(),og=(e,r)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let t=(s,o,n)=>{let i=o.length;if(i!==s.length)throw new Error(`${n}: num dimensions != ${i}`);o.forEach((a,l)=>{if(a!==s[l])throw new Error(`${n}: dim[${l}] do not match`)})};if(e[0].dims.length>1){let s=r.format==="NHWC"?r.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,r.spatial?2:void 0);t(e[1].dims,s,"Invalid input scale"),t(e[2].dims,s,"Invalid input B"),t(e[3].dims,s,"Invalid input mean"),t(e[4].dims,s,"Invalid input var")}else t(e[1].dims,[1],"Invalid input scale"),t(e[2].dims,[1],"Invalid input B"),t(e[3].dims,[1],"Invalid input mean"),t(e[4].dims,[1],"Invalid input var")},ig=(e,r)=>{let{epsilon:t,spatial:s,format:o}=r,n=e[0].dims,i=s?cr(n[n.length-1]):1,a=o==="NHWC"&&n.length>1?i:1,l=ve.size(n)/i,c=s,m=c?n.length:n,d=ke("x",e[0].dataType,e[0].dims,i),u=ke("scale",e[1].dataType,e[1].dims,a),g=ke("bias",e[2].dataType,e[2].dims,a),f=ke("inputMean",e[3].dataType,e[3].dims,a),y=ke("inputVar",e[4].dataType,e[4].dims,a),I=lt("y",e[0].dataType,m,i),w=()=>{let k="";if(s)k=`let cOffset = ${n.length===1?"0u":o==="NHWC"?`outputIndices[${n.length-1}] / ${i}`:"outputIndices[1]"};`;else if(o==="NCHW")k=`
            ${I.indicesSet("outputIndices","0","0")}
            let cOffset = ${I.indicesToOffset("outputIndices")};`;else{k=`var cIndices = ${u.type.indices}(0);
                       cIndices[0] = outputIndices[${n.length-1}];`;for(let x=1;x<u.rank;x++)k+=`cIndices[${x}] = outputIndices[${x}];`;k+=`let cOffset = ${u.indicesToOffset("cIndices")};`}return k},b=k=>`
  const epsilon = ${t};
  ${k.registerUniform("outputSize","u32").declareVariables(d,u,g,f,y,I)}
  ${k.mainStart()}
  ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${I.offsetToIndices(`global_idx * ${i}`)};
    ${w()}
    let scale = ${u.getByOffset("cOffset")};
    let bias = ${g.getByOffset("cOffset")};
    let inputMean = ${f.getByOffset("cOffset")};
    let inputVar = ${y.getByOffset("cOffset")};
    let x = ${d.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${I.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${s}_${i}`,inputDependencies:c?["rank","type","type","type","type"]:void 0},getShaderSource:b,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c?[{type:12,data:l},...ut(n)]:[{type:12,data:l}]})}},ag=e=>Wt(e),Gb=(e,r)=>{let{inputs:t,outputCount:s}=e,o=ag({...r,outputCount:s});if(er.webgpu.validateInputContent&&og(t,o),r.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(ig(t,o))}}),lg,cg,Kb,Fx=Ue(()=>{Pt(),Ct(),lg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},cg=e=>{let r=e[0].dims,t=e[0].dims[2],s=ve.size(r)/4,o=e[0].dataType,n=ke("input",o,r,4),i=ke("bias",o,[t],4),a=ke("residual",o,r,4),l=lt("output",o,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:c=>`
  const channels = ${t}u / 4;
  ${c.declareVariables(n,i,a,l)}

  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let value = ${n.getByOffset("global_idx")}
      + ${i.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${l.setByOffset("global_idx","value")}
  }`}},Kb=e=>{lg(e.inputs),e.compute(cg(e.inputs))}}),ug,Nt,Hb,qb,Qb,Xb,Jb,Yb,Zb,ey,ty,dg,ry,sy,ny,oy,Ho,iy,ua,ay,ly,cy,uy,dy,py,my,hy,_y,fy,gy,wy,My,by,yy,vy,lc,xy,qc,Qc,Ty,Ey,Py,pg,mg,Cy,bu=Ue(()=>{wt(),Pt(),pr(),Ct(),ug=(e,r,t,s,o,n,i)=>{let a=Math.ceil(r/4),l="";typeof o=="string"?l=`${o}(a)`:l=o("a");let c=ke("inputData",t,[a],4),m=lt("outputData",s,[a],4),d=[{name:"vec_size",type:"u32"}];return i&&d.push(...i),`
      ${e.registerUniforms(d).declareVariables(c,m)}

  ${n??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${c.getByOffset("global_idx")};
    ${m.setByOffset("global_idx",l)}
  }`},Nt=(e,r,t,s,o,n=e.dataType,i,a)=>{let l=[{type:12,data:Math.ceil(ve.size(e.dims)/4)}];return i&&l.push(...i),{name:r,shaderCache:{hint:o,inputDependencies:["type"]},getShaderSource:c=>ug(c,ve.size(e.dims),e.dataType,n,t,s,a),getRunData:c=>({outputs:[{dims:e.dims,dataType:n}],dispatchGroup:{x:Math.ceil(ve.size(c[0].dims)/64/4)},programUniforms:l})}},Hb=e=>{e.compute(Nt(e.inputs[0],"Abs","abs"))},qb=e=>{e.compute(Nt(e.inputs[0],"Acos","acos"))},Qb=e=>{e.compute(Nt(e.inputs[0],"Acosh","acosh"))},Xb=e=>{e.compute(Nt(e.inputs[0],"Asin","asin"))},Jb=e=>{e.compute(Nt(e.inputs[0],"Asinh","asinh"))},Yb=e=>{e.compute(Nt(e.inputs[0],"Atan","atan"))},Zb=e=>{e.compute(Nt(e.inputs[0],"Atanh","atanh"))},ey=e=>Wt(e),ty=(e,r)=>{let t;switch(r.to){case 10:t="vec4<f16>";break;case 1:t="vec4<f32>";break;case 12:t="vec4<u32>";break;case 6:t="vec4<i32>";break;case 9:t="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${r.to}`)}e.compute(Nt(e.inputs[0],"Cast",t,void 0,r.cacheKey,r.to))},dg=e=>{let r,t,s=e.length>=2&&e[1].data!==0,o=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:r=s?e[1].getFloat32Array()[0]:-34028234663852886e22,t=o?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:r=s?e[1].getUint16Array()[0]:64511,t=o?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return Wt({min:r,max:t})},ry=(e,r)=>{let t=r||dg(e.inputs),s=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"Clip",o=>`clamp(${o}, vec4<${s}>(uniforms.min), vec4<${s}>(uniforms.max))`,void 0,t.cacheKey,void 0,[{type:e.inputs[0].dataType,data:t.min},{type:e.inputs[0].dataType,data:t.max}],[{name:"min",type:s},{name:"max",type:s}]),{inputs:[0]})},sy=e=>{e.compute(Nt(e.inputs[0],"Ceil","ceil"))},ny=e=>{e.compute(Nt(e.inputs[0],"Cos","cos"))},oy=e=>{e.compute(Nt(e.inputs[0],"Cosh","cosh"))},Ho=e=>Wt(e),iy=(e,r)=>{let t=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"Elu",s=>`elu_vf32(${s})`,`
  const elu_alpha_ = ${t}(${r.alpha});

  fn elu_f32(a: ${t}) -> ${t} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${t}>) -> vec4<${t}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,r.cacheKey))},ua=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,ay=e=>{let r=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"Erf",t=>`erf_vf32(${t})`,ua(r)))},ly=e=>{e.compute(Nt(e.inputs[0],"Exp","exp"))},cy=e=>{e.compute(Nt(e.inputs[0],"Floor","floor"))},uy=e=>{let r=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,ua(r)))},dy=(e,r)=>{let t=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"LeakyRelu",s=>`select(leaky_relu_alpha_ * ${s}, ${s}, ${s} >= vec4<${t}>(0.0))`,`const leaky_relu_alpha_ = ${t}(${r.alpha});`,r.cacheKey))},py=e=>{e.compute(Nt(e.inputs[0],"Not",r=>`!${r}`))},my=e=>{e.compute(Nt(e.inputs[0],"Neg",r=>`-${r}`))},hy=e=>{e.compute(Nt(e.inputs[0],"Reciprocal",r=>`1.0/${r}`))},_y=e=>{let r=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},fy=e=>{e.compute(Nt(e.inputs[0],"Sigmoid",r=>`(1.0 / (1.0 + exp(-${r})))`))},gy=e=>Wt(e),wy=(e,r)=>{let t=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"HardSigmoid",s=>`max(vec4<${t}>(0.0), min(vec4<${t}>(1.0), ${r.alpha} * ${s} + vec4<${t}>(${r.beta})))`,void 0,r.cacheKey))},My=e=>{e.compute(Nt(e.inputs[0],"Sin","sin"))},by=e=>{e.compute(Nt(e.inputs[0],"Sinh","sinh"))},yy=e=>{e.compute(Nt(e.inputs[0],"Sqrt","sqrt"))},vy=e=>{e.compute(Nt(e.inputs[0],"Tan","tan"))},lc=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,xy=e=>{e.compute(Nt(e.inputs[0],"Tanh",lc))},qc=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${lc("v")};
}
`,Qc=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Ty=e=>{let r=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"FastGelu",Qc,qc(r),void 0,e.inputs[0].dataType))},Ey=(e,r)=>{let t=qr(e.inputs[0].dataType);return e.compute(Nt(e.inputs[0],"ThresholdedRelu",s=>`select(vec4<${t}>(0.0), ${s}, ${s} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${t}>(${r.alpha});`,r.cacheKey)),0},Py=e=>{e.compute(Nt(e.inputs[0],"Log","log"))},pg=(e,r)=>`
const alpha = vec4<${e}>(${r});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,mg=e=>`quick_gelu_impl(${e})`,Cy=(e,r)=>{let t=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"QuickGelu",mg,pg(t,r.alpha),r.cacheKey,e.inputs[0].dataType))}}),hg,_g,Sy,Ox=Ue(()=>{Pt(),Ct(),bu(),hg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},_g=e=>{let r=e[0].dims.slice();r[2]=r[2]/2;let t=ke("input",e[0].dataType,e[0].dims,4),s=ke("bias",e[0].dataType,[e[0].dims[2]],4),o=lt("output",e[0].dataType,r,4),n=ve.size(r)/4,i=Or(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:a=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${a.declareVariables(t,s,o)}

  ${ua(i)}

  ${a.mainStart()}
    ${a.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${o.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Sy=e=>{hg(e.inputs),e.compute(_g(e.inputs))}}),fg,gg,Ts,$y,ky,Iy,Ay,Fy,Oy,Dy,Ly,zy,By,Dx=Ue(()=>{wt(),Pt(),Ct(),fg=(e,r,t,s,o,n,i,a,l,c,m,d)=>{let u,g;typeof a=="string"?u=g=(b,k)=>`${a}((${b}),(${k}))`:typeof a=="function"?u=g=a:(u=a.scalar,g=a.vector);let f=lt("outputData",m,s.length,4),y=ke("aData",l,r.length,4),I=ke("bData",c,t.length,4),w;if(o)if(n){let b=ve.size(r)===1,k=ve.size(t)===1,x=r.length>0&&r[r.length-1]%4===0,v=t.length>0&&t[t.length-1]%4===0;b||k?w=f.setByOffset("global_idx",g(b?`${y.type.value}(${y.getByOffset("0")}.x)`:y.getByOffset("global_idx"),k?`${I.type.value}(${I.getByOffset("0")}.x)`:I.getByOffset("global_idx"))):w=`
            let outputIndices = ${f.offsetToIndices("global_idx * 4u")};
            let offsetA = ${y.broadcastedIndicesToOffset("outputIndices",f)};
            let offsetB = ${I.broadcastedIndicesToOffset("outputIndices",f)};
            ${f.setByOffset("global_idx",g(i||x?y.getByOffset("offsetA / 4u"):`${y.type.value}(${y.getByOffset("offsetA / 4u")}[offsetA % 4u])`,i||v?I.getByOffset("offsetB / 4u"):`${I.type.value}(${I.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else w=f.setByOffset("global_idx",g(y.getByOffset("global_idx"),I.getByOffset("global_idx")));else{if(!n)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let b=(k,x,v="")=>{let E=`aData[indexA${x}][componentA${x}]`,T=`bData[indexB${x}][componentB${x}]`;return`
            let outputIndices${x} = ${f.offsetToIndices(`global_idx * 4u + ${x}u`)};
            let offsetA${x} = ${y.broadcastedIndicesToOffset(`outputIndices${x}`,f)};
            let offsetB${x} = ${I.broadcastedIndicesToOffset(`outputIndices${x}`,f)};
            let indexA${x} = offsetA${x} / 4u;
            let indexB${x} = offsetB${x} / 4u;
            let componentA${x} = offsetA${x} % 4u;
            let componentB${x} = offsetB${x} % 4u;
            ${k}[${x}] = ${v}(${u(E,T)});
          `};m===9?w=`
            var data = vec4<u32>(0);
            ${b("data",0,"u32")}
            ${b("data",1,"u32")}
            ${b("data",2,"u32")}
            ${b("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:w=`
            ${b("outputData[global_idx]",0)}
            ${b("outputData[global_idx]",1)}
            ${b("outputData[global_idx]",2)}
            ${b("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(y,I,f)}

        ${d??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${w}
      }`},gg=(e,r,t,s,o,n,i=t.dataType)=>{let a=t.dims.map(y=>Number(y)??1),l=s.dims.map(y=>Number(y)??1),c=!ve.areEqual(a,l),m=a,d=ve.size(a),u=!1,g=!1,f=[c];if(c){let y=no.calcShape(a,l,!1);if(!y)throw new Error("Can't perform binary op on the given tensors");m=y.slice(),d=ve.size(m);let I=ve.size(a)===1,w=ve.size(l)===1,b=a.length>0&&a[a.length-1]%4===0,k=l.length>0&&l[l.length-1]%4===0;f.push(I),f.push(w),f.push(b),f.push(k);let x=1;for(let v=1;v<m.length;v++){let E=a[a.length-v],T=l[l.length-v];if(E===T)x*=E;else break}x%4===0?(g=!0,u=!0):(I||w||b||k)&&(u=!0)}else u=!0;return f.push(u),{name:e,shaderCache:{hint:r+f.map(y=>y.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:y=>fg(y,a,l,m,u,c,g,o,t.dataType,s.dataType,i,n),getRunData:()=>({outputs:[{dims:m,dataType:i}],dispatchGroup:{x:Math.ceil(d/64/4)},programUniforms:[{type:12,data:Math.ceil(ve.size(m)/4)},...ut(a,l,m)]})}},Ts=(e,r,t,s,o,n)=>{e.compute(gg(r,o??"",e.inputs[0],e.inputs[1],t,s,n))},$y=e=>{Ts(e,"Add",(r,t)=>`${r}+${t}`)},ky=e=>{Ts(e,"Div",(r,t)=>`${r}/${t}`)},Iy=e=>{Ts(e,"Equal",{scalar:(r,t)=>`u32(${r}==${t})`,vector:(r,t)=>`vec4<u32>(${r}==${t})`},void 0,void 0,9)},Ay=e=>{Ts(e,"Mul",(r,t)=>`${r}*${t}`)},Fy=e=>{let r=ke("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Ts(e,"Pow",{scalar:(t,s)=>`pow_custom(${t},${s})`,vector:(t,s)=>`pow_vector_custom(${t},${s})`},`
    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {
      if (b == ${r}(0.0)) {
        return ${r}(1.0);
      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {
        return ${r}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${r==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {
      // TODO: implement vectorized pow
      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},Oy=e=>{Ts(e,"Sub",(r,t)=>`${r}-${t}`)},Dy=e=>{Ts(e,"Greater",{scalar:(r,t)=>`u32(${r}>${t})`,vector:(r,t)=>`vec4<u32>(${r}>${t})`},void 0,void 0,9)},Ly=e=>{Ts(e,"Less",{scalar:(r,t)=>`u32(${r}<${t})`,vector:(r,t)=>`vec4<u32>(${r}<${t})`},void 0,void 0,9)},zy=e=>{Ts(e,"GreaterOrEqual",{scalar:(r,t)=>`u32(${r}>=${t})`,vector:(r,t)=>`vec4<u32>(${r}>=${t})`},void 0,void 0,9)},By=e=>{Ts(e,"LessOrEqual",{scalar:(r,t)=>`u32(${r}<=${t})`,vector:(r,t)=>`vec4<u32>(${r}<=${t})`},void 0,void 0,9)}}),wg,Mg,bg,yg,Ry,jy,Lx=Ue(()=>{wt(),Pt(),pr(),Ct(),wg=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");let t=0,s=e[t],o=s.dataType,n=s.dims.length;e.forEach((i,a)=>{if(a!==t){if(i.dataType!==o)throw new Error("input tensors should be one type");if(i.dims.length!==n)throw new Error("input tensors should have the same shape");i.dims.forEach((l,c)=>{if(c!==r&&l!==s.dims[c])throw new Error("non concat dimensions must match")})}})},Mg=(e,r)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${r});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,bg=(e,r)=>{let t=e.length,s=[];for(let o=0;o<t;++o){let n=r.setByOffset("global_idx",e[o].getByIndices("indices"));t===1?s.push(n):o===0?s.push(`if (inputIndex == ${o}u) { ${n} }`):o===t-1?s.push(`else { ${n} }`):s.push(`else if (inputIndex == ${o}) { ${n} }`)}return s.join(`
`)},yg=(e,r,t,s)=>{let o=ve.size(t),n=new Array(e.length),i=new Array(e.length),a=0,l=[],c=[],m=[{type:12,data:o}];for(let y=0;y<e.length;++y)a+=e[y].dims[r],n[y]=a,c.push(e[y].dims.length),i[y]=ke(`input${y}`,s,c[y]),l.push("rank"),m.push({type:12,data:n[y]});for(let y=0;y<e.length;++y)m.push(...ut(e[y].dims));m.push(...ut(t));let d=lt("output",s,t.length),u=d.indicesGet("indices",r),g=Array.from(Array(n.length).keys()).map(y=>`uniforms.sizeInConcatAxis${y}`).join(","),f=y=>`

  ${(()=>{y.registerUniform("outputSize","u32");for(let I=0;I<e.length;I++)y.registerUniform(`sizeInConcatAxis${I}`,"u32");return y.declareVariables(...i,d)})()}

  ${Mg(n.length,g)}

  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${d.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${u});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${n.length}u>(${g});
      ${u} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${bg(i,d)}
  }`;return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:t,dataType:s}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:m}),getShaderSource:f}},Ry=(e,r)=>{let t=e.inputs,s=t[0].dims,o=ve.normalizeAxis(r.axis,s.length);wg(t,o);let n=s.slice();n[o]=t.reduce((a,l)=>a+(l.dims.length>o?l.dims[o]:0),0);let i=t.filter(a=>ve.size(a.dims)>0);e.compute(yg(i,o,n,t[0].dataType),{inputs:i})},jy=e=>Wt({axis:e.axis})}),Fn,On,Dn,yu,zn=Ue(()=>{wt(),Pt(),Fn=(e,r,t="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${t}(uniforms.clip_min)), ${r}(${t}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${t}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},On=(e,r)=>{e.activation==="Clip"?r.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?r.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&r.push({type:1,data:e.alpha})},Dn=(e,r)=>{e.activation==="Clip"?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&r.push({name:"alpha",type:"f32"})},yu=e=>{let r=(e==null?void 0:e.activation)||"";if(r==="HardSigmoid"){let[t,s]=(e==null?void 0:e.activation_params)||[.2,.5];return{activation:r,alpha:t,beta:s}}else if(r==="Clip"){let[t,s]=(e==null?void 0:e.activation_params)||[pb,mb];return{activation:r,clipMax:s,clipMin:t}}else if(r==="LeakyRelu"){let[t]=(e==null?void 0:e.activation_params)||[.01];return{activation:r,alpha:t}}return{activation:r}}}),zr,Ny,vu=Ue(()=>{zr=(e,r)=>{switch(e){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw new Error(`${e}-component is not supported.`)}},Ny=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),Vy,zx=Ue(()=>{Vy=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),Xo,xu,Tu=Ue(()=>{wt(),Pt(),Ct(),zn(),Xo=(e,r,t,s,o)=>{let n=s-t;return`
      ${Array.from({length:t}).map((i,a)=>`
      if (${ct(r.shape,a,r.rank)} != 1) {
        ${r.indicesSet(e,a,ct(o,a+n,s))}
      } else {
        ${r.indicesSet(e,a,0)}
      }`).join("")}
`},xu=(e,r,t,s,o=!1,n)=>{let i=e[0].dims,a=e[1].dims,l=i[i.length-2],c=a[a.length-1],m=i[i.length-1],d=cr(c),u=cr(m),g=cr(l),f=ve.size(t)/d/g,y=e.length>2,I=s?s.slice(0,-2):t.slice(0,-2),w=[ve.size(I),l,c],b=[{type:12,data:f},{type:12,data:l},{type:12,data:c},{type:12,data:m}];On(r,b),b.push(...ut(I,i,a)),y&&b.push(...ut(e[2].dims)),b.push(...ut(w));let k=x=>{let v=gu("batch_dims",e[0].dataType,I.length),E=ke("a",e[0].dataType,i.length,u),T=ke("b",e[1].dataType,a.length,d),C=lt("output",e[0].dataType,w.length,d),D=Or(C.type.tensor),z=Fn(r,C.type.value,D),K=[E,T],H="";if(y){let q=o?d:1;K.push(ke("bias",e[2].dataType,e[2].dims.length,q)),H=`${o?`value += bias[col / ${q}];`:`value += ${C.type.value}(bias[row + i]);`}`}let R=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Dn(r,R);let re=()=>{let q=`var a_data: ${E.type.value};`;for(let te=0;te<u;te++)q+=`
              let b_data${te} = b[(b_offset + (k + ${te}) * uniforms.N + col) / ${d}];`;for(let te=0;te<g;te++){q+=`a_data = a[(a_offset + (row + ${te}) * uniforms.K + k) / ${u}];`;for(let ee=0;ee<u;ee++)q+=`
            values[${te}] = fma(${T.type.value}(a_data${u===1?"":`[${ee}]`}), b_data${ee}, values[${te}]);
`}return q};return`
  ${x.registerUniforms(R).registerInternalVariables(v).declareVariables(...K,C)}
  ${x.mainStart()}
    ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${g};
    let row = (index1 % stride1) * ${g};
    let batch = index1 / stride1;

    ${t.length===2?"":`let batch_indices = ${v.offsetToIndices("batch")};`}

    var a_indices: ${E.type.indices};
    ${Xo("a_indices",E,E.rank-2,v.rank,"batch_indices")}
    ${E.indicesSet("a_indices",E.rank-2,0)}
    ${E.indicesSet("a_indices",E.rank-1,0)}
    let a_offset = ${E.indicesToOffset("a_indices")};

    var b_indices: ${T.type.indices};
    ${Xo("b_indices",T,T.rank-2,v.rank,"batch_indices")}
    ${T.indicesSet("b_indices",T.rank-2,0)}
    ${T.indicesSet("b_indices",T.rank-1,0)}
    let b_offset = ${T.indicesToOffset("b_indices")};
    var values: array<${C.type.value}, ${g}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${u}) {
      ${re()}
    }
    for (var i = 0u; i < ${g}u; i++) {
      var value = values[i];
      ${H}
      ${z}
      let cur_indices = ${C.type.indices}(batch, row + i, col);
      let offset = ${C.indicesToOffset("cur_indices")};
      ${C.setByOffset(`offset / ${d}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${d};${u};${g};${o}`,inputDependencies:y?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:b}),getShaderSource:k}}}),vg,xg,Xc,cc,Tg,Jc,Eg,_a,Eu=Ue(()=>{wt(),Pt(),Ct(),zn(),Tu(),vu(),vg=(e,r)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${r?", batchIndices":""});
        `,xg=(e,r)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${r===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Xc=(e,r,t="f32",s,o=!1,n=32,i=!1,a=32)=>{let l=r[1]*e[1],c=r[0]*e[0],m=o?l:n,d=o?n:l,u=m/r[0],g=n/r[1];if(!((o&&u===4&&e[1]===4||!o&&(u===3||u===4))&&m%r[0]===0&&n%r[1]===0&&e[0]===4))throw new Error(`If transposeA ${o} is true, innerElementSize ${u} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${u} must be 3 or 4.
  tileAWidth ${m} must be divisible by workgroupSize[0]${r[0]}. tileInner ${n} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${u}<${t}>, ${m/u}>, ${d}>;
var<workgroup> mm_Bsub: array<array<vec4<${t}>, ${c/e[0]}>, ${n}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${u};
const tileInner = ${n};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${i?"0":"i32(globalId.z)"};
  ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${l};

  let num_tiles = ${i?`${Math.ceil(a/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${i?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${t}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${g};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${vg(o,s)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${s?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${u===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${xg(o,u)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},cc=(e,r)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${r?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${r?", batchIndices":""});
            `,Tg=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Jc=(e,r,t="f32",s,o=!1,n=32,i=!1,a=32,l=!1)=>{let c=e[1]*r[1],m=e[0]*r[0],d=o?c:n,u=o?n:c;if(!(u%r[1]===0&&d%r[0]===0&&n%r[1]===0))throw new Error(`tileAHight ${u} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${d} must be divisible by workgroupSize[0]${r[0]}, tileInner ${n} must be divisible by workgroupSize[1]${r[1]}`);let g=u/r[1],f=d/r[0],y=n/r[1],I=l?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${c};
    let globalColStart = i32(workgroupId.x) * ${m};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${r[1]}) {
        for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${r[0]}) {
          ${cc(o,s)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${r[1]}) {
            for (var inputCol = localCol; inputCol < ${m}; inputCol = inputCol + ${r[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${s?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${t}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${o?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${r[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${r[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${c};

let tileRowA = i32(localId.y) * ${g};
let tileColA = i32(localId.x) * ${f};
let tileRowB = i32(localId.y) * ${y};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${cc(o,s)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${y}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${s?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${t}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Tg(o)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${t}, ${d}>, ${u}>;
  var<workgroup> mm_Bsub : array<array<${t}, ${m}>, ${n}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${n};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${i?"0":"i32(globalId.z)"};
    ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${i?`${Math.ceil(a/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${i?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${t}, colPerThread>, rowPerThread>;
    ${I}
  }
`},Eg=(e,r,t,s,o=!1)=>{let[n,i,a,l]=s,c=Or(s[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${zr(e,c)} {
      var value = ${zr(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${i.type.indices};
        ${Xo("aIndices",i,i.rank-2,n.rank,"batchIndices")}
        ${i.indicesSet("aIndices",i.rank-2,"u32(row)")}
        ${i.indicesSet("aIndices",i.rank-1,"u32(colIn)")}
        value = ${i.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${zr(e,c)} {
      var value = ${zr(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${a.type.indices};
        ${Xo("bIndices",a,a.rank-2,n.rank,"batchIndices")}
        ${a.indicesSet("bIndices",a.rank-2,"u32(row)")}
        ${a.indicesSet("bIndices",a.rank-1,"u32(colIn)")}
        value = ${a.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${zr(e,c)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${r?`value = value + ${o?"bias[colIn]":`${zr(e,c)}(bias[row])`};`:""}
        ${t}
        ${l.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},_a=(e,r,t,s,o=!1,n)=>{let i=e[0].dims,a=e[1].dims,l=i.slice(0,-2),c=a.slice(0,-2),m=s?s.slice(0,-2):t.slice(0,-2),d=ve.size(m),u=i[i.length-2],g=i[i.length-1],f=a[a.length-1],y=g%4===0&&f%4===0,I=u<=8?[4,1,1]:[4,4,1],w=[8,8,1],b=[Math.ceil(f/w[0]/I[0]),Math.ceil(u/w[1]/I[1]),Math.ceil(d/w[2]/I[2])],k=y?4:1,x=[...l,u,g/k],v=x.length,E=[...c,g,f/k],T=E.length,C=[d,u,f/k],D=[{type:6,data:u},{type:6,data:f},{type:6,data:g}];On(r,D),D.push(...ut(m,x,E));let z=["rank","rank"],K=e.length>2;K&&(D.push(...ut(e[2].dims)),z.push("rank")),D.push(...ut(C));let H=R=>{let re=m.length,q=gu("batchDims",e[0].dataType,re,1),te=Or(e[0].dataType),ee=ke("a",e[0].dataType,v,k),ie=ke("b",e[1].dataType,T,k),he=lt("result",e[0].dataType,C.length,k),de=[ee,ie];if(K){let fe=o?k:1;de.push(ke("bias",e[2].dataType,e[2].dims.length,fe))}let N=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Dn(r,N);let O=Or(he.type.tensor),W=Fn(r,he.type.value,O),ne=Eg(k,K,W,[q,ee,ie,he],o);return`
  ${R.registerUniforms(N).registerInternalVariables(q).declareVariables(...de,he)}
  ${ne}
  ${y?Xc(I,w,te,q):Jc(I,w,te,q)}
                   `};return{name:"MatMul",shaderCache:{hint:`${I};${r.activation};${y};${o}`,inputDependencies:z},getRunData:()=>({outputs:[{dims:n?n(t):t,dataType:e[0].dataType}],dispatchGroup:{x:b[0],y:b[1],z:b[2]},programUniforms:D}),getShaderSource:H}}}),Pg,Uy,Bx=Ue(()=>{wt(),Us(),Ct(),zn(),vu(),zx(),Eu(),Pg=(e,r,t,s,o=!1,n,i=4,a=4,l=4,c="f32")=>{let m=D=>{switch(D){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${c}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${D} is not supported.`)}},d=D=>{switch(D){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${D} is not supported.`)}},u=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,g=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,f=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",y=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",I=e?"row":"col",w=e?"col":"row",b=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${I} / outWidth;
    let outCol = ${I} % outWidth;

    let WRow = ${w} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${w} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${w} % inChannels;
    var resData = ${zr(i,c)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${y}) {
      ${u}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${m(i)}
    }
    return resData;`,k=e?r&&s?`
    let col = colIn * ${i};
    ${b}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${b}
    }
    return ${zr(i,c)}(0.0);`:s&&t?`
    let col = colIn * ${i};
    ${b}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${b}
    }
    return ${zr(i,c)}(0.0);`,x=e?s&&t?d(a):`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${d(a)}
    }
    return ${zr(a,c)}(0.0);`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${d(a)}
    }
    return ${zr(a,c)}(0.0);`,v=zr(l,c),E=zr(e?i:a,c),T=zr(e?a:i,c),C=Fn(n,v,c);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${E} {
      ${e?k:x}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${T} {
      ${e?x:k}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${v}) {
      let col = colIn * ${l};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${g}
      ${Ny(o)}
      ${C}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Uy=(e,r,t,s,o,n,i,a,l)=>{let c=r.format==="NHWC",m=c?e[0].dims[3]:e[0].dims[1],d=t[0],u=c?t[2]:t[3],g=c?t[1]:t[2],f=c?t[3]:t[1],y=c&&(m%4===0||m%3===0)&&f%4===0,I=c?f:u*g,w=c?u*g:f,b=[8,8,1],k=s<=8?[4,1,1]:[4,4,1],x=[Math.ceil(I/b[0]/k[0]),Math.ceil(w/b[1]/k[1]),Math.ceil(d/b[2]/k[2])];zt("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${x}`);let v=y?c&&m%4!==0?3:4:1,E=b[1]*k[1],T=b[0]*k[0],C=Math.max(b[0]*v,b[1]),D=s%E===0,z=o%T===0,K=n%C===0,H=y?[v,4,4]:[1,1,1],R=[{type:6,data:s},{type:6,data:o},{type:6,data:n},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];On(r,R),R.push(...ut(e[0].dims,e[1].dims));let re=["rank","rank"];i&&(R.push(...ut(e[2].dims)),re.push("rank")),R.push(...ut(t));let q=te=>{let ee=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Dn(r,ee);let ie=y?4:1,he=Or(e[0].dataType),de=`
      fn setOutputAtIndex(flatIndex : i32, value : ${y?`vec4<${he}>`:he}) {
        result[flatIndex] = ${y?`vec4<${he}>`:he}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${y?`vec4<${he}>`:he}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${y?"/ 4":""}, value);
      }`,N=ke("x",e[0].dataType,e[0].dims.length,v===3?1:v),O=ke("w",e[1].dataType,e[1].dims.length,ie),W=[N,O],ne=lt("result",e[0].dataType,t.length,ie);if(i){let fe=ke("bias",e[2].dataType,e[2].dims.length,ie);W.push(fe),de+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${y?`vec4<${he}>`:he} {
          return bias[coords.${c?"w":"y"}${y?"/ 4":""}];
        }`}return`
        ${Vy("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${te.registerUniforms(ee).declareVariables(...W,ne)}
        ${de}
        ${Pg(c,D,z,K,i,r,H[0],H[1],H[2],he)}
        ${y?Xc(k,b,he,void 0,!c,C):Jc(k,b,he,void 0,!c,C,!1,void 0,a)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${v};${y};${D};${z};${K};${E};${T};${C}`,inputDependencies:re},getRunData:()=>({outputs:[{dims:l?l(t):t,dataType:e[0].dataType}],dispatchGroup:{x:x[0],y:x[1],z:x[2]},programUniforms:R}),getShaderSource:q}}}),Cg,uc,Ro,Sg,dc,$g,Wy,Gy,Rx=Ue(()=>{wt(),Us(),Pt(),Ct(),zn(),vu(),Cg=e=>{let r=1;for(let t=0;t<e.length;t++)r*=e[t];return r},uc=e=>typeof e=="number"?[e,e,e]:e,Ro=(e,r)=>r<=1?e:e+(e-1)*(r-1),Sg=(e,r,t,s=1)=>{let o=Ro(r,s);return Math.floor((e[0]*(t-1)-t+o)/2)},dc=(e,r,t,s,o)=>{o==null&&(o=Sg(e,r[0],s[0]));let n=[0,0,0,t];for(let i=0;i<3;i++)e[i]+2*o>=r[i]&&(n[i]=Math.trunc((e[i]-r[i]+2*o)/s[i]+1));return n},$g=(e,r,t,s,o,n,i,a,l,c)=>{let m,d,u,g;if(e==="VALID"&&(e=0),typeof e=="number"){m={top:e,bottom:e,left:e,right:e,front:e,back:e};let f=dc([r,t,s,1],[a,l,c],1,[o,n,i],e);d=f[0],u=f[1],g=f[2]}else if(Array.isArray(e)){if(!e.every((y,I,w)=>y===w[0]))throw Error(`Unsupported padding parameter: ${e}`);m={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let f=dc([r,t,s,1],[a,l,c],1,[o,n,i],e[0]);d=f[0],u=f[1],g=f[2]}else if(e==="SAME_UPPER"){d=Math.ceil(r/o),u=Math.ceil(t/n),g=Math.ceil(s/i);let f=(d-1)*o+a-r,y=(u-1)*n+l-t,I=(g-1)*i+c-s,w=Math.floor(f/2),b=f-w,k=Math.floor(y/2),x=y-k,v=Math.floor(I/2),E=I-v;m={top:k,bottom:x,left:v,right:E,front:w,back:b}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:m,outDepth:d,outHeight:u,outWidth:g}},Wy=(e,r,t,s,o,n=!1,i="channelsLast")=>{let a,l,c,m,d;if(i==="channelsLast")[a,l,c,m,d]=e;else if(i==="channelsFirst")[a,d,l,c,m]=e;else throw new Error(`Unknown dataFormat ${i}`);let[u,,g,f,y]=r,[I,w,b]=uc(t),[k,x,v]=uc(s),E=Ro(g,k),T=Ro(f,x),C=Ro(y,v),{padInfo:D,outDepth:z,outHeight:K,outWidth:H}=$g(o,l,c,m,I,w,b,E,T,C),R=n?u*d:u,re=[0,0,0,0,0];return i==="channelsFirst"?re=[a,R,z,K,H]:i==="channelsLast"&&(re=[a,z,K,H,R]),{batchSize:a,dataFormat:i,inDepth:l,inHeight:c,inWidth:m,inChannels:d,outDepth:z,outHeight:K,outWidth:H,outChannels:R,padInfo:D,strideDepth:I,strideHeight:w,strideWidth:b,filterDepth:g,filterHeight:f,filterWidth:y,effectiveFilterDepth:E,effectiveFilterHeight:T,effectiveFilterWidth:C,dilationDepth:k,dilationHeight:x,dilationWidth:v,inShape:e,outShape:re,filterShape:r}},Gy=(e,r,t,s,o,n)=>{let i=n==="channelsLast";i?e[0].dims[3]:e[0].dims[1];let a=[64,1,1],l={x:t.map((I,w)=>w)},c=[Math.ceil(Cg(l.x.map(I=>t[I]))/a[0]),1,1];zt("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${c}`);let m=1,d=ve.size(t),u=[{type:12,data:d},{type:12,data:s},{type:12,data:o},{type:12,data:r.strides},{type:12,data:r.dilations}];On(r,u),u.push(...ut(e[0].dims,e[1].dims));let g=["rank","rank"],f=e.length===3;f&&(u.push(...ut(e[2].dims)),g.push("rank")),u.push(...ut(t));let y=I=>{let w=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:s.length},{name:"pads",type:"u32",length:o.length},{name:"strides",type:"u32",length:r.strides.length},{name:"dilations",type:"u32",length:r.dilations.length}];Dn(r,w);let b=1,k=Or(e[0].dataType),x=ke("x",e[0].dataType,e[0].dims.length,m),v=ke("W",e[1].dataType,e[1].dims.length,b),E=[x,v],T=lt("result",e[0].dataType,t.length,b),C="";if(f){let K=ke("bias",e[2].dataType,e[2].dims.length,b);E.push(K),C+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${k} {
          return bias[${i?ct("coords",4,5):ct("coords",1,5)}];
        }`}let D=zr(m,k),z=Fn(r,D,k);return`
            ${C}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${x.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${v.getByIndices("aIndices")};
            }
          ${I.registerUniforms(w).declareVariables(...E,T)}
          ${I.mainStart()}
          ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${T.offsetToIndices("global_idx")};
              let batch = ${ct("coords",0,x.rank)};
              let d2 = ${i?ct("coords",x.rank-1,x.rank):ct("coords",1,x.rank)};
              let xFRCCorner = vec3<u32>(${i?ct("coords",1,x.rank):ct("coords",2,x.rank)},
              ${i?ct("coords",2,x.rank):ct("coords",3,x.rank)},
              ${i?ct("coords",3,x.rank):ct("coords",4,x.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${i?ct("uniforms.x_shape",1,x.rank):ct("uniforms.x_shape",2,x.rank)};
              let xShapeZ = ${i?ct("uniforms.x_shape",2,x.rank):ct("uniforms.x_shape",3,x.rank)};
              let xShapeW = ${i?ct("uniforms.x_shape",3,x.rank):ct("uniforms.x_shape",4,x.rank)};
              let xShapeU = ${i?ct("uniforms.x_shape",4,x.rank):ct("uniforms.x_shape",1,x.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${i?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${i?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${i?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${i?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${f?"value = value + getBiasByOutputCoords(coords)":""};
              ${z}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${r.cacheKey};${i};${m};${f}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:c[0],y:c[1],z:c[2]},programUniforms:u}),getShaderSource:y}}}),Ky,Hy,jx=Ue(()=>{wt(),Pt(),Ct(),zn(),Ky=(e,r,t,s)=>{let o=e.length>2,n=o?"value += b[output_channel];":"",i=e[0].dims,a=e[1].dims,l=r.format==="NHWC",c=l?t[3]:t[1],m=c/r.group,d=l&&m>=4?cr(c):1,u=ve.size(t)/d,g=[{type:12,data:u},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:m}];On(r,g),g.push(...ut(i,[a[0],a[1],a[2],a[3]/d]));let f=o?["rank","rank","rank"]:["rank","rank"];g.push(...ut([t[0],t[1],t[2],t[3]/d]));let y=I=>{let w=lt("output",e[0].dataType,t.length,d),b=Or(w.type.tensor),k=Fn(r,w.type.value,b),x=ke("x",e[0].dataType,i.length),v=ke("w",e[1].dataType,a.length,d),E=[x,v];o&&E.push(ke("b",e[2].dataType,e[2].dims,d));let T=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Dn(r,T);let C=l?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${x.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${v.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${x.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${v.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${I.registerUniforms(T).declareVariables(...E,w)}

  ${I.mainStart()}
    ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${w.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${l?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${d} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];

    var value: ${w.type.value} = ${w.type.value}(0);
    ${C}
    ${n}
    ${k}
    ${w.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${r.cacheKey}_${d}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:g}),getShaderSource:y}},Hy=(e,r,t,s)=>{let o=e.length>2,n=cr(t[3]),i=cr(t[2]),a=ve.size(t)/n/i,l=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/n],c=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/n],m=[t[0],t[1],t[2],t[3]/n],d=[{type:12,data:a},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];On(r,d),d.push(...ut(l,c,m));let u=(i-1)*r.strides[1]+c[1],g=f=>{let y=lt("output",e[0].dataType,m.length,n),I=Or(y.type.tensor),w=Fn(r,y.type.value,I),b=ke("x",e[0].dataType,l.length,n),k=ke("w",e[1].dataType,c.length,n),x=[b,k];o&&x.push(ke("b",e[2].dataType,e[2].dims,n));let v=o?"value += b[output_channel];":"",E=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Dn(r,E),`
  ${f.registerUniforms(E).declareVariables(...x,y)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${i}u;
    let col = (index1 % width1) * ${i}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${b.type.value}, ${u}>;
    var values: array<${y.type.value}, ${i}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${c[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${u}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${b.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${b.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${c[1]}; w_width++) {
          let w_val = ${k.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${i}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${i}u; i++) {
      var value = values[i];
      ${v}
      ${w}
      ${y.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${n};${i};${u};${c[0]};${c[1]}`,inputDependencies:o?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:d}),getShaderSource:g}}}),kg,ta,Ig,ra,Yc,pc,Ag,Fg,Zc,Nx=Ue(()=>{Pt(),Bx(),Rx(),Eu(),jx(),zn(),Tu(),an(),kg=(e,r,t,s,o,n)=>{let i=e[0],a=e.slice(n?1:2,n?3:4),l=a.length,c=r[0],m=r.slice(2).map((u,g)=>u+(u-1)*(t[g]-1)),d=a.map((u,g)=>u+s[g]+s[g+l]).map((u,g)=>Math.floor((u-m[g]+o[g])/o[g]));return d.splice(0,0,i),d.splice(n?3:1,0,c),d},ta=[2,3,1,0],Ig=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[1]*r.group;if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let o=e[0].dims.length-2;if(r.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(r.strides.length!==o)throw new Error(`strides should be ${o}D`);if(r.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},ra=(e,r)=>{let t=e.kernelShape.slice();t.length<r[1].dims.length-2&&t.push(...Array(r[1].dims.length-2-t.length).fill(0));for(let n=2;n<r[1].dims.length;++n)t[n-2]===0&&(t[n-2]=r[1].dims[n]);let s=e.pads.slice();ma.adjustPadsBasedOnAutoPad(r[0].dims,e.strides,e.dilations,t,s,e.format==="NHWC",e.autoPad);let o=Object.assign({},e);return Object.assign(o,{kernelShape:t,pads:s}),o},Yc=e=>{let r=yu(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],o=e.dilations,n=e.group,i=e.kernel_shape,a=e.pads,l=e.strides,c=e.w_is_const();return{autoPad:s,format:t,dilations:o,group:n,kernelShape:i,pads:a,strides:l,wIsConst:c,...r,cacheKey:`${e.format};${r.activation};`}},pc=(e,r,t,s)=>{let o=t.format==="NHWC",n=kg(r[0].dims,r[1].dims,t.dilations,t.pads,t.strides,o);if(t.group!==1){let E=[r[0]];if(o){let T=e.kernelCustomData.wT??e.compute(is(r[1],ta),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=T),E.push(T)}else E.push(r[1]);r.length===3&&E.push(r[2]),!e.adapterInfo.isArchitecture("ampere")&&o&&r[1].dims[0]===t.group&&r[1].dims[1]===1&&t.dilations[0]===1&&t.dilations[1]===1?e.compute(Hy(E,t,n,s),{inputs:E}):e.compute(Ky(E,t,n,s),{inputs:E});return}let i=r.length===3,a=r[0].dims[o?1:2],l=r[0].dims[o?2:3],c=r[0].dims[o?3:1],m=r[1].dims[2],d=r[1].dims[3],u=n[o?1:2],g=n[o?2:3],f=n[o?3:1],y=o&&m===a&&d===l&&t.pads[0]===0&&t.pads[1]===0;if(y||m===1&&d===1&&t.dilations[0]===1&&t.dilations[1]===1&&t.strides[0]===1&&t.strides[1]===1&&t.pads[0]===0&&t.pads[1]===0){let E=n[0],T,C,D,z=[];if(o){let R=e.kernelCustomData.wT??e.compute(is(r[1],ta),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];if(t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=R),y){let re=a*l*c;T=r[0].reshape([1,E,re]),C=R.reshape([1,re,f]),D=[1,E,f]}else T=r[0].reshape([E,a*l,c]),C=R.reshape([1,c,f]),D=[E,u*g,f];z.push(T),z.push(C)}else T=r[0].reshape([E,c,a*l]),C=r[1].reshape([1,f,c]),D=[E,f,u*g],z.push(C),z.push(T);i&&z.push(r[2]);let K=D[2],H=z[0].dims[z[0].dims.length-1];K<8&&H<8?e.compute(xu(z,t,n,D,o,s),{inputs:z}):e.compute(_a(z,t,n,D,o,s),{inputs:z});return}let I=!0,w=e.kernelCustomData.wT??e.compute(is(r[1],ta),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=w);let b=[r[0],w];i&&b.push(r[2]);let k=o?u*g:f,x=o?f:u*g,v=m*d*c;e.compute(Uy(b,t,n,k,x,v,i,I,s),{inputs:b})},Ag=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let o=[0,r.pads[0],0,r.pads[1]],n=[1].concat(r.strides),i=[1].concat(r.dilations),a=[1].concat(r.kernelShape),l=ra({...r,pads:o,strides:n,dilations:i,kernelShape:a},s);pc(e,s,l,c=>t?[c[0],c[2],c[3]]:[c[0],c[1],c[3]])},Fg=(e,r,t)=>{let s=t.format==="NHWC"?"channelsLast":"channelsFirst",o=ra(t,r),n=t.autoPad==="NOTSET"?t.pads:t.autoPad,i=Wy(r[0].dims,r[1].dims,t.strides,t.dilations,n,!1,s);e.compute(Gy(r,o,i.outShape,[i.filterDepth,i.filterHeight,i.filterWidth],[i.padInfo.front,i.padInfo.top,i.padInfo.left],s))},Zc=(e,r)=>{if(Ig(e.inputs,r),e.inputs[0].dims.length===3)Ag(e,r);else if(e.inputs[0].dims.length===5)Fg(e,e.inputs,r);else{let t=ra(r,e.inputs);pc(e,e.inputs,t)}}}),qy,Vx=Ue(()=>{wt(),Us(),Pt(),Ct(),qy=(e,r,t)=>{let s=e.length>2,o=r.outputShape,n=r.format==="NHWC",i=r.group,a=e[1].dims,l=a[2]/i,c=a[3],m=n?cr(l):1,d=n&&c===1&&l>=4,u=d?Math.floor(l/4)*4:Math.floor(l/m)*m,g=l-u,f=n?cr(c):1,y=n?c===1?m:f:1,I=ve.size(o)/f,w=[Math.ceil(I/64),1,1];zt("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${w}`);let b=["rank","rank"],k=[r.strides[0],r.strides[1]],x=[r.kernelShape[n?1:2],r.kernelShape[n?2:3]],v=[r.dilations[0],r.dilations[1]],E=[x[0]+(r.dilations[0]<=1?0:(r.kernelShape[n?1:2]-1)*(r.dilations[0]-1)),x[1]+(r.dilations[1]<=1?0:(r.kernelShape[n?2:3]-1)*(r.dilations[1]-1))],T=[E[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),E[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],C=[{type:12,data:I},{type:12,data:k},{type:12,data:x},{type:12,data:v},{type:12,data:E},{type:6,data:T},{type:12,data:u},{type:12,data:l},{type:12,data:c},...ut(e[0].dims,e[1].dims)];s&&(C.push(...ut(e[2].dims)),b.push("rank")),C.push(...ut(o));let D=z=>{let K=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:k.length},{name:"filter_dims",type:"u32",length:x.length},{name:"dilations",type:"u32",length:x.length},{name:"effective_filter_dims",type:"u32",length:E.length},{name:"pads",type:"i32",length:T.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],H=Or(e[0].dataType),R=n?1:2,re=n?2:3,q=n?3:1,te=ke("W",e[1].dataType,e[1].dims.length,y),ee=ke("Dy",e[0].dataType,e[0].dims.length,m),ie=[ee,te];s&&ie.push(ke("bias",e[2].dataType,[o[q]].length,f));let he=lt("result",e[0].dataType,o.length,f),de=()=>{let W="";if(d)m===4?W+=`
        let xValue = ${ee.getByOffset("x_offset")};
        let wValue = ${te.getByOffset("w_offset")};
        dotProd = dotProd + dot(xValue, wValue);
        x_offset += 1u;
        w_offset += 1u;`:m===2?W+=`
          dotProd = dotProd + dot(vec4<${H}>(${ee.getByOffset("x_offset")}, ${ee.getByOffset("x_offset + 1u")}), vec4<${H}>(${te.getByOffset("w_offset")}, ${te.getByOffset("w_offset + 1u")}));
          x_offset += 2u;
          w_offset += 2u;`:m===1&&(W+=`
          dotProd = dotProd + dot(vec4<${H}>(${ee.getByOffset("x_offset")}, ${ee.getByOffset("x_offset + 1u")}, ${ee.getByOffset("x_offset + 2u")}, ${ee.getByOffset("x_offset + 3u")}), vec4<${H}>(${te.getByOffset("w_offset")}, ${te.getByOffset("w_offset + 1u")}, ${te.getByOffset("w_offset + 2u")}, ${te.getByOffset("w_offset + 3u")}));
          x_offset += 4u;
          w_offset += 4u;`);else if(W+=`
                  let xValue = ${n?ee.getByOffset(`${ee.indicesToOffset(`${ee.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${m}`):ee.get("batch","inputChannel","idyR","idyC")};
        `,m===1)W+=`
          let w_offset = ${te.indicesToOffset(`${te.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
          let wValue = ${te.getByOffset(`w_offset / ${y}`)};
          dotProd = dotProd + xValue * wValue;`;else for(let ne=0;ne<m;ne++)W+=`
            let wValue${ne} = ${te.getByOffset(`${te.indicesToOffset(`${te.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${ne}, wOutChannel)`)} / ${y}`)};
            dotProd = dotProd + xValue[${ne}] * wValue${ne};`;return W},N=()=>{if(g===0)return"";if(!d)throw new Error(`packInputAs4 ${d} is not true.`);let W="";if(m===1){W+="dotProd = dotProd";for(let ne=0;ne<g;ne++)W+=`
            + ${ee.getByOffset(`x_offset + ${ne}`)} * ${te.getByOffset(`w_offset + ${ne}`)}`;W+=";"}else if(m===2){if(g!==2)throw new Error(`Invalid inputChannelsRemainder ${g}.`);W+=`
          let xValue = ${ee.getByOffset("x_offset")};
          let wValue = ${te.getByOffset("w_offset")};
          dotProd = dotProd + dot(xValue, wValue);`}return W},O=`
            let outputIndices = ${he.offsetToIndices(`global_idx * ${f}`)};
            let batch = ${he.indicesGet("outputIndices",0)};
            let d1 = ${he.indicesGet("outputIndices",q)};
            let r = ${he.indicesGet("outputIndices",R)};
            let c = ${he.indicesGet("outputIndices",re)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${he.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${H}(dyRCorner) + ${H}(wR)) / ${H}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${H}(uniforms.Dy_shape[${R}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }
              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${H}(dyCCorner) + ${H}(wC)) / ${H}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${H}(uniforms.Dy_shape[${re}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                ${d?`
                var x_offset = ${ee.indicesToOffset(`${ee.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${m};
                var w_offset = ${te.indicesToOffset(`${te.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${y};
                  `:""}
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${d?4:m}) {
                  ${de()}
                  inputChannel = inputChannel + ${d?4:m};
                }
                ${N()}
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${s?` + bias[d1 / ${f}]`:""};
            ${he.setByOffset("global_idx","value")};
          `;return`
    ${z.registerUniforms(K).declareVariables(...ie,he)}
      ${z.mainStart()}
      ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${O}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};${m}${y}${f}${d}${g}`,inputDependencies:b},getRunData:()=>({dispatchGroup:{x:w[0],y:w[1],z:w[2]},outputs:[{dims:t?t(o):o,dataType:e[0].dataType}],programUniforms:C}),getShaderSource:D}}}),Og,Dg,Lg,mc,Qy,zg,hc,Bg,Xy,Ux=Ue(()=>{Vx(),zn(),an(),Og=(e,r,t,s,o,n)=>(e-1)*r+t+(s-1)*o+1-n,Dg=(e,r,t,s,o)=>{let n=Math.floor(e/2);r==="SAME_UPPER"?(t[s]=n,t[o]=e-n):r==="SAME_LOWER"&&(t[s]=e-n,t[o]=n)},Lg=(e,r,t,s,o,n,i,a,l,c)=>{let m=e.length-2,d=c.length===0;l.length<m&&l.push(...Array(m-l.length).fill(0));let u=e[0],g=r[a?3:1]*o;for(let f=0,y=e.length-m-(a?1:0);f<m;++f,++y){let I=e[y],w=d?I*i[f]:c[f],b=Og(I,i[f],n[f],r[y],t[f],w);Dg(b,s,n,f,f+m),d&&c.push(i[f]*(I-1)+l[f]+(r[y]-1)*t[f]+1-n[f]-n[f+m])}c.splice(0,0,u),c.splice(a?3:1,0,g)},mc=(e,r)=>{let t=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((d,u)=>d*u,1)===0){t.length=0;for(let d=2;d<r[1].dims.length;++d)t.push(r[1].dims[d])}let s=e.format==="NHWC";t.splice(0,0,r[1].dims[0]),t.splice(s?3:1,0,r[1].dims[1]);let o=e.pads.slice(),n=e.outputShape.slice(),i=e.outputPadding.slice(),a=r[0].dims,l=e.dilations.slice();if(l.reduce((d,u)=>d+u,0)===0){let d=r[0].dims.length-2;l=new Array(d).fill(1)}let c=e.strides.slice();if(c.reduce((d,u)=>d+u,0)===0){let d=r[0].dims.length-2;c=new Array(d).fill(1)}Lg(a,t,l,e.autoPad,e.group,o,c,s,i,n);let m=Object.assign({},e);return Object.assign(m,{kernelShape:t,pads:o,outputPadding:i,outputShape:n,dilations:l,strides:c}),m},Qy=e=>{let r=yu(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],o=e.dilations,n=e.group,i=e.kernelShape,a=e.pads,l=e.strides,c=e.wIsConst(),m=e.outputPadding,d=e.outputShape;return{autoPad:s,format:t,dilations:o,group:n,kernelShape:i,outputPadding:m,outputShape:d,pads:a,strides:l,wIsConst:c,...r,cacheKey:`${e.format};${r.activation};`}},zg=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[0];if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=e[1].dims[1]*r.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==o))throw new Error("invalid bias");let n=e[0].dims.length-2;if(r.dilations.reduce((i,a)=>i+a,0)>0&&r.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(r.strides.reduce((i,a)=>i+a,0)>0&&r.strides.length!==n)throw new Error(`strides should be ${n}D`);if(r.pads.reduce((i,a)=>i+a,0)>0&&r.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(r.outputPadding.length!==n&&r.outputPadding.length!==0)throw new Error(`output_padding should be ${n}D`);if(r.kernelShape.reduce((i,a)=>i+a,0)>0&&r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(r.outputShape.length!==0&&r.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},hc=(e,r,t,s)=>{let o=e.kernelCustomData.wT??e.compute(is(r[1],[2,3,0,1]),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=o);let n=[r[0],o];r.length===3&&n.push(r[2]),e.compute(qy(n,t,s),{inputs:n})},Bg=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let o=r.kernelShape;(o.length===0||o[0]===0)&&(o=[e.inputs[1].dims[2]]);let n=r.dilations;(n.length===0||n[0]===0)&&(n=[1]);let i=r.strides;(i.length===0||i[0]===0)&&(i=[1]);let a=r.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],i=[1].concat(i),n=[1].concat(n),o=[1].concat(o);let l=r.outputPadding;l=[0].concat(l);let c=mc({...r,pads:a,strides:i,dilations:n,kernelShape:o,outputPadding:l},s);hc(e,s,c,m=>t?[m[0],m[2],m[3]]:[m[0],m[1],m[3]])},Xy=(e,r)=>{if(zg(e.inputs,r),e.inputs[0].dims.length===3)Bg(e,r);else{let t=mc(r,e.inputs);hc(e,e.inputs,t)}}}),Rg,Jy,Yy,Wx=Ue(()=>{wt(),Pt(),pr(),Ct(),Rg=(e,r,t,s)=>{let o=ve.size(r),n=r.length,i=ke("input",e,n),a=lt("output",e,n),l=t.dataType===6?t.getInt32Array()[0]:Number(t.getBigInt64Array()[0]),c=ve.normalizeAxis(l,n),m=d=>{let u=` i32(${i.indicesGet("inputIndices","uniforms.axis")}) `,g=ct("uniforms.input_shape","uniforms.axis",n),f=s.reverse?u+(s.exclusive?" + 1":""):"0",y=s.reverse?g:u+(s.exclusive?"":" + 1");return`
                ${d.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(i,a)}
                ${d.mainStart()}
                  ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = ${a.type.value}(0);
                  let first : i32 = ${f};
                  let last : i32 = ${y};
                  for (var i : i32 = first; i < last; i++) {
                    ${i.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${i.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:s.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},{type:12,data:c},...ut(r,r)]}),getShaderSource:m}},Jy=(e,r)=>{let t=e.inputs[0].dims,s=e.inputs[0].dataType,o=e.inputs[1];e.compute(Rg(s,t,o,r),{inputs:[0]})},Yy=e=>{let r=e.exclusive===1,t=e.reverse===1;return Wt({exclusive:r,reverse:t})}}),jg,Ng,Vg,Zy,e0,Gx=Ue(()=>{wt(),Pt(),pr(),Ct(),jg=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Ng=(e,r,t,s)=>{let o=[];o.push(`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`);for(let n=0;n<r;++n)o.push(t.indicesSet("a",e[n],`i[${n}]`));return o.push("return a;}"),o.join(`
`)},Vg=(e,r)=>{let t,s,o,n,i,a,l=r.format==="NHWC",c=r.blocksize,m=r.mode==="DCR";l?([t,s,o,n]=e.dims,i=m?[t,s,o,c,c,n/c**2]:[t,s,o,n/c**2,c,c],a=m?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([t,s,o,n]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],i=m?[t,c,c,n/c**2,s,o]:[t,n/c**2,c,c,s,o],a=m?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let d=e.reshape(i),u=d.dims.length,g=e.dataType,f=ke("a",g,u),y=lt("output",g,u),I=w=>`
  ${w.registerUniform("output_size","u32").declareVariables(f,y)}

  ${Ng(a,u,f,y)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${y.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${y.setByOffset("global_idx",f.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${r.blocksize};${r.mode}`,inputDependencies:["rank"]},getRunData:w=>{let b=l?[t,s*c,o*c,n/c**2]:[t,n/c**2,s*c,o*c],k=ve.size(b),x=d.dims,v=ve.sortBasedOnPerm(x,a);return{outputs:[{dims:b,dataType:w[0].dataType}],dispatchGroup:{x:Math.ceil(k/64)},programUniforms:[{type:12,data:k},...ut(x,v)]}},getShaderSource:I}},Zy=(e,r)=>{jg(e.inputs),e.compute(Vg(e.inputs[0],r))},e0=e=>Wt({blocksize:e.blocksize,mode:e.mode,format:e.format})}),sa,jo,_c,Ug,Wg,Gg,Kg,fc,Hg,t0,r0,Kx=Ue(()=>{wt(),Pt(),pr(),Ct(),sa="[a-zA-Z]|\\.\\.\\.",jo="("+sa+")+",_c="^"+jo+"$",Ug="("+jo+",)*"+jo,Wg="^"+Ug+"$",Gg=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,r){let t=this.symbolToIndices.get(e);t===void 0?t=[r]:t.push(r),this.symbolToIndices.set(e,t)}},Kg=class{constructor(e,r){var o;this.equation=r,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,s]=r.includes("->")?r.split("->",2):[r,""];if(!t.match(RegExp(Wg)))throw new Error("Invalid LHS term");if(t.split(",").forEach((n,i)=>{let a=e[i].dims.slice();if(!n.match(RegExp(_c)))throw new Error("Invalid LHS term");let l=this.processTerm(n,!0,a,i);this.lhs.push(l)}),s==="")s+=[...this.symbolToInfo.entries()].filter(([n,i])=>i.count===1||n==="...").map(([n])=>n).join("");else if(!s.match(RegExp(jo)))throw new Error("Invalid RHS");(o=s.match(RegExp(sa,"g")))==null||o.forEach(n=>{if(n==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let i=this.symbolToInfo.get(n);if(i===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(i.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(e,r,t){let s=this.symbolToInfo.get(e);if(s!==void 0){if(s.dimValue!==r&&s.count!==1)throw new Error("Dimension mismatch");s.count++,s.inputIndices.push(t)}else s={count:1,dimValue:r,inputIndices:[t]};this.symbolToInfo.set(e,s)}processTerm(e,r,t,s=-1){let o=t.length,n=!1,i=[],a=0;if(!e.match(RegExp(_c))&&!r&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(sa,"g")),c=new Gg(s);return l==null||l.forEach((m,d)=>{if(m==="..."){if(n)throw new Error("Only one ellipsis is allowed per input term");n=!0;let u=o-l.length+1;if(u<0)throw new Error("Ellipsis out of bounds");if(i=t.slice(a,a+u),this.hasEllipsis){if(this.ellipsisDims.length!==i.length||this.ellipsisDims.toString()!==i.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=i;else throw new Error("Ellipsis must be specified in the LHS");for(let g=0;g<i.length;g++){let f=String.fromCharCode(48+g);c.addSymbol(f,d+g),this.addSymbol(f,t[a++],s)}}else c.addSymbol(m,d+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(m,t[a++],s)}),c}},fc=e=>e+"_max",Hg=(e,r,t,s)=>{let o=e.map(c=>c.length).map((c,m)=>ke(`input${m}`,r,c)),n=ve.size(s),i=lt("output",r,s.length),a=[...t.symbolToInfo.keys()].filter(c=>!t.rhs.symbolToIndices.has(c)),l=c=>{let m=[],d="var prod = 1.0;",u="var sum = 0.0;",g="sum += prod;",f=[],y=[],I=[],w=[],b=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((x,v)=>{var E;if(t.rhs.symbolToIndices.has(v)){let T=(E=t.rhs.symbolToIndices.get(v))==null?void 0:E[0];T!==void 0&&t.lhs.forEach((C,D)=>{if(x.inputIndices.includes(D)){let z=C.symbolToIndices.get(v);if(z===void 0)throw new Error("Invalid symbol error");z.forEach(K=>{m.push(`${o[D].indicesSet(`input${D}Indices`,K,i.indicesGet("outputIndices",T))}`)})}})}else t.lhs.forEach((T,C)=>{if(x.inputIndices.includes(C)){let D=T.symbolToIndices.get(v);if(D===void 0)throw new Error("Invalid symbol error");D.forEach(z=>{f.push(`${o[C].indicesSet(`input${C}Indices`,z,`${v}`)}`)}),w.push(`prod *= ${o[C].getByIndices(`input${C}Indices`)};`)}}),y.push(`for(var ${v}: u32 = 0; ${v} < uniforms.${fc(v)}; ${v}++) {`),I.push("}")});let k=b?[...m,`let sum = ${o.map((x,v)=>x.getByIndices(`input${v}Indices`)).join(" * ")};`]:[...m,u,...y,...f,d,...w,g,...I];return`
            ${c.registerUniforms(a.map(x=>({name:`${fc(x)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...o,i)}

            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${i.offsetToIndices("global_idx")};
            ${o.map((x,v)=>`var input${v}Indices: ${o[v].type.indices};`).join(`
`)}
            ${k.join(`
`)};
            ${i.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let c=a.filter(d=>t.symbolToInfo.has(d)).map(d=>{var u;return{type:12,data:((u=t.symbolToInfo.get(d))==null?void 0:u.dimValue)||0}});c.push({type:12,data:n});let m=e.map((d,u)=>[...ut(d)]).reduce((d,u)=>d.concat(u),c);return m.push(...ut(s)),{outputs:[{dims:s,dataType:r}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:m}},getShaderSource:l}},t0=(e,r)=>{let t=new Kg(e.inputs,r.equation),s=t.outputDims,o=e.inputs.map((n,i)=>n.dims);e.compute(Hg(o,e.inputs[0].dataType,t,s))},r0=e=>{let r=e.equation.replace(/\s+/g,"");return Wt({equation:r})}}),qg,gc,Qg,Xg,s0,Hx=Ue(()=>{wt(),Pt(),Ct(),qg=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=t.length<r.length?0:t.length-r.length,o=r.length<t.length?0:r.length-t.length;for(;s<t.length&&o<r.length;++s,++o)if(t[s]!==r[o]&&t[s]!==1&&r[o]!==1)throw new Error("Expand requires shape to be broadcastable to input")},gc=(e,r)=>{let t=e.length-r.length,s=[];for(let o=0;o<t;++o)s.push(e[o]);for(let o=0;o<r.length;++o)s.push(r[o]===1?e[o+t]:r[o]);return s},Qg=(e,r)=>e.length>r.length?gc(e,r):gc(r,e),Xg=e=>{let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=Qg(r,t),o=e[0].dataType,n=o===9||ve.size(r)===1,i=o===9||r.length>0&&r[r.length-1]%4===0?4:1,a=n||s.length>0&&s[s.length-1]%4===0?4:1,l=Math.ceil(ve.size(s)/a),c=d=>{let u=ke("input",o,r.length,i),g=lt("output",o,s.length,a),f;if(o===9){let y=(I,w,b="")=>`
          let outputIndices${w} = ${g.offsetToIndices(`outputOffset + ${w}u`)};
          let offset${w} = ${u.broadcastedIndicesToOffset(`outputIndices${w}`,g)};
          let index${w} = offset${w} / 4u;
          let component${w} = offset${w} % 4u;
          ${I}[${w}] = ${b}(${u.getByOffset(`index${w}`)}[component${w}]);
        `;f=`
        let outputOffset = global_idx * ${a};
        var data = vec4<u32>(0);
        ${y("data",0,"u32")}
        ${y("data",1,"u32")}
        ${y("data",2,"u32")}
        ${y("data",3,"u32")}
        ${g.setByOffset("global_idx","data")}
      }`}else f=`
        let outputIndices = ${g.offsetToIndices(`global_idx * ${a}`)};
        let inputOffset = ${u.broadcastedIndicesToOffset("outputIndices",g)};
        let data = ${g.type.value}(${u.getByOffset(`inputOffset / ${i}`)});
        ${g.setByOffset("global_idx","data")}
      }`;return`
    ${d.registerUniform("vec_size","u32").declareVariables(u,g)}
    ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${f}`},m=[{type:12,data:l},...ut(r,s)];return{name:"Expand",shaderCache:{hint:`${s.length};${i}${a}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:m})}},s0=e=>{qg(e.inputs),e.compute(Xg(e.inputs),{inputs:[0]})}}),Jg,n0,qx=Ue(()=>{wt(),Pt(),Ct(),bu(),Jg=e=>{let r=e[0].dataType,t=ve.size(e[0].dims),s=ve.size(e[1].dims),o=s%4===0,n=i=>{let a=ke("x",r,[1],4),l=ke("bias",r,[1],4),c=lt("y",r,[1],4),m=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],d=g=>`
      let bias${g}_offset: u32 = (global_idx * 4 + ${g}) % uniforms.bias_size;
      let bias${g} = ${l.getByOffset(`bias${g}_offset / 4`)}[bias${g}_offset % 4];`,u=o?`
      let bias = ${l.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${d(0)}${d(1)}${d(2)}${d(3)}
      let bias = ${a.type.value}(bias0, bias1, bias2, bias3);`;return`${i.registerUniforms(m).declareVariables(a,l,c)}

    ${qc(qr(r))}

    ${i.mainStart(oo)}
      ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${a.getByOffset("global_idx")};
      ${u}
      let x_in = x + bias;
      ${c.setByOffset("global_idx",Qc("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${o}`,inputDependencies:["type","type"]},getShaderSource:n,getRunData:i=>({outputs:[{dims:i[0].dims,dataType:i[0].dataType}],programUniforms:[{type:12,data:Math.ceil(t/4)},{type:12,data:s}],dispatchGroup:{x:Math.ceil(t/oo/4)}})}},n0=e=>{e.inputs.length<2||ve.size(e.inputs[1].dims)===0?Ty(e):e.compute(Jg(e.inputs))}}),Yg,Zg,o0,i0,Qx=Ue(()=>{wt(),Pt(),pr(),Ct(),Yg=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Zg=(e,r)=>{let t=e[0].dims,s=e[1].dims,o=t.length,n=ve.normalizeAxis(r.axis,o),i=t.slice(0);i.splice(n,1,...s);let a=t[n],l=e[0].dataType===9?4:1,c=Math.ceil(ve.size(i)/l),m=[{type:12,data:c},{type:6,data:a},{type:12,data:n},...ut(e[0].dims,e[1].dims,i)],d=u=>{let g=ke("data",e[0].dataType,e[0].dims.length,l),f=ke("inputIndices",e[1].dataType,e[1].dims.length),y=lt("output",e[0].dataType,i.length,l),I=b=>{let k=s.length,x=`var indicesIndices${b}  = ${f.type.indices}(0);`;for(let v=0;v<k;v++)x+=`${k>1?`indicesIndices${b}[${v}]`:`indicesIndices${b}`} = ${i.length>1?`outputIndices${b}[uniforms.axis + ${v}]`:`outputIndices${b}`};`;x+=`
          var idx${b} = ${f.getByIndices(`indicesIndices${b}`)};
          if (idx${b} < 0) {
            idx${b} = idx${b} + uniforms.axisDimLimit;
          }
          var dataIndices${b} : ${g.type.indices};
        `;for(let v=0,E=0;v<o;v++)v===n?(x+=`${o>1?`dataIndices${b}[${v}]`:`dataIndices${b}`} = u32(idx${b});`,E+=k):(x+=`${o>1?`dataIndices${b}[${v}]`:`dataIndices${b}`} = ${i.length>1?`outputIndices${b}[${E}]`:`outputIndices${b}`};`,E++);return x},w;if(e[0].dataType===9){let b=(k,x,v="")=>`
          let outputIndices${x} = ${y.offsetToIndices(`outputOffset + ${x}u`)};
          ${I(x)};
          let offset${x} = ${g.indicesToOffset(`dataIndices${x}`)};
          let index${x} = offset${x} / 4u;
          let component${x} = offset${x} % 4u;
          ${k}[${x}] = ${v}(${g.getByOffset(`index${x}`)}[component${x}]);
        `;w=`
        let outputOffset = global_idx * ${l};
        var value = vec4<u32>(0);
        ${b("value",0,"u32")}
        ${b("value",1,"u32")}
        ${b("value",2,"u32")}
        ${b("value",3,"u32")}
        ${y.setByOffset("global_idx","value")}
      `}else w=`
      let outputIndices = ${y.offsetToIndices("global_idx")};
      ${I("")};
      let value = ${g.getByIndices("dataIndices")};
      ${y.setByOffset("global_idx","value")};
      `;return`
      ${u.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(g,f,y)}
      ${u.mainStart()}
        ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${w}
      }`};return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:m}),getShaderSource:d}},o0=e=>Wt({axis:e.axis}),i0=(e,r)=>{let t=e.inputs;Yg(t),e.compute(Zg(e.inputs,r))}}),ew,a0,l0,Xx=Ue(()=>{wt(),Pt(),Ct(),ew=(e,r,t,s,o,n,i,a,l)=>{let c=[{type:12,data:n},{type:12,data:s},{type:12,data:o},{type:12,data:t},{type:12,data:i},{type:12,data:a},{type:12,data:l}],m=[n];c.push(...ut(r.dims,m));let d=u=>{let g=ke("indices_data",r.dataType,r.dims.length),f=lt("input_slice_offsets_data",12,1,1),y=[g,f],I=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:o.length},{name:"sizes_from_slice_dims_data",type:"u32",length:t.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${u.registerUniforms(I).declareVariables(...y)}
  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${o.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${t.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${o.length}_${t.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:m,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:c}),getShaderSource:d},{inputs:[r],outputs:[-1]})[0]},a0=(e,r)=>{let t=e.inputs,s=t[0].dims,o=t[0].dataType,n=t[1].dims,i=n[n.length-1],a=ve.sizeToDimension(n,n.length-1),l=ve.sizeFromDimension(s,r.batchDims+i),c=ve.sizeToDimension(s,r.batchDims),m=ve.sizeFromDimension(s,r.batchDims),d=a/c,u=new Array(i),g=l;for(let x=0;x<i;++x)u[i-1-x]=g,g*=s[r.batchDims+i-1-x];let f=ew(e,t[1],u,r.batchDims,s,a,d,m,i),y=r.batchDims+i;if(y>s.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let I=n.slice(0,-1).concat(s.slice(y)),w=ve.size(I),b=[{type:12,data:w},{type:12,data:l},...ut(t[0].dims,f.dims,I)],k=x=>{let v=ke("data",t[0].dataType,t[0].dims.length),E=ke("slice_offsets",12,f.dims.length),T=lt("output",t[0].dataType,I.length);return`
          ${x.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(v,E,T)}
            ${x.mainStart()}
            ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};e.compute({name:"GatherND",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:I,dataType:o}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:b}),getShaderSource:k},{inputs:[t[0],f]})},l0=e=>({batchDims:e.batch_dims,cacheKey:""})}),tw,rw,c0,u0,Jx=Ue(()=>{wt(),Pt(),pr(),Ct(),tw=(e,r)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let t=ve.normalizeAxis(r.quantizeAxis,e[0].dims.length),s=r.blockSize,o=e[0],n=e[2],i=e.length===4?e[3]:void 0;if(n.dims.length!==o.dims.length||!o.dims.map((a,l)=>l===t?Math.ceil(a/s)===n.dims[l]:a===n.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(i){if(i.dataType!==o.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(i.dims.length!==n.dims.length||!i.dims.map((a,l)=>a===n.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},rw=(e,r)=>{let t=e[0].dims,s=e[1].dims,o=t.length,n=ve.normalizeAxis(r.gatherAxis,o),i=ve.normalizeAxis(r.quantizeAxis,o),a=t.slice(0);a.splice(n,1,...s);let l=ve.size(a),c=e[2].dataType,m=e[0].dataType===22,d=[{type:12,data:l},{type:12,data:i},{type:12,data:n},{type:12,data:r.blockSize},...ut(...e.map((g,f)=>g.dims),a)],u=g=>{let f=ke("data",e[0].dataType,e[0].dims.length),y=ke("inputIndices",e[1].dataType,e[1].dims.length),I=ke("scales",e[2].dataType,e[2].dims.length),w=e.length>3?ke("zeroPoint",e[3].dataType,e[3].dims.length):void 0,b=lt("output",c,a.length),k=[f,y,I];w&&k.push(w);let x=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${g.registerUniforms(x).declareVariables(...k,b)}
        ${g.mainStart()}
        let output_indices = ${b.offsetToIndices("global_idx")};
        var indices_indices = ${y.type.indices}(0);
        ${s.length>1?`
          for (var i: u32 = 0; i < ${s.length}; i++) {
            let index = ${b.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${y.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${b.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${f.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${b.indicesGet("output_indices","i")};
          ${f.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${y.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${t[n]};
        }
        ${f.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${a.length}; i++) {
          let index = ${b.indicesGet("output_indices",`i + ${s.length} - 1`)};
          ${f.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${f.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${f.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${m?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${I.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${I.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${I.getByIndices("scale_indices")};
        ${w?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${w.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${w.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${m?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${qr(c)}(quantized_data - zero_point) * scale;
        ${b.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${r.cacheKey};${e.filter((g,f)=>f!==1).map(g=>g.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(g,f)=>"rank")},getRunData:()=>({outputs:[{dims:a,dataType:c}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:u}},c0=(e,r)=>{let t=e.inputs;tw(t,r),e.compute(rw(e.inputs,r))},u0=e=>Wt({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),sw,nw,d0,p0,Yx=Ue(()=>{wt(),Pt(),pr(),Ct(),sw=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},nw=(e,r)=>{let t=e[0].dims,s=e[0].dataType,o=t.length,n=e[1].dims,i=e[1].dataType,a=ve.normalizeAxis(r.axis,o),l=t[a],c=n.slice(0),m=ve.size(c),d=ke("input",s,o),u=ke("indicesInput",i,n.length),g=lt("output",s,c.length),f=[{type:12,data:m},{type:6,data:l},{type:12,data:a}];return f.push(...ut(t,n,c)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:f}),getShaderSource:y=>`
      ${y.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(d,u,g)}
      ${y.mainStart()}
      ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${g.offsetToIndices("global_idx")};

      var idx = ${u.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${d.type.indices}(outputIndices);
      ${d.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${d.getByIndices("inputIndices")};

      ${g.setByOffset("global_idx","value")};
  }`}},d0=e=>Wt({axis:e.axis}),p0=(e,r)=>{let t=e.inputs;sw(t),e.compute(nw(e.inputs,r))}}),ow,iw,m0,h0,Zx=Ue(()=>{wt(),Pt(),Ct(),ow=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},iw=(e,r)=>{let t=e[0].dims.slice(),s=e[1].dims.slice(),[o,n,i]=db.getShapeOfGemmResult(t,r.transA,s,r.transB,e.length===3?e[2].dims:void 0),a=[o,n];if(!a)throw new Error("Can't use gemm on the given tensors");let l=16,c=Math.ceil(n/l),m=Math.ceil(o/l),d=!0,u=ve.size(a),g=[{type:12,data:d?c:u},{type:12,data:o},{type:12,data:n},{type:12,data:i},{type:1,data:r.alpha},{type:1,data:r.beta}],f=["type","type"];e.length===3&&(g.push(...ut(e[2].dims)),f.push("rank")),g.push(...ut(a));let y=w=>{let b="";r.transA&&r.transB?b="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":r.transA&&!r.transB?b="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!r.transA&&r.transB?b="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!r.transA&&!r.transB&&(b="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let k=r.alpha===1?"":"value *= uniforms.alpha;",x=ke("a",e[0].dataType,e[0].dims),v=ke("b",e[1].dataType,e[1].dims),E=x.type.value,T=null,C=[x,v];e.length===3&&(T=ke("c",e[2].dataType,e[2].dims.length),C.push(T));let D=lt("output",e[0].dataType,a.length);C.push(D);let z=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${w.registerUniforms(z).declareVariables(...C)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${E}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${b}
    }

    ${k}
    ${T!=null?`let cOffset = ${T.broadcastedIndicesToOffset("vec2(m, n)",D)}; value += ${E}(uniforms.beta) * ${T.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},I=w=>{let b=ke("a",e[0].dataType,e[0].dims),k=ke("b",e[1].dataType,e[1].dims),x=null,v=[b,k];e.length===3&&(x=ke("c",e[2].dataType,e[2].dims.length),v.push(x));let E=lt("output",e[0].dataType,a.length);v.push(E);let T=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],C="",D="";r.transA&&r.transB?(D=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${b.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${k.type.value}(0);
      }
      `,C="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):r.transA&&!r.transB?(D=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${b.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${k.type.value}(0);
      }
      `,C="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!r.transA&&r.transB?(D=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${b.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${k.type.value}(0);
      }
      `,C="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!r.transA&&!r.transB&&(D=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${b.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${k.type.value}(0);
      }
      `,C="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let z=r.alpha===1?"":"value *= uniforms.alpha;";return`
  ${w.registerUniforms(T).declareVariables(...v)}
  var<workgroup> tile_a: array<array<${b.type.storage}, ${l}>, ${l}>;
  var<workgroup> tile_b: array<array<${k.type.storage}, ${l}>, ${l}>;
  ${w.mainStart([l,l,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${l};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${l};
    let num_tiles = (uniforms.K - 1) / ${l} + 1;
    var k_start = 0u;
    var value = ${E.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${D}
      k_start = k_start + ${l};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${l}; k++) {
        ${C}
      }
      workgroupBarrier();
    }

    ${z}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${x!=null?`let cOffset = ${x.broadcastedIndicesToOffset("vec2(m, n)",E)}; value += ${E.type.value}(uniforms.beta) * ${x.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return d?{name:"GemmShared",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:c*m},programUniforms:g}),getShaderSource:I}:{name:"Gemm",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:g}),getShaderSource:y}},m0=e=>{let r=e.transA,t=e.transB,s=e.alpha,o=e.beta;return{transA:r,transB:t,alpha:s,beta:o,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},h0=(e,r)=>{ow(e.inputs),e.compute(iw(e.inputs,r))}}),Ds,js,En,Pn,aw,lw,cw,uw,dw,pw,mw,hw,_0,f0,eT=Ue(()=>{wt(),Pt(),pr(),Ct(),[Ds,js,En,Pn]=[0,1,2,3],aw=e=>{if(e[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${e[0].dims.length-2}`);if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},lw=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,cw=e=>`
  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,uw=e=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${e.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,dw=e=>`
  ${e.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,pw=(e,r,t)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${r} {
     var pixel = ${r}(0);
     var indices = vec4<u32>(0);
     indices[${Ds}] = batch;
     indices[${js}] = channel;`+(()=>{switch(t.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${En}] = u32(r);
            indices[${Pn}] = u32(c);
          } else {
            return ${r}(0);
          }
        `;case"border":return`
          indices[${En}] = u32(clamp(r, 0, H - 1));
          indices[${Pn}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${En}] = gs_reflect(r, border[1], border[3]);
          indices[${Pn}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${t.paddingMode} is not supported`)}})()+`
    return ${e.getByIndices("indices")};
  }
`,mw=(e,r,t)=>(()=>{switch(t.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${Ds}], indices[${js}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${Ds}], indices[${js}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${Ds}], indices[${js}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${Ds}], indices[${js}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${Ds}], indices[${js}], border);

          let dx2 = ${r}(f32(x2) - x);
          let dx1 = ${r}(x - f32(x1));
          let dy2 = ${r}(f32(y2) - y);
          let dy1 = ${r}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${r}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${Ds}], indices[${js}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${t.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,hw=(e,r)=>{let t=ke("x",e[0].dataType,e[0].dims.length),s=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],o=ke("grid",e[1].dataType,s.length,2),n=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];r.format==="NHWC"&&(n=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[Ds,js,En,Pn]=[0,3,1,2]);let i=lt("output",e[0].dataType,n.length),a=t.type.value,l=ve.size(n),c=[{type:12,data:l},...ut(e[0].dims,s,n)],m=d=>`
  ${d.registerUniform("output_size","u32").declareVariables(t,o,i)}
  ${lw}
  ${cw(a)}
  ${uw(r)}
  ${dw(r)}
  ${pw(t,a,r)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${En}]);
      let W_in = i32(uniforms.x_shape[${Pn}]);

      ${r.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${i.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${Ds}], indices[${En}], indices[${Pn}]);
      let nxy = ${o.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${mw(i,a,r)}
  }`;return{name:"GridSample",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:["type","type"]},getRunData:d=>{let u=ve.size(n);return{outputs:[{dims:n,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:c}},getShaderSource:m}},_0=(e,r)=>{aw(e.inputs),e.compute(hw(e.inputs,r))},f0=e=>Wt({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),Zr,_w,g0,wc,fw,qo,w0,M0=Ue(()=>{wt(),Pt(),pr(),fu(),Mu(),Ct(),an(),Zr=(e,r)=>e.length>r&&e[r].dims.length>0?e[r]:void 0,_w=(e,r)=>{let t=e[0],s=Zr(e,1),o=Zr(e,2),n=Zr(e,3),i=Zr(e,4),a=Zr(e,5),l=Zr(e,6),c=Zr(e,7);if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let m=t.dims[0],d=t.dims[1],u=t.dims.length===3?t.dims[2]:r.numHeads*t.dims[4],g=d,f=0,y=0,I=Math.floor(u/r.numHeads);if(l&&c&&ve.size(l.dims)&&ve.size(c.dims)){if(l.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==m||l.dims[1]!==r.numHeads||l.dims[3]!==I)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[0]!==m||c.dims[1]!==r.numHeads||c.dims[3]!==I)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==c.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(c.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');f=l.dims[2],y=l.dims[2]}else if(l&&ve.size(l.dims)||c&&ve.size(c.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let w;if(s&&ve.size(s.dims)>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(s.dims[2]!==t.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');w=2,g=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==I)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(o)throw new Error('Expect "value" be none when "key" has packed kv format.');w=5,g=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==I)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');w=0,g=s.dims[2]}}else{if(t.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(t.dims[2]!==r.numHeads||t.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');w=3}if(n&&ve.size(n.dims)>0){if(n.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(s&&s.dims.length===5&&s.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let b=f+g,k=0;if(i&&ve.size(i.dims)>0){k=8;let T=i.dims;throw T.length===1?T[0]===m?k=1:T[0]===3*m+2&&(k=3):T.length===2&&T[0]===m&&T[1]===b&&(k=5),k===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let x=!1,v=u;if(o&&ve.size(o.dims)>0){if(o.dims.length!==3&&o.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==o.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(o.dims.length===3){if(g!==o.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');v=o.dims[2]}else{if(g!==o.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');v=o.dims[1]*o.dims[3],x=!0}}let E=!1;if(i&&ve.size(i.dims)>0)throw new Error("Key padding mask is not supported");if(a&&ve.size(a.dims)>0){if(a.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(a.dims[0]!==m||a.dims[1]!==r.numHeads||a.dims[2]!==d||a.dims[3]!==b)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:m,sequenceLength:d,pastSequenceLength:f,kvSequenceLength:g,totalSequenceLength:b,maxSequenceLength:y,inputHiddenSize:0,hiddenSize:u,vHiddenSize:v,headSize:I,vHeadSize:Math.floor(v/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:k,scale:r.scale,broadcastResPosBias:E,passPastInKv:x,qkvFormat:w}},g0=e=>Wt({...e}),wc=Wt({perm:[0,2,1,3]}),fw=(e,r,t,s,o,n,i)=>{let a=[s,o,n],l=ve.size(a),c=[{type:12,data:l},{type:12,data:i},{type:12,data:n}],m=d=>{let u=lt("qkv_with_bias",r.dataType,a),g=ke("qkv",r.dataType,a),f=ke("bias",t.dataType,a),y=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${d.registerUniforms(y).declareVariables(g,f,u)}
  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c}),getShaderSource:m},{inputs:[r,t],outputs:[-1]})[0]},qo=(e,r,t,s,o,n,i,a)=>{let l=n;if(i&&ve.size(i.dims)>0){if(s===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=fw(e,n,i,r,s,t*o,a),l=l.reshape([r,s,t,o]),t===1||s===1?l:e.compute(is(l,wc.perm),{inputs:[l],outputs:[-1]})[0]}else return n.dims.length===3&&(l=n.reshape([r,s,t,o])),t===1||s===1?l:e.compute(is(l,wc.perm),{inputs:[l],outputs:[-1]})[0]},w0=(e,r)=>{let t=_w(e.inputs,r),s=e.inputs[0],o=Zr(e.inputs,1),n=Zr(e.inputs,2),i=Zr(e.inputs,3),a=Zr(e.inputs,4),l=Zr(e.inputs,5),c=Zr(e.inputs,6),m=Zr(e.inputs,7);if(s.dims.length===5)throw new Error("Packed QKV is not implemented");if((o==null?void 0:o.dims.length)===5)throw new Error("Packed KV is not implemented");let d=o&&n&&o.dims.length===4&&n.dims.length===4,u=qo(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,s,i,0);if(d)return Zo(e,u,o,n,a,void 0,c,m,l,t);if(!o||!n)throw new Error("key and value must be provided");let g=qo(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.headSize,o,i,t.hiddenSize),f=qo(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.vHeadSize,n,i,2*t.hiddenSize);Zo(e,u,g,f,a,void 0,c,m,l,t)}}),gw,ww,Mw,bw,eu,b0,y0,v0=Ue(()=>{wt(),Pt(),pr(),Ct(),gw=e=>{if(!e||e.length<1)throw new Error("too few inputs")},ww=(e,r)=>{let t=[],s=r.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(o=>t.push(Number(o))),s=t.length),Wt({numOutputs:s,axis:r.axis,splitSizes:t})},Mw=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${ct("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,bw=e=>{let r=e.length,t=[];for(let s=0;s<r;++s){let o=e[s].setByIndices("indices","input[global_idx]");r===1?t.push(o):s===0?t.push(`if (output_number == ${s}u) { ${o} }`):s===r-1?t.push(`else { ${o} }`):t.push(`else if (output_number == ${s}) { ${o} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${t.join(`
`)}
      }`},eu=(e,r)=>{let t=e[0].dims,s=ve.size(t),o=e[0].dataType,n=ve.normalizeAxis(r.axis,t.length),i=new Array(r.numOutputs),a=ke("input",o,t.length),l=new Array(r.numOutputs),c=[],m=[],d=0,u=[{type:12,data:s}];for(let f=0;f<r.numOutputs;f++){d+=r.splitSizes[f],l[f]=d;let y=t.slice();y[n]=r.splitSizes[f],m.push(y),i[f]=lt(`output${f}`,o,y.length),c.push({dims:m[f],dataType:e[0].dataType})}u.push({type:12,data:l},...ut(t,...m));let g=f=>`
  ${f.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(a,...i)}
  ${Mw(l.length)}
  ${bw(i)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${a.offsetToIndices("global_idx")};
    var index = ${a.indicesGet("indices",n)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${ct("uniforms.size_in_split_axis","output_number - 1u",l.length)};
      ${a.indicesSet("indices",n,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:g,getRunData:()=>({outputs:c,dispatchGroup:{x:Math.ceil(s/64)},programUniforms:u})}},b0=(e,r)=>{gw(e.inputs);let t=e.inputs.length===1?r:ww(e.inputs,r);e.compute(eu(e.inputs,t),{inputs:[0]})},y0=e=>{let r=e.axis,t=e.splitSizes,s=e.numOutputs<0?t.length:e.numOutputs;if(s!==t.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Wt({axis:r,numOutputs:s,splitSizes:t})}}),yw,fa,x0,T0=Ue(()=>{wt(),Pt(),pr(),Ct(),yw=(e,r)=>{let[t,s,o,n]=e,{numHeads:i,rotaryEmbeddingDim:a}=r;if(t.dims.length!==3&&t.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${t.dims.length}`);if(!ve.areEqual(s.dims,[])&&!ve.areEqual(s.dims,[1])&&s.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${s.dims.length}`);if(o.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${o.dims.length}`);if(n.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(!ve.areEqual(o.dims,n.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(a>0&&i===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=t.dims[0],c=t.dims[t.dims.length-2],m=o.dims[0],d=ve.sizeFromDimension(t.dims,1)/c,u=a===0?o.dims[1]*2:d/i;if(a>u)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(s.dims.length===2){if(l!==s.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${s.dims[0]}`);if(c!==s.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${s.dims[1]}`)}if(u/2!==o.dims[1]&&a/2!==o.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${o.dims[1]}`);if(c>m)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},fa=(e,r)=>{let{interleaved:t,numHeads:s,rotaryEmbeddingDim:o,scale:n}=r,i=e[0].dims[0],a=ve.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],c=a/l,m=e[2].dims[1],d=o===0?m*2:c/s,u=new Array(i,l,c/d,d-m),g=ve.computeStrides(u),f=[{type:1,data:n},{type:12,data:u},{type:12,data:g},...e[0].dims.length===3?new Array({type:12,data:[a,c,d,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[a,d,l*d,1]}):[],...ut(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],y=I=>{let w=ke("input",e[0].dataType,e[0].dims.length),b=ke("position_ids",e[1].dataType,e[1].dims.length),k=ke("cos_cache",e[2].dataType,e[2].dims.length),x=ke("sin_cache",e[3].dataType,e[3].dims.length),v=lt("output",e[0].dataType,e[0].dims.length);return I.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:u.length},{name:"global_strides",type:"u32",length:g.length},{name:"input_output_strides",type:"u32",length:g.length}]),`
        ${I.declareVariables(w,b,k,x,v)}

        ${I.mainStart(oo)}
          let half_rotary_emb_dim = uniforms.${k.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${I.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${b.broadcastedIndicesToOffset("bsnh.xy",lt("",b.type.tensor,2))};
            let position_id =
                u32(${b.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${t});
            let j = i + select(half_rotary_emb_dim, 1, ${t});
            let re = ${w.getByOffset("i")} * ${k.get("position_id","bsnh[3]")} -
                ${w.getByOffset("j")} * ${x.get("position_id","bsnh[3]")};
            ${v.setByOffset("i","re")}
            let im = ${w.getByOffset("i")} * ${x.get("position_id","bsnh[3]")} +
                ${w.getByOffset("j")} * ${k.get("position_id","bsnh[3]")};
            ${v.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${v.setByOffset("k",w.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:Wt({interleaved:t}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:y,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ve.size(u)/oo)},programUniforms:f})}},x0=(e,r)=>{yw(e.inputs,r),e.compute(fa(e.inputs,r))}}),vw,xw,Mc,Tw,E0,tT=Ue(()=>{pr(),wt(),Mu(),M0(),v0(),an(),T0(),Ct(),vw=(e,r)=>{if(r.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let t=e[0],s=e[1],o=e[2],n=e[3],i=e[4];if(r.doRotary!==0&&e.length<=7)throw new Error("cos_cast and sin_cache are expected if do_rotary attribute is non-zero");if(r.localWindowSize!==-1)throw new Error("Local attention is not supported");if(r.softcap!==0)throw new Error("Softcap is not supported");if(r.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(r.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let a=!1,l=t.dims[0],c=t.dims[1],m=t.dims.length===3?a?t.dims[2]/3:t.dims[2]:r.numHeads*t.dims[4],d=c,u=0,g=!s||s.dims.length===0,f=Math.floor(g?m/(r.numHeads+2*r.kvNumHeads):m/r.numHeads);g&&(m=f*r.numHeads);let y=n&&n.dims.length!==0,I=i&&i.dims.length!==0;if(y&&n.dims.length===4&&n.dims[0]===l&&n.dims[1]!==r.kvNumHeads&&n.dims[2]===r.kvNumHeads&&n.dims[3]===f)throw new Error("BSNH pastKey/pastValue is not supported");if(y&&I){if(n.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(i.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');u=n.dims[2]}else if(y||I)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let w=1;if(s&&s.dims.length>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(t.dims[2]%s.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');d=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==f)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(o)throw new Error('Expect "value" be none when "key" has packed kv format.');d=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==f)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');d=s.dims[2]}}else{if(t.dims.length!==3&&t.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(t.dims.length===5&&(t.dims[2]!==r.numHeads||t.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');w=3}let b=0,k=!1,x=r.kvNumHeads?f*r.kvNumHeads:m;if(o&&o.dims.length>0){if(o.dims.length!==3&&o.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==o.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(o.dims.length===3){if(d!==o.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');x=o.dims[2]}else{if(d!==o.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');x=o.dims[1]*o.dims[3],k=!0}}let v=e.length>4?e[5]:void 0;if(v&&v.dims.length!==1&&v.dims[0]!==l)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:l,sequenceLength:c,pastSequenceLength:u,kvSequenceLength:d,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:m,vHiddenSize:x,headSize:f,vHeadSize:Math.floor(x/r.kvNumHeads),numHeads:r.numHeads,kvNumHeads:r.kvNumHeads,nReps:r.numHeads/r.kvNumHeads,pastPresentShareBuffer:!1,maskType:b,scale:r.scale,broadcastResPosBias:!1,passPastInKv:k,qkvFormat:w}},xw=Wt({perm:[0,2,1,3]}),Mc=(e,r,t)=>{let s=r,o=t.kvNumHeads;return r.dims.length===3&&t.kvSequenceLength!==0&&(s=r.reshape([t.batchSize,t.kvSequenceLength,o,t.headSize]),s=e.compute(is(s,xw.perm),{inputs:[s],outputs:[-1]})[0]),s},Tw=(e,r,t,s)=>{let o=7,n=["type","type"],i=[e*r],a=e*r,l=[{type:12,data:a},{type:12,data:r},{type:12,data:e}],c=m=>{let d=ke("seq_lens",t.dataType,t.dims),u=ke("total_seq_lens",s.dataType,s.dims),g=lt("pos_ids",o,i),f=[{name:"output_size",type:"u32"},{name:"sequence_length",type:"u32"},{name:"batch_size",type:"u32"}];return`
  ${m.registerUniforms(f).declareVariables(d,u,g)}
  ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let total_sequence_length = u32(${u.getByOffset("0")});
    let is_subsequent_prompt = uniforms.sequence_length > 1 && uniforms.sequence_length != total_sequence_length;
    let is_first_prompt = !is_subsequent_prompt && uniforms.sequence_length == total_sequence_length;
    let batch_idx = global_idx / uniforms.sequence_length;
    let sequence_idx = i32(global_idx % uniforms.sequence_length);
    var pos_id: i32 = 0;
    let seqlen = ${d.getByOffset("batch_idx")};
    let total_seqlen = seqlen + 1;
    if (is_first_prompt) {
      if (sequence_idx < total_seqlen) {
        pos_id = sequence_idx;
      } else {
        pos_id = 1;
      }
      ${g.setByOffset("global_idx","pos_id")}
    } else if (is_subsequent_prompt) {
      let past_seqlen = total_seqlen - i32(uniforms.sequence_length);
      if (past_seqlen + sequence_idx < total_seqlen) {
        pos_id = past_seqlen + sequence_idx;
      } else {
        pos_id = 1;
      }
      ${g.setByOffset("global_idx","pos_id")}
    } else if (global_idx < uniforms.batch_size) {
      ${g.setByOffset("global_idx","seqlen")}
    };
  }
  `};return{name:"GeneratePositionIds",shaderCache:{hint:`${e};${r}`,inputDependencies:n},getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:l}),getShaderSource:c}},E0=(e,r)=>{var x;let t=vw(e.inputs,r);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((x=e.inputs[1])==null?void 0:x.dims.length)===5)throw new Error("Packed KV is not implemented");let s=e.inputs[0],o=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,n=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,i=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,a=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,l=e.inputs.length>4?e.inputs[5]:void 0,c=e.inputs.length>5?e.inputs[6]:void 0,m=t.kvNumHeads?t.kvNumHeads:t.numHeads,d=Wt({axis:2,numOutputs:3,splitSizes:[t.numHeads*t.headSize,m*t.headSize,m*t.headSize]}),[u,g,f]=!o&&!n?e.compute(eu([s],d),{inputs:[s],outputs:[-1,-1,-1]}):[s,o,n],y,I;if(r.doRotary){let v=e.compute(Tw(t.batchSize,t.sequenceLength,l,c),{inputs:[l,c],outputs:[-1]})[0],E=e.inputs[7],T=e.inputs[8],C=Wt({interleaved:r.rotaryInterleaved!==0,numHeads:t.numHeads,rotaryEmbeddingDim:0,scale:r.scale}),D=[u,v,E,T],z=[-1];y=e.compute(fa(D,C),{inputs:D,outputs:z})[0],D.splice(0,1,g);let K=Wt({interleaved:r.rotaryInterleaved!==0,numHeads:t.kvNumHeads,rotaryEmbeddingDim:0,scale:r.scale});I=e.compute(fa(D,K),{inputs:D,outputs:z})[0]}let w=qo(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,r.doRotary?y:u,void 0,0),b=Mc(e,r.doRotary?I:g,t),k=Mc(e,f,t);Zo(e,w,b,k,void 0,void 0,i,a,void 0,t,l,c)}}),bc,Ew,Pw,P0,rT=Ue(()=>{wt(),Pt(),an(),Ct(),bc=(e,r,t,s,o,n,i,a)=>{let l=cr(n),c=l===1?"f32":`vec${l}f`,m=l===1?"vec2f":`mat2x${l}f`,d=o*i,u=64;d===1&&(u=256);let g=[o,i,n/l],f=[o,i,2],y=["rank","type","type"],I=[];I.push(...ut(g,f));let w=b=>{let k=ke("x",r.dataType,3,l),x=ke("scale",t.dataType,t.dims),v=ke("bias",s.dataType,s.dims),E=lt("output",1,3,2),T=[k,x,v,E];return`
  var<workgroup> workgroup_shared : array<${m}, ${u}>;
  const workgroup_size = ${u}u;
  ${b.declareVariables(...T)}
  ${b.mainStart(u)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${c}(0);
    var squared_sum = ${c}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${c}(${k.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${m}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${on("workgroup_shared[0][0]",l)} / f32(hight * ${l});
      let squared_sum_final = ${on("workgroup_shared[0][1]",l)} / f32(hight * ${l});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${a}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${a};${u}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:f,dataType:1}],dispatchGroup:{x:d},programUniforms:I}),getShaderSource:w},{inputs:[r,t,s],outputs:[-1]})[0]},Ew=(e,r,t)=>{let s=r[0].dims,o=s,n=2,i=s[0],a=s[1],l=ve.sizeFromDimension(s,n),c=cr(l),m=ve.size(o)/c,d=bc(e,r[0],r[1],r[2],i,l,a,t.epsilon),u=[i,a,l/c],g=[i,a],f=["type","none"],y=I=>{let w=ke("x",r[0].dataType,u.length,c),b=ke("scale_shift",1,g.length,2),k=lt("output",r[0].dataType,u.length,c),x=[w,b,k];return`
  ${I.registerUniform("output_size","u32").declareVariables(...x)}
  ${I.mainStart()}
  ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${k.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${b.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${w.getByOffset("global_idx")} * ${k.type.value}(scale_shift.x) + ${k.type.value}(scale_shift.y);
      ${k.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${c}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:o,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:[{type:12,data:m},...ut(u,g,u)]}),getShaderSource:y},{inputs:[r[0],d]})},Pw=(e,r,t)=>{let s=r[0].dims,o=s,n=s[0],i=s[s.length-1],a=ve.sizeFromDimension(s,1)/i,l=cr(i),c=ve.size(o)/l,m=[{type:12,data:a},{type:12,data:Math.floor(i/l)}],d=["type","type"],u=!1,g=[0,s.length-1];for(let w=0;w<s.length-2;w++)u=u||s[w+1]!==1,g.push(w+1);u=u&&s[s.length-1]!==1;let f=u?e.compute(is(e.inputs[0],g),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:s.length},(w,b)=>s[g[b]])),y=bc(e,f,r[1],r[2],n,a,i,t.epsilon),I=w=>{let b=Or(r[0].dataType),k=l===1?"vec2f":`mat${l}x2f`,x=T=>{let C=T===0?"x":"y",D=l===1?"f32":`vec${l}f`;switch(l){case 1:return`${b}(${D}(scale.${C}))`;case 2:return`vec2<${b}>(${D}(scale[0].${C}, scale[1].${C}))`;case 4:return`vec4<${b}>(${D}(scale[0].${C}, scale[1].${C}, scale[2].${C}, scale[3].${C}))`;default:throw new Error(`Not supported compoents ${l}`)}},v=ke("input",r[0].dataType,r[0].dims,l),E=lt("output",r[0].dataType,o,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${v.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${k}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${E.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${w.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${x(0)}, ${x(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:m}),getShaderSource:I},{inputs:[r[0],y]})},P0=(e,r)=>{r.format==="NHWC"?Pw(e,e.inputs,r):Ew(e,e.inputs,r)}}),Cw,Sw,C0,sT=Ue(()=>{wt(),Pt(),Ct(),Cw=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Sw=(e,r,t)=>{let s=r.simplified,o=e[0].dims,n=e[1],i=!s&&e[2],a=o,l=ve.normalizeAxis(r.axis,o.length),c=ve.sizeToDimension(o,l),m=ve.sizeFromDimension(o,l),d=ve.size(n.dims),u=i?ve.size(i.dims):0;if(d!==m||i&&u!==m)throw new Error(`Size of X.shape()[axis:] == ${m}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${d} and bias size of ${u}`);let g=[];for(let v=0;v<o.length;++v)v<l?g.push(o[v]):g.push(1);let f=cr(m),y=["type","type"],I=[{type:12,data:c},{type:1,data:m},{type:12,data:Math.floor(m/f)},{type:1,data:r.epsilon}];i&&y.push("type");let w=t>1,b=t>2,k=v=>{let E=Or(e[0].dataType),T=[ke("x",e[0].dataType,e[0].dims,f),ke("scale",n.dataType,n.dims,f)];i&&T.push(ke("bias",i.dataType,i.dims,f)),T.push(lt("output",e[0].dataType,a,f)),w&&T.push(lt("mean_data_output",1,g)),b&&T.push(lt("inv_std_output",1,g));let C=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${v.registerUniforms(C).declareVariables(...T)}
  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Gc("f32",f)};
    var mean_square_vector = ${Gc("f32",f)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${so(E,f,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${on("mean_vector",f)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${on("mean_square_vector",f)} / uniforms.norm_size ${s?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${so(E,f,"x[j + offset]")};
      let f32scale = ${so(E,f,"scale[j]")};
      output[j + offset] = ${T[0].type.value}((f32input ${s?"":"- mean"}) * inv_std_dev * f32scale
        ${i?`+ ${so(E,f,"bias[j]")}`:""}
      );
    }

    ${w?"mean_data_output[global_idx] = mean":""};
    ${b?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},x=[{dims:a,dataType:e[0].dataType}];return w&&x.push({dims:g,dataType:1}),b&&x.push({dims:g,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${f};${t};${s}`,inputDependencies:y},getRunData:()=>({outputs:x,dispatchGroup:{x:Math.ceil(c/64)},programUniforms:I}),getShaderSource:k}},C0=(e,r)=>{Cw(e.inputs),e.compute(Sw(e.inputs,r,e.outputCount))}}),$w,S0,nT=Ue(()=>{Pt(),Tu(),Eu(),$w=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},S0=e=>{$w(e.inputs);let r=no.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!r)throw new Error("Can't use matmul on the given tensors");let t=r[r.length-1],s=e.inputs[0].dims[e.inputs[0].dims.length-1];if(t<8&&s<8)e.compute(xu(e.inputs,{activation:""},r));else{let o=r[r.length-2],n=ve.size(e.inputs[0].dims.slice(0,-2)),i=ve.size(e.inputs[1].dims.slice(0,-2));if(n!==1&&o===1&&i===1){let a=e.inputs[0].reshape([1,n,s]),l=e.inputs[1].reshape([1,s,t]),c=[1,n,t],m=[a,l];e.compute(_a(m,{activation:""},r,c),{inputs:m})}else e.compute(_a(e.inputs,{activation:""},r))}}}),kw,Iw,Aw,$0,k0,oT=Ue(()=>{wt(),Pt(),pr(),Ct(),kw=(e,r)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let t=e[0],s=t.dims.length;if(t.dims[s-1]!==r.k)throw new Error("The last dim of input shape does not match the k value");let o=Math.floor((r.k+r.blockSize-1)/r.blockSize),n=r.blockSize/8*r.bits,i=e[1];if(!ve.areEqual(i.dims,[r.n,o,n]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let a=e[2].dims;if(ve.size(a)!==r.n*o)throw new Error("scales input size error.");if(e.length===4){let l=e[3].dims,c=r.bits>4?r.n*o:r.n*Math.floor((o+1)/2);if(ve.size(l)!==c)throw new Error("zeroPoints input size error.")}},Iw=(e,r)=>{let t=e[0].dims,s=t.length,o=t[s-2],n=r.k,i=r.n,a=t.slice(0,s-2),l=ve.size(a),c=e[1].dims[2]/4,m=e[0].dataType,d=cr(r.k),u=cr(c),g=cr(i),f=a.concat([o,i]),y=o>1&&i/g%2===0?2:1,I=ve.size(f)/g/y,w=64,b=[],k=[l,o,n/d],x=ve.convertShape(e[1].dims).slice();x.splice(-1,1,c/u),b.push(...ut(k)),b.push(...ut(x)),b.push(...ut(e[2].dims)),e.length===4&&b.push(...ut(ve.convertShape(e[3].dims)));let v=[l,o,i/g];b.push(...ut(v));let E=T=>{let C=k.length,D=ke("a",e[0].dataType,C,d),z=ke("b",12,x.length,u),K=ke("scales",e[2].dataType,e[2].dims.length),H=[D,z,K],R=e.length===4?ke("zero_points",12,e[3].dims.length):void 0;R&&H.push(R);let re=v.length,q=lt("output",e[0].dataType,re,g),te=Or(e[0].dataType),ee=(()=>{switch(d){case 1:return`array<${te}, 8>`;case 2:return`mat4x2<${te}>`;case 4:return`mat2x4<${te}>`;default:throw new Error(`${d}-component is not supported.`)}})(),ie=()=>{let N=`
          // reuse a data
            var input_offset = ${D.indicesToOffset(`${D.type.indices}(batch, row, word_offset)`)};
            var a_data: ${ee};
            for (var j: u32 = 0; j < ${8/d}; j++) {
              a_data[j] = ${D.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let O=0;O<g*y;O++)N+=`
            b_value = ${u===1?`b${O}_data`:`b${O}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${ee}(${Array.from({length:4},(W,ne)=>`${te}(b_value_lower[${ne}]), ${te}(b_value_upper[${ne}])`).join(", ")});
            b_dequantized_values = ${d===1?`${ee}(${Array.from({length:8},(W,ne)=>`(b_quantized_values[${ne}] - ${R?`zero_point${O}`:"zero_point"}) * scale${O}`).join(", ")});`:`(b_quantized_values - ${ee}(${Array(8).fill(`${R?`zero_point${O}`:"zero_point"}`).join(",")})) * scale${O};`};
            workgroup_shared[local_id.x * ${y} + ${Math.floor(O/g)}]${g>1?`[${O%g}]`:""} += ${Array.from({length:8/d},(W,ne)=>`${d===1?`a_data[${ne}] * b_dequantized_values[${ne}]`:`dot(a_data[${ne}], b_dequantized_values[${ne}])`}`).join(" + ")};
          `;return N},he=()=>{let N=`
            var col_index = col * ${g};
            ${R?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${te}(8);`}
            `;for(let O=0;O<g*y;O++)N+=`
            let scale${O} = ${K.getByOffset("col_index * nBlocksPerCol + block")};
            ${R?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${R.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${O} = ${te}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return N},de=()=>{let N=`col_index = col * ${g};`;for(let O=0;O<g*y;O++)N+=`
            let b${O}_data = ${z.getByIndices(`${z.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return N+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${ee};
            var b_dequantized_values: ${ee};`,N};return`
        var<workgroup> workgroup_shared: array<${q.type.value}, ${y*w}>;
        ${T.declareVariables(...H,q)}
        ${T.mainStart([w,1,1])}
          let output_indices = ${q.offsetToIndices(`(global_idx / ${w}) * ${y}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${w}) {
            //process one block
            var word_offset: u32 = block * ${r.blockSize/d};
            ${he()}
            for (var word: u32 = 0; word < ${c}; word += ${u}) {
              ${de()}
              for (var i: u32 = 0; i < ${u}; i++) {
                ${ie()}
                word_offset += ${8/d};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${y}) {
            var output_value: ${q.type.value} = ${q.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${w}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${y};
            }
            ${q.setByIndices(`${q.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${r.blockSize};${r.bits};${d};${u};${g};${y};${w}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:f,dataType:m}],dispatchGroup:{x:I},programUniforms:b}),getShaderSource:E}},Aw=(e,r)=>{let t=e[0].dims,s=t.length,o=t[s-2],n=r.k,i=r.n,a=t.slice(0,s-2),l=ve.size(a),c=e[1].dims[2]/4,m=e[0].dataType,d=cr(r.k),u=cr(c),g=a.concat([o,i]),f=128,y=i%8===0?8:i%4===0?4:1,I=f/y,w=I*u*8,b=w/d,k=w/r.blockSize,x=ve.size(g)/y,v=[],E=[l,o,n/d],T=ve.convertShape(e[1].dims).slice();T.splice(-1,1,c/u),v.push(...ut(E)),v.push(...ut(T)),v.push(...ut(e[2].dims)),e.length===4&&v.push(...ut(ve.convertShape(e[3].dims)));let C=[l,o,i];v.push(...ut(C));let D=z=>{let K=E.length,H=ke("a",e[0].dataType,K,d),R=ke("b",12,T.length,u),re=ke("scales",e[2].dataType,e[2].dims.length),q=[H,R,re],te=e.length===4?ke("zero_points",12,e[3].dims.length):void 0;te&&q.push(te);let ee=C.length,ie=lt("output",e[0].dataType,ee),he=Or(e[0].dataType),de=()=>{switch(d){case 1:return`
          let a_data0 = vec4<${he}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${he}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${he}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${he}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${d}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${H.type.value}, ${b}>;
        var<workgroup> inter_results: array<array<${ie.type.value}, ${I}>, ${y}>;
        ${z.declareVariables(...q,ie)}
        ${z.mainStart([I,y,1])}
          let output_indices = ${ie.offsetToIndices(`workgroup_index * ${y}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${k} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${b};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${b}; a_offset += ${f})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${H.getByIndices(`${H.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${H.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${k} + local_id.x;
            ${te?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${te.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${he}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${he}(8);`}
            let scale = ${re.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${R.getByIndices(`${R.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${r.blockSize/d};
            for (var i: u32 = 0; i < ${u}; i++) {
              ${de()}
              let b_value = ${u===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${he}>(${Array.from({length:4},(N,O)=>`${he}(b_value_lower[${O}]), ${he}(b_value_upper[${O}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${he}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(N,O)=>`${`dot(a_data${O}, b_dequantized_values[${O}])`}`).join(" + ")};
              word_offset += ${8/d};
            }
            workgroupBarrier();
          }

          if (local_idx < ${y}) {
            var output_value: ${ie.type.value} = ${ie.type.value}(0);
            for (var b = 0u; b < ${I}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${ie.setByIndices(`${ie.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${r.blockSize};${d};${u};${I};${y}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:g,dataType:m}],dispatchGroup:{x},programUniforms:v}),getShaderSource:D}},$0=(e,r)=>{kw(e.inputs,r),r.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(Aw(e.inputs,r)):e.compute(Iw(e.inputs,r))},k0=e=>Wt(e)}),Fw,Ow,Dw,Lw,zw,Bw,Rw,jw,I0,iT=Ue(()=>{wt(),Pt(),Ct(),Fw=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let r=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(r=e[3].dims[0]*2===e[1].dims[0]),!r)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Ow=(e,r,t)=>{let s="";for(let o=r-1;o>=0;--o)s+=`
            k = i32(${e.indicesGet("indices",o)}) - ${ct("uniforms.pads",o,t)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${ct("uniforms.x_shape",o,r)})) {
              break;
            }
            offset += k * i32(${ct("uniforms.x_strides",o,r)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${s}
            value = x[offset];
          }
      `},Dw=(e,r,t)=>{let s="";for(let o=r-1;o>=0;--o)s+=`
                k = i32(${e.indicesGet("indices",o)}) - ${ct("uniforms.pads",o,t)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${ct("uniforms.x_shape",o,r)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${ct("uniforms.x_shape",o,r)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${ct("uniforms.x_strides",o,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},Lw=(e,r,t)=>{let s="";for(let o=r-1;o>=0;--o)s+=`
                k = i32(${e.indicesGet("indices",o)}) - ${ct("uniforms.pads",o,t)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${ct("uniforms.x_shape",o,r)})) {
                  k = i32(${ct("uniforms.x_shape",o,r)}) - 1;
                }
                offset += k * i32(${ct("uniforms.x_strides",o,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},zw=(e,r,t)=>{let s="";for(let o=r-1;o>=0;--o)s+=`
                k = i32(${e.indicesGet("indices",o)}) - ${ct("uniforms.pads",o,t)};
                if (k < 0)  {
                  k += i32(${ct("uniforms.x_shape",o,r)}]);
                }
                if (k >= i32(${ct("uniforms.x_shape",o,r)})) {
                  k -= i32(${ct("uniforms.x_shape",o,r)});
                }
                offset += k * i32(${ct("uniforms.x_strides",o,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},Bw=(e,r,t)=>{switch(t.mode){case 0:return Ow(e,r,t.pads.length);case 1:return Dw(e,r,t.pads.length);case 2:return Lw(e,r,t.pads.length);case 3:return zw(e,r,t.pads.length);default:throw new Error("Invalid mode")}},Rw=(e,r)=>{let t=ve.padShape(e[0].dims.slice(),r.pads),s=e[0].dims,o=ve.size(t),n=[{type:12,data:o},{type:6,data:r.pads}],i=e.length>=3&&e[2].data;r.mode===0&&n.push({type:i?e[2].dataType:1,data:r.value}),n.push(...ut(e[0].dims,t));let a=["rank"],l=c=>{let m=lt("output",e[0].dataType,t.length),d=ke("x",e[0].dataType,s.length),u=d.type.value,g=Bw(m,s.length,r),f=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return r.mode===0&&f.push({name:"constant_value",type:i?u:"f32"}),`
            ${c.registerUniforms(f).declareVariables(d,m)}
            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${m.offsetToIndices("global_idx")};

            var value = ${u}(0);
            ${g}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${r.mode}${i}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ve.size(t)/64)},programUniforms:n}),getShaderSource:l}},jw=(e,r)=>{if(e.length>1){let t=e[1].getBigInt64Array(),s=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,o=e[0].dims.length,n=new Int32Array(2*o).fill(0);if(e.length>=4){let a=e[3].getBigInt64Array();for(let l=0;l<a.length;l++)n[Number(a[l])]=Number(t[l]),n[Number(a[l])+o]=Number(t[l+a.length])}else t.forEach((a,l)=>n[Number(l)]=Number(a));let i=[];return n.forEach(a=>i.push(a)),{mode:r.mode,value:s,pads:i}}else return r},I0=(e,r)=>{Fw(e.inputs);let t=jw(e.inputs,r);e.compute(Rw(e.inputs,t),{inputs:[0]})}}),No,yc,vc,xc,Tc,Nw,Vw,Ec,Pc,A0,F0,Cc,O0,D0,Sc,L0,z0,B0,R0,aT=Ue(()=>{$s(),wt(),Pt(),Ct(),No=e=>{if(er.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},yc=(e,r,t)=>{let s=r.format==="NHWC",o=e.dims.slice();s&&o.splice(1,0,o.pop());let n=Object.hasOwnProperty.call(r,"dilations"),i=r.kernelShape.slice(),a=r.strides.slice(),l=n?r.dilations.slice():[],c=r.pads.slice();ma.adjustPoolAttributes(t,o,i,a,l,c);let m=ma.computePoolOutputShape(t,o,a,l,i,c,r.autoPad),d=Object.assign({},r);n?Object.assign(d,{kernelShape:i,strides:a,pads:c,dilations:l,cacheKey:r.cacheKey}):Object.assign(d,{kernelShape:i,strides:a,pads:c,cacheKey:r.cacheKey});let u=m.slice();return u.push(u.splice(1,1)[0]),[d,s?u:m]},vc=(e,r)=>{let t=r.format==="NHWC",s=ve.size(e),o=ve.size(r.kernelShape),n=[{type:12,data:s},{type:12,data:o}],i=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let a=r.kernelShape[r.kernelShape.length-1],l=r.strides[r.strides.length-1],c=r.pads[r.pads.length/2-1],m=r.pads[r.pads.length-1],d=!!(c+m);n.push({type:12,data:a},{type:12,data:l},{type:12,data:c},{type:12,data:m}),i.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let u=!1;if(r.kernelShape.length===2){let g=r.kernelShape[r.kernelShape.length-2],f=r.strides[r.strides.length-2],y=r.pads[r.pads.length/2-2],I=r.pads[r.pads.length-2];u=!!(y+I),n.push({type:12,data:g},{type:12,data:f},{type:12,data:y},{type:12,data:I}),i.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[n,i,!0,d,u]}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=ve.computeStrides(r.kernelShape);n.push({type:12,data:a},{type:12,data:r.pads},{type:12,data:r.strides}),i.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length});let l=r.pads.reduce((c,m)=>c+m);return[n,i,!!l,!1,!1]}},xc=(e,r,t,s,o,n,i,a,l,c,m,d)=>{let u=o.format==="NHWC",g=r.type.value,f=lt("output",r.type.tensor,s);if(o.kernelShape.length<=2){let y="",I="",w="",b=t-(u?2:1);if(m?y=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${b}] = indices[${b}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${b}] < 0 || xIndices[${b}]
                      >= uniforms.x_shape[${b}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${n}
                }`:y=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${b}] = indices[${b}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${n}
                }`,o.kernelShape.length===2){let k=t-(u?3:2);d?I=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${k}] = indices[${k}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${k}] < 0 || xIndices[${k}] >= uniforms.x_shape[${k}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:I=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${k}] = indices[${k}] * uniforms.sh - uniforms.phStart + j;
                `,w=`
              }
            `}return`
            ${e.registerUniforms(l).declareVariables(r,f)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var value = ${g}(${a});
              var pad = 0;
              ${I}
              ${y}
              ${w}
              ${i}

              output[global_idx] = value;
            }`}else{if(u)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let y=o.kernelShape.length,I=o.pads.length,w="";return c?w=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${r.indicesToOffset("xIndices")}];
                ${n}
              }`:w=`
              }
              let x_val = x[${r.indicesToOffset("xIndices")}];
              ${n}
            `,`
            ${e.registerUniforms(l).declareVariables(r,f)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var offsets: array<u32, ${y}>;

              var value = ${g}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${y-1}u; j++) {
                  offsets[j] = offset / ${ct("uniforms.kernelStrides","j",y)};
                  offset -= offsets[j] * ${ct("uniforms.kernelStrides","j",y)};
                }
                offsets[${y-1}] = offset;

                isPad = false;
                for (var j = ${t-y}u; j < ${t}u; j++) {
                  xIndices[j] = indices[j] * ${ct("uniforms.strides",`j - ${t-y}u`,y)}
                    + offsets[j - ${t-y}u] - ${ct("uniforms.pads","j - 2u",I)};
                  ${w}
              }
              ${i}

              output[global_idx] = value;
            }`}},Tc=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Nw=e=>`${Tc(e)};${e.countIncludePad}`,Vw=e=>`${Tc(e)};${e.storageOrder};${e.dilations}`,Ec=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Pc=(e,r,t,s)=>{let[o,n]=yc(r,s,t),i=ke("x",r.dataType,r.dims.length),a=i.type.value,l="value += x_val;",c="";o.countIncludePad?c+=`value /= ${a}(uniforms.kernelSize);`:c+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[m,d,u,g,f]=vc(n,o);m.push(...ut(r.dims,n));let y=["rank"];return{name:e,shaderCache:{hint:`${s.cacheKey};${u};${g};${f}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(ve.size(n)/64)},programUniforms:m}),getShaderSource:I=>xc(I,i,r.dims.length,n.length,o,l,c,0,d,u,g,f)}},A0=e=>{let r=e.count_include_pad!==0,t=Ec(e);if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let s={countIncludePad:r,...t,cacheKey:""};return{...s,cacheKey:Nw(s)}},F0=(e,r)=>{No(e.inputs),e.compute(Pc("AveragePool",e.inputs[0],!1,r))},Cc={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},O0=e=>{let r=e.format;return{format:r,...Cc,cacheKey:r}},D0=(e,r)=>{No(e.inputs),e.compute(Pc("GlobalAveragePool",e.inputs[0],!0,r))},Sc=(e,r,t,s)=>{let[o,n]=yc(r,s,t),i=`
      value = max(x_val, value);
    `,a="",l=ke("x",r.dataType,r.dims.length),c=["rank"],[m,d,u,g,f]=vc(n,o);return m.push(...ut(r.dims,n)),{name:e,shaderCache:{hint:`${s.cacheKey};${u};${g};${f}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(ve.size(n)/64)},programUniforms:m}),getShaderSource:y=>xc(y,l,r.dims.length,n.length,o,i,a,r.dataType===10?-65504:-1e5,d,u,g,f)}},L0=(e,r)=>{No(e.inputs),e.compute(Sc("MaxPool",e.inputs[0],!1,r))},z0=e=>{let r=e.storage_order,t=e.dilations,s=Ec(e);if(r!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(s.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let o={storageOrder:r,dilations:t,...s,cacheKey:""};return{...o,cacheKey:Vw(o)}},B0=e=>{let r=e.format;return{format:r,...Cc,cacheKey:r}},R0=(e,r)=>{No(e.inputs),e.compute(Sc("GlobalMaxPool",e.inputs[0],!0,r))}}),Uw,Ww,j0,N0,lT=Ue(()=>{wt(),Pt(),pr(),Ct(),Uw=(e,r)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((t,s)=>t===e[2].dims[s]).reduce((t,s)=>t&&s,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(r.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((o,n)=>n===r.axis||o===e[0].dims[n]).reduce((o,n)=>o&&n,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let t=e[0].dims[r.axis],s=e[1].dims[r.axis];if(r.blockSize<Math.ceil(t/s)||r.blockSize>Math.ceil(t/(s-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},Ww=(e,r)=>{let t=ve.normalizeAxis(r.axis,e[0].dims.length),s=e[0].dataType,o=s===3,n=e[0].dims,i=e[1].dataType,a=ve.size(n),l=s===3||s===2,c=l?[Math.ceil(ve.size(e[0].dims)/4)]:e[0].dims,m=e[1].dims,d=e.length>2?e[2]:void 0,u=d?l?[Math.ceil(ve.size(d.dims)/4)]:d.dims:void 0,g=m.length===0||m.length===1&&m[0]===1,f=g===!1&&m.length===1,y=cr(a),I=g&&(!l||y===4),w=I?y:1,b=I&&!l?y:1,k=ke("input",l?12:s,c.length,b),x=ke("scale",i,m.length),v=d?ke("zero_point",l?12:s,u.length):void 0,E=lt("output",i,n.length,w),T=[k,x];v&&T.push(v);let C=[c,m];d&&C.push(u);let D=[{type:12,data:a/w},{type:12,data:t},{type:12,data:r.blockSize},...ut(...C,n)],z=K=>{let H=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${K.registerUniforms(H).declareVariables(...T,E)}
      ${K.mainStart()}
          ${K.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${E.offsetToIndices("global_idx")};

          // Set input x
          ${l?`
            let input = ${k.getByOffset("global_idx / 4")};
            let x_vec = ${o?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${w===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${k.getByOffset("global_idx")};`};

          // Set scale input
          ${g?`let scale_value= ${x.getByOffset("0")}`:f?`
            let scale_index = ${E.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${x.getByOffset("scale_index")};`:`
            var scale_indices: ${x.type.indices} = output_indices;
            let index = ${x.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${x.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${x.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${v?g?l?`
                let zero_point_input = ${v.getByOffset("0")};
                let zero_point_vec =  ${o?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${v.getByOffset("0")}`:f?l?`
                let zero_point_index = ${E.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${v.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${o?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${E.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${v.getByOffset("zero_point_index")};`:l?`
                let zero_point_offset = ${x.indicesToOffset("scale_indices")};
                let zero_point_input = ${v.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${o?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${v.getByIndices("scale_indices")};`:`let zero_point_value = ${l?o?"i32":"u32":k.type.value}(0);`};
      // Compute and write output
      ${E.setByOffset("global_idx",`${E.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:r.cacheKey,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getShaderSource:z,getRunData:()=>({outputs:[{dims:n,dataType:i}],dispatchGroup:{x:Math.ceil(a/w/64),y:1,z:1},programUniforms:D})}},j0=(e,r)=>{Uw(e.inputs,r),e.compute(Ww(e.inputs,r))},N0=e=>Wt({axis:e.axis,blockSize:e.blockSize})}),Gw,Kw,V0,cT=Ue(()=>{$s(),wt(),Ct(),Gw=(e,r,t)=>{let s=e===r,o=e<r&&t<0,n=e>r&&t>0;if(s||o||n)throw new Error("Range these inputs' contents are invalid.")},Kw=(e,r,t,s)=>{let o=Math.abs(Math.ceil((r-e)/t)),n=[o],i=o,a=[{type:12,data:i},{type:s,data:e},{type:s,data:t},...ut(n)],l=c=>{let m=lt("output",s,n.length),d=m.type.value,u=[{name:"outputSize",type:"u32"},{name:"start",type:d},{name:"delta",type:d}];return`
        ${c.registerUniforms(u).declareVariables(m)}
        ${c.mainStart()}
        ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${d}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${s}`},getShaderSource:l,getRunData:()=>({outputs:[{dims:n,dataType:s}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:a})}},V0=e=>{let r=0,t=0,s=0;e.inputs[0].dataType===6?(r=e.inputs[0].getInt32Array()[0],t=e.inputs[1].getInt32Array()[0],s=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(r=e.inputs[0].getFloat32Array()[0],t=e.inputs[1].getFloat32Array()[0],s=e.inputs[2].getFloat32Array()[0]),er.webgpu.validateInputContent&&Gw(r,t,s),e.compute(Kw(r,t,s,e.inputs[0].dataType),{inputs:[]})}}),Hw,$c,kc,qw,U0,W0,uT=Ue(()=>{wt(),Pt(),pr(),Ct(),Hw=(e,r,t,s)=>{if(e!=="none"&&s!=="i32"&&s!=="u32"&&s!=="f32")throw new Error(`Input ${s} is not supported with reduction ${e}.`);let o=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,n=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${r}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(e){case"none":return`${r}=${t};`;case"add":return s==="i32"||s==="u32"?`atomicAdd(&${r}, bitcast<${s}>(${t}));`:`
              ${o}bitcast<${s}>(oldValue) + (${t})${n}`;case"max":return s==="i32"||s==="u32"?`atomicMax(&${r}, bitcast<${s}>(${t}));`:`
                ${o}max(bitcast<f32>(oldValue), (${t}))${n}`;case"min":return s==="i32"||s==="u32"?`atomicMin(&${r}, bitcast<${s}>(${t}));`:`${o}min(bitcast<${s}>(oldValue), (${t}))${n}`;case"mul":return`${o}(bitcast<${s}>(oldValue) * (${t}))${n}`;default:throw new Error(`Reduction ${e} is not supported.`)}},$c=(e,r)=>`${e===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[${r?"i - indices_start":"i"}];
    let dim_value = uniforms.output_shape[${r?"i - indices_start":"i"} + uniforms.last_index_dimension];`}
    
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));`,kc=(e,r,t)=>`for (var i = 0u; i < uniforms.num_updates_elements; i++) {
        let value = updates[uniforms.num_updates_elements * ${t?"global_idx":"idx"} + i];
        ${Hw(e.reduction,"output[data_offset + i]","value",r)}
      }`,qw=(e,r)=>{let t=e[0].dims,s=e[1].dims,o=t,n=1,i=Math.ceil(ve.size(s)/n),a=s[s.length-1],l=ve.sizeFromDimension(t,a),c=ve.sizeFromDimension(s,0)/a,m=[{type:12,data:i},{type:12,data:a},{type:12,data:l},...ut(e[1].dims,e[2].dims,o)],d=u=>{let g=ke("indices",e[1].dataType,e[1].dims.length),f=ke("updates",e[2].dataType,e[2].dims.length,n),y=r.reduction!=="none"&&r.reduction!==""?wb("output",e[0].dataType,o.length):lt("output",e[0].dataType,o.length,n);return`
      ${u.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(g,f,y)}
      ${u.mainStart()}
        ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var hasDuplicates = false;
  if (${r.reduction==="none"}) {
    for (var i = 0; i < ${c}; i = i + 1) {
      for (var j = i + 1; j < ${c}; j = j + 1) {
        var index_i = i32(indices[i].x);
        var index_j = i32(indices[j].x);
        if (index_i == index_j) {
          hasDuplicates = true;
          break;
        }
      }
      if (hasDuplicates) {
        break;
      }
    }
  }

  if (${r.reduction==="none"} && hasDuplicates) {
    if (global_idx != 0u) {
      return;
    }
    // Process each index-update pair individually when duplicates exist
    for (var idx = 0u; idx < ${c}u; idx++) {
      var data_offset = 0u;
      for (var i = 0u; i < uniforms.last_index_dimension; i++) {
        var index = i32(indices[idx * uniforms.last_index_dimension + i].x);
        ${$c(t.length,!1)}
      }
      ${kc(r,y.type.value,!1)}
    }
    return;
  }

  var data_offset = 0u;
  var indices_start = uniforms.last_index_dimension * global_idx;
  var indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${$c(t.length,!0)}
  }
  ${kc(r,y.type.value,!0)}
  }`};return{name:"ScatterND",shaderCache:{hint:`${r.cacheKey}_${r.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:m}),getShaderSource:d}},U0=e=>Wt({reduction:e.reduction}),W0=(e,r)=>{e.compute(qw(e.inputs,r),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),Qw,Xw,Jw,Ic,Yw,Zw,eM,tM,rM,sM,nM,oM,Ac,iM,aM,lM,cM,uM,G0,K0,dT=Ue(()=>{wt(),Pt(),pr(),Ct(),Qw=(e,r)=>{if(e.every(t=>t>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(r.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(r.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Xw=(e,r,t)=>{r.every(o=>o>=0&&o<t||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let s=new Array(t).fill(1);return r.forEach((o,n)=>s[o]=e[n]),s},Jw=(e,r,t,s,o,n)=>{let[i,a,l]=t>10?[1,2,3]:[-1,e.length>1?1:-1,-1],c=e[0].dims.length;if(i>0&&e.length>i&&e[i].dims.length>0)e[i].getFloat32Array().forEach(m=>n.push(m));else if(r.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&e.length>a&&e[a].dims.length===1&&e[a].dims[0]>0){if(e[a].getFloat32Array().forEach(m=>s.push(m)),s.length!==0&&s.length!==c&&t>=18&&s.length!==r.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Qw(s,r),r.axes.length>0&&Xw(s,r.axes,c).forEach((m,d)=>s[d]=m)}if(l>0&&e.length>l&&e[l].dims.length===1&&e[l].dims[0]>0&&(e[l].getBigInt64Array().forEach(m=>o.push(Number(m))),o.length!==0&&o.length!==c&&t>=18&&o.length!==r.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(s.length!==0&&s.length!==r.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(o.length!==0&&o.length!==r.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof s<"u"&&typeof o<"u"&&s.length>0&&o.length>c)throw new Error("Resize requires only of scales or sizes to be specified")},Ic=(e,r,t,s)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${e}) * (${r});
  let whole = ${s}(big / (${t}));
  let fract = ${s}(big % (${t})) / ${s}(${t});
  return whole + fract;
`,Yw=(e,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(e){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${r}(xResized) / ${r}(xScale);
          } else {
            ${Ic("xResized","lengthOriginal","lengthResized",r)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${Ic("xResized","lengthOriginal - 1","lengthResized - 1",r)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +
                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /
                        ${r}(lengthResized - 1);
                  } else {
                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);
                  const adjustment = ${r}(lengthResized) / outputWidth;
                  const center = ${r}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Zw=(e,r,t)=>`fn getNearestPixelFromOriginal(xOriginal: ${t}, isDownSample: bool) -> ${t} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",eM=(e,r,t)=>{let s=new Array(t).fill(0).concat(new Array(t).fill(1)),o=e.length===0?s:e.slice();return r.length>0?(r.forEach((n,i)=>{s[n]=o[i],s[i+t]=o[r.length+i]}),s):o},tM=(e,r,t,s)=>{let o=[];if(t.length>0)if(s.length>0){if(e.forEach(n=>o.push(n)),Math.max(...s)>e.length)throw new Error("axes is out of bound");s.forEach((n,i)=>o[n]=t[i])}else t.forEach(n=>o.push(n));else{if(r.length===0)throw new Error("Resize requires either scales or sizes.");o=e.map((n,i)=>Math.round(n*r[i]))}return o},rM=(e,r,t)=>{let s=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(n=>r[n]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(n=>r[n]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let o=e.slice();return t.axes.length>0?(t.axes.forEach(n=>r[n]=s),t.axes.forEach(n=>o[n]=Math.round(e[n]*r[n]))):(r.fill(s,0,r.length),o.forEach((n,i)=>o[i]=Math.round(n*r[i]))),o},sM=(e,r,t,s,o)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${t.length}> {
      var original_indices: array<${e.type.value}, ${t.length}>;
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${ct("uniforms.scales","i",s)};
        var roi_low = ${ct("uniforms.roi","i",o)};
        var roi_hi = ${ct("uniforms.roi",`i + ${r.length}`,o)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${ct("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${ct("uniforms.output_shape","i",t.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,nM=(e,r,t,s,o,n,i)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${ct("uniforms.scales","i",o)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${ct("uniforms.roi","i",n)};
          var roi_hi = ${ct("uniforms.roi",`i + ${t.length}`,n)};
          var input_shape_i = ${ct("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${ct("uniforms.output_shape","i",s.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${i} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,oM=(e,r)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${ct("uniforms.input_shape","i",r.length)}) {
          return false;
        }
      }
      return true;
    }`,Ac=(e,r,t,s)=>e.rank>s?`
    ${e.indicesSet("input_indices",r,"channel")};
    ${e.indicesSet("input_indices",t,"batch")};
`:"",iM=(e,r,t,s,o)=>{let[n,i,a,l]=t.length===2?[-1,0,1,-1]:[0,2,3,1],c=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${c} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",i,`max(0, min(row, ${t[i]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(col, ${t[a]} - 1))`)};
      ${Ac(e,l,n,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${c} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${c} = originalIndices[${i}];
      var col:${c} = originalIndices[${a}];
      ${s?`if (row < 0 || row > (${t[i]} - 1) || col < 0 || col > (${t[a]} - 1)) {
        return ${o};
      }`:""};
      row = max(0, min(row, ${t[i]} - 1));
      col = max(0, min(col, ${t[a]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${t.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${t.length>2?`u32(originalIndices[${n}])`:"0"};
      var x11: ${c} = getInputValue(batch, channel, row1, col1);
      var x12: ${c} = getInputValue(batch, channel, row1, col2);
      var x21: ${c} = getInputValue(batch, channel, row2, col1);
      var x22: ${c} = getInputValue(batch, channel, row2, col2);
      var dx1: ${c} = abs(row - ${c}(row1));
      var dx2: ${c} = abs(${c}(row2) - row);
      var dy1: ${c} = abs(col - ${c}(col1));
      var dy2: ${c} = abs(${c}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},aM=(e,r,t,s,o,n,i,a,l,c)=>{let m=t.length===2,[d,u]=m?[0,1]:[2,3],g=e.type.value,f=y=>{let I=y===d?"row":"col";return`
      fn ${I}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${r.type.indices}) -> ${g} {
        var output_index = ${r.indicesGet("output_indices",y)};
        var originalIdx: ${g} = getOriginalCoordinateFromResizedCoordinate(output_index, ${o[y]},
        ${s[y]}, ${t[y]}, ${n[y]}, ${n[y]} + ${t.length});
        var fractOriginalIdx: ${g} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${t[y]} - 1))) {
          return ${l};
        }
        var data: array<${g}, 4> = array<${g}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${I}: ${g} = originalIdx + ${g}(i);
          if (${I} < 0 || ${I} >= ${t[y]}) {
            ${c?`coefs[i + 1] = 0.0;
                        continue;`:a?`return ${l};`:`${I} = max(0, min(${I}, ${t[y]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",y,`u32(${I})`)};
          data[i + 1] = ${y===d?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${f(d)};
    ${f(u)};
  fn getCubicInterpolationCoefs(s: ${g}) -> array<${g}, 4> {
    var absS = abs(s);
    var coeffs: array<${g}, 4> = array<${g}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${g} = 1.0 - absS;
    var twoMinusAbsS: ${g} = 2.0 - absS;
    var onePlusAbsS: ${g} = 1.0 + absS;
    coeffs[0] = ((${i} * onePlusAbsS - 5 * ${i}) * onePlusAbsS + 8 * ${i}) * onePlusAbsS - 4 * ${i};
    coeffs[1] = ((${i} + 2) * absS - (${i} + 3)) * absS * absS + 1;
    coeffs[2] = ((${i} + 2) * oneMinusAbsS - (${i} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${i} * twoMinusAbsS - 5 * ${i}) * twoMinusAbsS + 8 * ${i}) * twoMinusAbsS - 4 * ${i};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${g}, 4>, coefs: array<${g}, 4>) -> ${g} {
    var coefsSum: ${g} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${g} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},lM=(e,r,t,s,o)=>{let[n,i,a,l,c]=t.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],m=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${m} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",i,`max(0, min(depth, ${t[i]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(height, ${t[a]} - 1))`)};
      ${e.indicesSet("input_indices",l,`max(0, min(width, ${t[l]} - 1))`)};
      ${Ac(e,c,n,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${m} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${m} = originalIndices[${i}];
      var height:${m} = originalIndices[${a}];
      var width:${m} = originalIndices[${l}];
      ${s?`if (depth < 0 || depth > (${t[i]} - 1) || height < 0 || height > (${t[a]} - 1) || width < 0 || (width > ${t[l]} - 1)) {
      return ${o};
        }`:""};

    depth = max(0, min(depth, ${t[i]} - 1));
      height = max(0, min(height, ${t[a]} - 1));
      width = max(0, min(width, ${t[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${t.length>3?`u32(originalIndices[${c}])`:"0"};
      var batch: u32 =  ${t.length>3?`u32(originalIndices[${n}])`:"0"};

      var x111: ${m} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${m} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${m} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${m} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${m} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${m} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${m} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${m} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${m} = abs(depth - ${m}(depth1));
      var dx2: ${m} = abs(${m}(depth2) - depth);
      var dy1: ${m} = abs(height - ${m}(height1));
      var dy2: ${m} = abs(${m}(height2) - height);
      var dz1: ${m} = abs(width - ${m}(width1));
      var dz2: ${m} = abs(${m}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},cM=(e,r,t,s,o,n)=>{let i=e.dims,a=eM(n,r.axes,i.length),l=tM(i,s,o,r.axes),c=s.slice();s.length===0&&(c=i.map((b,k)=>b===0?1:l[k]/b),r.keepAspectRatioPolicy!=="stretch"&&(l=rM(i,c,r)));let m=lt("output",e.dataType,l.length),d=ke("input",e.dataType,i.length),u=ve.size(l),g=i.length===l.length&&i.every((b,k)=>b===l[k]),f=r.coordinateTransformMode==="tf_crop_and_resize",y=r.extrapolationValue,I=d.type.value,w=b=>`
      ${g?"":`
      ${Yw(r.coordinateTransformMode,I)};
      ${(()=>{switch(r.mode){case"nearest":return`
              ${oM(d,i)};
              ${Zw(r.nearestMode,t,I)};
              ${nM(d,m,i,l,c.length,a.length,f)};
              `;case"linear":return`
              ${sM(m,i,l,c.length,a.length)};
              ${(()=>{if(i.length===2||i.length===4)return`${iM(d,m,i,f,y)}`;if(i.length===3||i.length===5)return`${lM(d,m,i,f,y)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(i.length===2||i.length===4)return`${aM(d,m,i,l,c,a,r.cubicCoeffA,f,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${b.registerUniform("output_size","u32").registerUniform("scales","f32",c.length).registerUniform("roi","f32",a.length).declareVariables(d,m)}
      ${b.mainStart()}
        ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${g?"output[global_idx] = input[global_idx];":`
        let output_indices = ${m.offsetToIndices("global_idx")};
        var input_indices: ${d.type.indices};
        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${d.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${r.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${i.length===2||i.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${t}|${c.length>0?r.mode==="cubic"?c:c.length:""}|${o.length>0?o:""}|${a.length>0?a:""}|${g}|${r.mode==="nearest"?i.length:i}`,inputDependencies:["rank"]},getShaderSource:w,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:[{type:12,data:u},{type:1,data:c},{type:1,data:a},...ut(i,l)]})}},uM=e=>{let r=e.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},G0=(e,r)=>{let t=[],s=[],o=[],n=uM(e);if(r.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Jw(e.inputs,r,n,t,s,o),e.compute(cM(e.inputs[0],r,n,t,s,o),{inputs:[0]})},K0=e=>{let r=e.antialias,t=e.axes,s=e.coordinateTransformMode,o=e.cubicCoeffA,n=e.excludeOutside!==0,i=e.extrapolationValue,a=e.keepAspectRatioPolicy,l=e.mode,c=e.nearestMode===""?"simple":e.nearestMode;return Wt({antialias:r,axes:t,coordinateTransformMode:s,cubicCoeffA:o,excludeOutside:n,extrapolationValue:i,keepAspectRatioPolicy:a,mode:l,nearestMode:c})}}),dM,pM,H0,pT=Ue(()=>{wt(),Pt(),Ct(),dM=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let r=e[0],t=e[1],s=e[2];if(r.dataType!==t.dataType||r.dataType!==s.dataType)throw new Error("All inputs must have the same data type");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Input must be 2D or 3D");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Skip must be 2D or 3D");let o=r.dims[r.dims.length-1],n=r.dims[r.dims.length-2];if(t.dims[t.dims.length-1]!==o)throw new Error("Skip must have the same hidden size as input");if(t.dims[t.dims.length-2]!==n)throw new Error("Skip must have the same sequence length as input");if(s.dims.length!==1)throw new Error("Gamma must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let i=e[3];if(i.dims.length!==1)throw new Error("Beta must be 1D");if(i.dims[i.dims.length-1]!==o)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let i=e[4];if(i.dims.length!==1)throw new Error("Bias must be 1D");if(i.dims[i.dims.length-1]!==o)throw new Error("Bias must have the same hidden size as input")}},pM=(e,r,t,s)=>{let o=r.simplified,n=e[0].dims,i=ve.size(n),a=n,l=i,c=n.slice(-1)[0],m=s?n.slice(0,-1).concat(1):[],d=!o&&e.length>3,u=e.length>4,g=s&&t>1,f=s&&t>2,y=t>3,I=64,w=cr(c),b=[{type:12,data:l},{type:12,data:w},{type:12,data:c},{type:1,data:r.epsilon}],k=v=>{let E=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],T=[ke("x",e[0].dataType,e[0].dims,w),ke("skip",e[1].dataType,e[1].dims,w),ke("gamma",e[2].dataType,e[2].dims,w)];d&&T.push(ke("beta",e[3].dataType,e[3].dims,w)),u&&T.push(ke("bias",e[4].dataType,e[4].dims,w)),T.push(lt("output",e[0].dataType,a,w)),g&&T.push(lt("mean_output",1,m)),f&&T.push(lt("inv_std_output",1,m)),y&&T.push(lt("input_skip_bias_sum",e[0].dataType,a,w));let C=Or(e[0].dataType),D=Or(1,w);return`

      ${v.registerUniforms(E).declareVariables(...T)}
      var<workgroup> sum_shared : array<${D}, ${I}>;
      var<workgroup> sum_squared_shared : array<${D}, ${I}>;

      ${v.mainStart([I,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${I};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${I};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${I-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${u?"bias[offset1d + i]":C+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${y?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${so(C,w,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${I};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${on("sum",w)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${on("square_sum",w)} / f32(uniforms.hidden_size) ${o?"":"- mean * mean"} + uniforms.epsilon);
        ${g?"mean_output[global_idx] = mean;":""}
        ${f?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${o?"":`- ${C}(mean)`}) *
            ${C}(inv_std_dev) * gamma[offset1d + i]
            ${d?"+ beta[offset1d + i]":""};
        }
      }`},x=[{dims:a,dataType:e[0].dataType}];return t>1&&x.push({dims:m,dataType:1}),t>2&&x.push({dims:m,dataType:1}),t>3&&x.push({dims:n,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${w};${g};${f};${y}`,inputDependencies:e.map((v,E)=>"type")},getShaderSource:k,getRunData:()=>({outputs:x,dispatchGroup:{x:Math.ceil(l/c)},programUniforms:b})}},H0=(e,r)=>{dM(e.inputs);let t=[0];e.outputCount>1&&t.push(-3),e.outputCount>2&&t.push(-3),e.outputCount>3&&t.push(3),e.compute(pM(e.inputs,r,e.outputCount,!1),{outputs:t})}}),mM,Vo,hM,Fc,_M,fM,q0,Q0,mT=Ue(()=>{wt(),Pt(),pr(),Ct(),mM=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");if(r.axes.length!==0){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,s)=>{if(e[s+1].dataType!==6&&e[s+1].dataType!==7)throw new Error(`Input ${s} must be an array of int32 or int64`)})},Vo=(e,r)=>{let t=[];if(e.length>r)if(e[r].dataType===7)e[r].getBigInt64Array().forEach(s=>t.push(Number(s)));else if(e[r].dataType===6)e[r].getInt32Array().forEach(s=>t.push(Number(s)));else throw new Error(`Input ${r} must be an array of int32 or int64`);return t},hM=(e,r)=>{if(e.length>1){let t=Vo(e,1),s=Vo(e,2),o=Vo(e,3);return o.length===0&&(o=[...Array(e[0].dims.length).keys()]),Wt({starts:t,ends:s,axes:o})}else return r},Fc=(e,r,t,s,o)=>{let n=e;return e<0&&(n+=t[s[r]]),o[r]<0?Math.max(0,Math.min(n,t[s[r]]-1)):Math.max(0,Math.min(n,t[s[r]]))},_M=(e,r,t)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${t.length}; i >= 0; i--) {
            let input_shape_i = ${ct("uniforms.input_shape","i",t.length)};
            let steps_i = ${ct("uniforms.steps","i",t.length)};
            let signs_i = ${ct("uniforms.signs","i",t.length)};
            let starts_i = ${ct("uniforms.starts","i",t.length)};
            var output_index = ${r.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,fM=(e,r)=>{let t=e[0].dims,s=ve.size(t),o=r.axes.length>0?ve.normalizeAxes(r.axes,t.length):[...Array(t.length).keys()],n=Vo(e,4);n.forEach(w=>w!==0||(()=>{throw new Error("step cannot be 0")})),n.length===0&&(n=Array(o.length).fill(1));let i=r.starts.map((w,b)=>Fc(w,b,t,o,n)),a=r.ends.map((w,b)=>Fc(w,b,t,o,n));if(o.length!==i.length||o.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(o.length!==t.length)for(let w=0;w<t.length;++w)o.includes(w)||(i.splice(w,0,0),a.splice(w,0,t[w]),n.splice(w,0,1));let l=n.map(w=>Math.sign(w));n.forEach((w,b,k)=>{if(w<0){let x=(a[b]-i[b])/w,v=i[b],E=v+x*n[b];i[b]=E,a[b]=v,k[b]=-w}});let c=t.slice(0);o.forEach((w,b)=>{c[w]=Math.ceil((a[w]-i[w])/n[w])});let m={dims:c,dataType:e[0].dataType},d=lt("output",e[0].dataType,c.length),u=ke("input",e[0].dataType,e[0].dims.length),g=ve.size(c),f=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:i.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:n.length}],y=[{type:12,data:g},{type:12,data:i},{type:6,data:l},{type:12,data:n},...ut(e[0].dims,c)],I=w=>`
      ${w.registerUniforms(f).declareVariables(u,d)}
        ${_M(u,d,t)}
        ${w.mainStart()}
          ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${d.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${d.setByOffset("global_idx",u.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${l.length}_${i.length}_${n.length}`,inputDependencies:["rank"]},getShaderSource:I,getRunData:()=>({outputs:[m],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:y})}},q0=(e,r)=>{mM(e.inputs,r);let t=hM(e.inputs,r);e.compute(fM(e.inputs,t),{inputs:[0]})},Q0=e=>{let r=e.starts,t=e.ends,s=e.axes;return Wt({starts:r,ends:t,axes:s})}}),gM,wM,X0,J0,hT=Ue(()=>{wt(),Pt(),pr(),an(),Ct(),gM=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},wM=(e,r)=>{let t=e.inputs[0],s=t.dims,o=ve.size(s),n=s.length,i=ve.normalizeAxis(r.axis,n),a=i<s.length-1,l,c=[];a?(c=Array.from({length:n},(T,C)=>C),c[i]=n-1,c[n-1]=i,l=e.compute(is(t,c),{inputs:[t],outputs:[-1]})[0]):l=t;let m=l.dims,d=m[n-1],u=o/d,g=cr(d),f=d/g,y=64;u===1&&(y=256);let I=(T,C)=>C===4?`max(max(${T}.x, ${T}.y), max(${T}.z, ${T}.w))`:C===2?`max(${T}.x, ${T}.y)`:C===3?`max(max(${T}.x, ${T}.y), ${T}.z)`:T,w=ke("x",l.dataType,l.dims,g),b=lt("result",l.dataType,l.dims,g),k=w.type.value,x=Or(l.dataType)==="f32"?`var threadMax = ${k}(-3.402823e+38f);`:`var threadMax = ${k}(-65504.0h);`,v=T=>`
      var<workgroup> rowMaxShared : ${k};
      var<workgroup> rowSumShared : ${k};
      var<workgroup> threadShared : array<${k}, ${y}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${k} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${k}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${T.registerUniform("packedCols","i32").declareVariables(w,b)}
      ${T.mainStart(y)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${y};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${x}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${k}(${I("threadShared[0]",g)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${k}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${k}(${on("threadShared[0]",g)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,E=e.compute({name:"Softmax",shaderCache:{hint:`${g};${y}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:m,dataType:l.dataType}],dispatchGroup:{x:u},programUniforms:[{type:6,data:f}]}),getShaderSource:v},{inputs:[l],outputs:[a?-1:0]})[0];a&&e.compute(is(E,c),{inputs:[E]})},X0=(e,r)=>{gM(e.inputs),wM(e,r)},J0=e=>Wt({axis:e.axis})}),Oc,MM,bM,yM,Y0,_T=Ue(()=>{wt(),Pt(),Ct(),Oc=e=>Array.from(e.getBigInt64Array(),Number),MM=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Oc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},bM=(e,r)=>{let t=[];for(let s=0;s<e.length;++s)t.push(e[s]*r[s]);return t},yM=(e,r)=>{let t=e[0].dims,s=r??Oc(e[1]),o=bM(t,s),n=ve.size(o),i=e[0].dataType,a=ke("input",i,t.length),l=lt("output",i,o.length),c=m=>`
      const inputShape = ${a.indices(...t)};
      ${m.registerUniform("output_size","u32").declareVariables(a,l)}
      ${m.mainStart()}
      ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${l.offsetToIndices("global_idx")};
      var input_indices: ${a.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;

        ${a.indicesSet("input_indices","i","input_dim_value")}
      }
      ${l.setByOffset("global_idx",a.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${s}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},...ut(e[0].dims,o)]}),getShaderSource:c}},Y0=e=>{MM(e.inputs),e.compute(yM(e.inputs),{inputs:[0]})}}),vM,xM,Z0,fT=Ue(()=>{wt(),Pt(),Ct(),vM=(e,r,t,s,o)=>{let n=lt("output_data",o,t.length,4),i=ke("a_data",r[1].dataType,r[1].dims.length,4),a=ke("b_data",r[2].dataType,r[2].dims.length,4),l=ke("c_data",r[0].dataType,r[0].dims.length,4),c,m=(d,u,g)=>`select(${u}, ${d}, ${g})`;if(!s)c=n.setByOffset("global_idx",m(i.getByOffset("global_idx"),a.getByOffset("global_idx"),l.getByOffset("global_idx")));else{let d=(u,g,f="")=>{let y=`a_data[index_a${g}][component_a${g}]`,I=`b_data[index_b${g}][component_b${g}]`,w=`bool(c_data[index_c${g}] & (0xffu << (component_c${g} * 8)))`;return`
            let output_indices${g} = ${n.offsetToIndices(`global_idx * 4u + ${g}u`)};
            let offset_a${g} = ${i.broadcastedIndicesToOffset(`output_indices${g}`,n)};
            let offset_b${g} = ${a.broadcastedIndicesToOffset(`output_indices${g}`,n)};
            let offset_c${g} = ${l.broadcastedIndicesToOffset(`output_indices${g}`,n)};
            let index_a${g} = offset_a${g} / 4u;
            let index_b${g} = offset_b${g} / 4u;
            let index_c${g} = offset_c${g} / 4u;
            let component_a${g} = offset_a${g} % 4u;
            let component_b${g} = offset_b${g} % 4u;
            let component_c${g} = offset_c${g} % 4u;
            ${u}[${g}] = ${f}(${m(y,I,w)});
          `};o===9?c=`
            var data = vec4<u32>(0);
            ${d("data",0,"u32")}
            ${d("data",1,"u32")}
            ${d("data",2,"u32")}
            ${d("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:c=`
            ${d("output_data[global_idx]",0)}
            ${d("output_data[global_idx]",1)}
            ${d("output_data[global_idx]",2)}
            ${d("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(l,i,a,n)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${c}
      }`},xM=e=>{let r=e[1].dims,t=e[2].dims,s=e[0].dims,o=e[1].dataType,n=!(ve.areEqual(r,t)&&ve.areEqual(t,s)),i=r,a=ve.size(r);if(n){let c=no.calcShape(no.calcShape(r,t,!1),s,!1);if(!c)throw new Error("Can't perform where op on the given tensors");i=c,a=ve.size(i)}let l=Math.ceil(a/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:c=>vM(c,e,i,n,o),getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:12,data:l},...ut(s,r,t,i)]})}},Z0=e=>{e.compute(xM(e.inputs))}}),ev,gT=Ue(()=>{Ix(),Mu(),Ax(),Fx(),Ox(),Dx(),Lx(),Nx(),Ux(),Wx(),Gx(),Kx(),Hx(),qx(),Qx(),Xx(),Jx(),Yx(),Zx(),eT(),tT(),rT(),sT(),nT(),oT(),M0(),iT(),aT(),lT(),cT(),uT(),wu(),dT(),T0(),pT(),mT(),hT(),v0(),_T(),an(),bu(),fT(),ev=new Map([["Abs",[Hb]],["Acos",[qb]],["Acosh",[Qb]],["Add",[$y]],["ArgMax",[Ub,Hc]],["ArgMin",[Vb,Hc]],["Asin",[Xb]],["Asinh",[Jb]],["Atan",[Yb]],["Atanh",[Zb]],["Attention",[Wb]],["AveragePool",[F0,A0]],["BatchNormalization",[Gb]],["BiasAdd",[Kb]],["BiasSplitGelu",[Sy]],["Cast",[ty,ey]],["Ceil",[sy]],["Clip",[ry]],["Concat",[Ry,jy]],["Conv",[Zc,Yc]],["ConvTranspose",[Xy,Qy]],["Cos",[ny]],["Cosh",[oy]],["CumSum",[Jy,Yy]],["DepthToSpace",[Zy,e0]],["DequantizeLinear",[j0,N0]],["Div",[ky]],["Einsum",[t0,r0]],["Elu",[iy,Ho]],["Equal",[Iy]],["Erf",[ay]],["Exp",[ly]],["Expand",[s0]],["FastGelu",[n0]],["Floor",[cy]],["FusedConv",[Zc,Yc]],["Gather",[i0,o0]],["GatherElements",[p0,d0]],["GatherBlockQuantized",[c0,u0]],["GatherND",[a0,l0]],["Gelu",[uy]],["Gemm",[h0,m0]],["GlobalAveragePool",[D0,O0]],["GlobalMaxPool",[R0,B0]],["Greater",[Dy]],["GreaterOrEqual",[zy]],["GridSample",[_0,f0]],["GroupQueryAttention",[E0]],["HardSigmoid",[wy,gy]],["InstanceNormalization",[P0]],["LayerNormalization",[C0]],["LeakyRelu",[dy,Ho]],["Less",[Ly]],["LessOrEqual",[By]],["Log",[Py]],["MatMul",[S0]],["MatMulNBits",[$0,k0]],["MaxPool",[L0,z0]],["Mul",[Ay]],["MultiHeadAttention",[w0,g0]],["Neg",[my]],["Not",[py]],["Pad",[I0]],["Pow",[Fy]],["QuickGelu",[Cy,Ho]],["Range",[V0]],["Reciprocal",[hy]],["ReduceMin",[zb]],["ReduceMean",[Ab]],["ReduceMax",[Lb]],["ReduceSum",[Rb]],["ReduceProd",[Bb]],["ReduceL1",[Fb]],["ReduceL2",[Ob]],["ReduceLogSum",[Nb]],["ReduceLogSumExp",[Db]],["ReduceSumSquare",[jb]],["Relu",[_y]],["Resize",[G0,K0]],["RotaryEmbedding",[x0]],["ScatterND",[W0,U0]],["Sigmoid",[fy]],["Sin",[My]],["Sinh",[by]],["Slice",[q0,Q0]],["SkipLayerNormalization",[H0]],["Split",[b0,y0]],["Sqrt",[yy]],["Softmax",[X0,J0]],["Sub",[Oy]],["Tan",[vy]],["Tanh",[xy]],["ThresholdedRelu",[Ey,Ho]],["Tile",[Y0]],["Transpose",[bb,yb]],["Where",[Z0]]])}),tv,wT=Ue(()=>{$s(),Us(),Ct(),tv=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,r){this.repo.set(e,r)}run(e,r,t,s,o){Ss(e.programInfo.name);let n=this.backend.device,i=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let a=[];for(let c of r)a.push({binding:a.length,resource:{buffer:c.buffer}});for(let c of t)a.push({binding:a.length,resource:{buffer:c.buffer}});o&&a.push({binding:a.length,resource:o});let l=n.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:a,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let c={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(c)}i.setPipeline(e.computePipeline),i.setBindGroup(0,l),i.dispatchWorkgroups(...s),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),ms(e.programInfo.name)}dispose(){}build(e,r){Ss(e.name);let t=this.backend.device,s=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(c=>{t.features.has(c.feature)&&s.push(`enable ${c.extension};`)});let o=Mb(r,this.backend.device.limits),n=e.getShaderSource(o),i=`${s.join(`
`)}
${o.additionalImplementations}
${n}`,a=t.createShaderModule({code:i,label:e.name});zt("verbose",()=>`[WebGPU] ${e.name} shader code: ${i}`);let l=t.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:e.name});return ms(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:o.variablesInfo}}normalizeDispatchGroupSize(e){let r=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,s=typeof e=="number"?1:e.z||1,o=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=o&&t<=o&&s<=o)return[r,t,s];let n=r*t*s,i=Math.ceil(Math.sqrt(n));if(i>o){if(i=Math.ceil(Math.cbrt(n)),i>o)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[i,i,i]}else return[i,i,1]}}}),rv={};io(rv,{WebGpuBackend:()=>sv});var TM,EM,PM,sv,MT=Ue(()=>{$s(),wt(),Us(),hb(),$x(),gT(),wT(),TM=(e,r)=>{if(r.length!==e.length)throw new Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${e.length}.`);let t=[];for(let s=0;s<e.length;++s){let o=e[s].dataType;switch(r[s]){case"none":{t.push("");break}case"type":{t.push(`${o}`);break}case"rank":{let n=e[s].dims.length;t.push(`${o};${n}`);break}case"dims":{let n=e[s].dims.join(",");t.push(`${o};${n}`);break}default:throw new Error(`unsupported input dependency: ${r[s]}`)}}return t.join("|")},EM=(e,r,t)=>{var o,n;let s=e.name;return(o=e.shaderCache)!=null&&o.hint&&(s+="["+e.shaderCache.hint+"]"),s+=":"+t+`:${TM(r,((n=e.shaderCache)==null?void 0:n.inputDependencies)??new Array(r.length).fill("dims"))}`,s},PM=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},sv=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,r){this.env=e;let t=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t},o=n=>r.features.has(n)&&t.push(n)&&!0;o("chromium-experimental-timestamp-query-inside-passes")||o("timestamp-query"),o("shader-f16"),o("subgroups"),this.device=await r.requestDevice(s),this.adapterInfo=new PM(r.info||await r.requestAdapterInfo()),this.gpuDataManager=gb(this),this.programManager=new tv(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,hu(e.logLevel,!!e.debug),this.device.onuncapturederror=n=>{n.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${n.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Ss(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{var s;let r=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let o=0;o<r.length/2;o++){let n=t[o],i=n.kernelId,a=this.kernels.get(i),l=a.kernelType,c=a.kernelName,m=n.programName,d=n.inputTensorViews,u=n.outputTensorViews,g=r[o*2],f=r[o*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=g);let y=Number(g-this.queryTimeBase),I=Number(f-this.queryTimeBase);if(!Number.isSafeInteger(y)||!Number.isSafeInteger(I))throw new RangeError("incorrect timestamp range");if((s=this.env.webgpu.profiling)!=null&&s.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:d.map(w=>({dims:w.dims,dataType:Vs(w.dataType)})),outputsMetadata:u.map(w=>({dims:w.dims,dataType:Vs(w.dataType)})),kernelId:i,kernelType:l,kernelName:c,programName:m,startTime:y,endTime:I});else{let w="";d.forEach((k,x)=>{w+=`input[${x}]: [${k.dims}] | ${Vs(k.dataType)}, `});let b="";u.forEach((k,x)=>{b+=`output[${x}]: [${k.dims}] | ${Vs(k.dataType)}, `}),console.log(`[profiling] kernel "${i}|${l}|${c}|${m}" ${w}${b}execution time: ${I-y} ns`)}Yo("GPU",`${m}::${g}::${f}`)}e.unmap(),this.pendingQueries.delete(e)}),ms()}run(e,r,t,s,o,n){Ss(e.name);let i=[];for(let b=0;b<r.length;++b){let k=r[b].data;if(k===0)continue;let x=this.gpuDataManager.get(k);if(!x)throw new Error(`no GPU data for input: ${k}`);i.push(x)}let{outputs:a,dispatchGroup:l,programUniforms:c}=e.getRunData(r),m=t.length===0?a.map((b,k)=>k):t;if(m.length!==a.length)throw new Error(`Output size ${m.length} must be equal to ${a.length}.`);let d=[],u=[];for(let b=0;b<a.length;++b){if(!Number.isInteger(m[b])||m[b]<-3||m[b]>=n)throw new Error(`Invalid output index: ${m[b]}`);if(m[b]===-3)continue;let k=m[b]===-1,x=m[b]===-2,v=k||x?o(a[b].dataType,a[b].dims):s(m[b],a[b].dataType,a[b].dims);if(d.push(v),v.data===0)continue;let E=this.gpuDataManager.get(v.data);if(!E)throw new Error(`no GPU data for output: ${v.data}`);if(k&&this.temporaryData.push(E),x){let T=this.kernelPersistentData.get(this.currentKernelId);T||(T=[],this.kernelPersistentData.set(this.currentKernelId,T)),T.push(E)}u.push(E)}if(i.length!==r.length||u.length!==d.length){if(u.length===0)return ms(e.name),d;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let g;if(c){let b=0,k=[];c.forEach(T=>{let C=typeof T.data=="number"?[T.data]:T.data;if(C.length===0)return;let D=T.type===10?2:4,z,K;T.type===10?(K=C.length>4?16:C.length>2?8:C.length*D,z=C.length>4?16:D*C.length):(K=C.length<=2?C.length*D:16,z=16),b=Math.ceil(b/K)*K,k.push(b);let H=T.type===10?8:4;b+=C.length>4?Math.ceil(C.length/H)*z:C.length*D});let x=16;b=Math.ceil(b/x)*x;let v=new ArrayBuffer(b);c.forEach((T,C)=>{let D=k[C],z=typeof T.data=="number"?[T.data]:T.data;if(T.type===6)new Int32Array(v,D,z.length).set(z);else if(T.type===12)new Uint32Array(v,D,z.length).set(z);else if(T.type===10)new Uint16Array(v,D,z.length).set(z);else if(T.type===1)new Float32Array(v,D,z.length).set(z);else throw new Error(`Unsupported uniform type: ${Vs(T.type)}`)});let E=this.gpuDataManager.create(b,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(E.buffer,0,v,0,b),this.gpuDataManager.release(E.id),g={offset:0,size:b,buffer:E.buffer}}let f=this.programManager.normalizeDispatchGroupSize(l),y=f[1]===1&&f[2]===1,I=EM(e,r,y),w=this.programManager.getArtifact(I);if(w||(w=this.programManager.build(e,f),this.programManager.setArtifact(I,w),zt("info",()=>`[artifact] key: ${I}, programName: ${e.name}`)),c&&w.uniformVariablesInfo){if(c.length!==w.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${w.uniformVariablesInfo.length}, got ${c.length} in program "${w.programInfo.name}".`);for(let b=0;b<c.length;b++){let k=c[b],x=k.type,v=typeof k.data=="number"?1:k.data.length,[E,T]=w.uniformVariablesInfo[b];if(x!==E||v!==T)throw new Error(`Uniform variable ${b} mismatch: expect type ${E} with size ${T}, got type ${x} with size ${v} in program "${w.programInfo.name}".`)}}if(zt("info",()=>`[ProgramManager] run "${e.name}" (key=${I}) with ${f[0]}x${f[1]}x${f[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let b={kernelId:this.currentKernelId,programName:w.programInfo.name,inputTensorViews:r,outputTensorViews:d};this.pendingKernels.push(b),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(b)}return this.programManager.run(w,i,u,f,g),ms(e.name),d}upload(e,r){this.gpuDataManager.upload(e,r)}memcpy(e,r){this.gpuDataManager.memcpy(e,r)}async download(e,r){await this.gpuDataManager.download(e,r)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,r,t,s){let o=ev.get(e);if(!o)throw new Error(`kernel not implemented: ${e}`);let n={kernelType:e,kernelName:s,kernelEntry:o[0],attributes:[o[1],t]};this.kernels.set(r,n)}releaseKernel(e){let r=this.kernelPersistentData.get(e);if(r){for(let t of r)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,r,t){let s=this.kernels.get(e);if(!s)throw new Error(`kernel not created: ${e}`);let o=s.kernelType,n=s.kernelName,i=s.kernelEntry,a=s.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${o}] ${n}" is not allowed to be called recursively`);this.currentKernelId=e,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),zt("info",()=>`[WebGPU] Start to run kernel "[${o}] ${n}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),i(r,a[1]),0}catch(c){return t.push(Promise.resolve(`[WebGPU] Kernel "[${o}] ${n}" failed. ${c}`)),1}finally{l&&t.push(this.device.popErrorScope().then(c=>c?`GPU validation error for kernel "[${o}] ${n}": ${c.message}`:null));for(let c of this.temporaryData)this.gpuDataManager.release(c.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,r,t,s){let o=this.sessionExternalDataMapping.get(e);o||(o=new Map,this.sessionExternalDataMapping.set(e,o));let n=o.get(r),i=this.gpuDataManager.registerExternalBuffer(t,s,n);return o.set(r,[i,t]),i}unregisterBuffers(e){let r=this.sessionExternalDataMapping.get(e);r&&(r.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let r=this.gpuDataManager.get(e);if(!r)throw new Error(`no GPU data for buffer: ${e}`);return r.buffer}createDownloader(e,r,t){return async()=>{let s=await Wc(this,e,r);return _u(s.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType="none",(((e=this.env.webgpu.profiling)==null?void 0:e.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){zt("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){zt("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){zt("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),t=e.length;this.pendingKernels=[];for(let s=0;s<t;s++){let o=this.getComputePassEncoder(),n=e[s];this.writeTimestamp(this.pendingDispatchNumber*2),o.setPipeline(n.computePipeline),o.setBindGroup(0,n.bindGroup),o.dispatchWorkgroups(...n.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),nv={};io(nv,{init:()=>ov});var na,CM,ov,bT=Ue(()=>{wt(),Us(),Pt(),Sx(),na=class iv{constructor(r,t,s,o){this.module=r,this.dataType=t,this.data=s,this.dims=o}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let r=ve.size(this.dims);return r===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,r)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let r=ve.size(this.dims);return r===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,r)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let r=ve.size(this.dims);return r===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,r)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let r=ve.size(this.dims);return r===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,r)}reshape(r){if(ve.size(r)!==ve.size(this.dims))throw new Error("Invalid new shape");return new iv(this.module,this.dataType,this.data,r)}},CM=class{constructor(e,r,t){this.module=e,this.backend=r,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=r.adapterInfo;let s=e.PTR_SIZE,o=t/e.PTR_SIZE,n=s===4?"i32":"i64";this.opKernelContext=Number(e.getValue(s*o++,n));let i=Number(e.getValue(s*o++,n));this.outputCount=Number(e.getValue(s*o++,n)),this.customDataOffset=Number(e.getValue(s*o++,"*")),this.customDataSize=Number(e.getValue(s*o++,n));let a=[];for(let l=0;l<i;l++){let c=Number(e.getValue(s*o++,n)),m=Number(e.getValue(s*o++,"*")),d=Number(e.getValue(s*o++,n)),u=[];for(let g=0;g<d;g++)u.push(Number(e.getValue(s*o++,n)));a.push(new na(e,c,m,u))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,r){var i;let t=((i=r==null?void 0:r.inputs)==null?void 0:i.map(a=>typeof a=="number"?this.inputs[a]:a))??this.inputs,s=(r==null?void 0:r.outputs)??[],o=(a,l,c)=>new na(this.module,l,this.output(a,c),c),n=(a,l)=>{let c=In(a,l);if(!c)throw new Error(`Unsupported data type: ${a}`);let m=c>0?this.backend.gpuDataManager.create(c).id:0;return new na(this.module,a,m,l)};return this.backend.run(e,t,s,o,n,this.outputCount)}output(e,r){let t=this.module.stackSave();try{let s=this.module.PTR_SIZE,o=s===4?"i32":"i64",n=this.module.stackAlloc((1+r.length)*s);this.module.setValue(n,r.length,o);for(let i=0;i<r.length;i++)this.module.setValue(n+s*(i+1),r[i],o);return this.module._JsepOutput(this.opKernelContext,e,n)}catch(s){throw new Error(`Failed to generate kernel's output[${e}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(t)}}},ov=async(e,r,t,s)=>{let o=r.jsepInit;if(!o)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let n=(MT(),Jo(rv)).WebGpuBackend,i=new n;await i.initialize(t,s),o("webgpu",[i,a=>i.alloc(Number(a)),a=>i.free(a),(a,l,c,m=!1)=>{if(m)zt("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(a)}, dst=${Number(l)}, size=${Number(c)}`),i.memcpy(Number(a),Number(l));else{zt("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(a)}, gpuDataId=${Number(l)}, size=${Number(c)}`);let d=r.HEAPU8.subarray(Number(a>>>0),Number(a>>>0)+Number(c));i.upload(Number(l),d)}},async(a,l,c)=>{zt("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${a}, dataOffset=${l}, size=${c}`),await i.download(Number(a),()=>r.HEAPU8.subarray(Number(l)>>>0,Number(l+c)>>>0))},(a,l,c)=>i.createKernel(a,Number(l),c,r.UTF8ToString(r._JsepGetNodeName(Number(l)))),a=>i.releaseKernel(a),(a,l,c,m)=>{zt("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${c}, kernel=${a}, contextDataOffset=${l}`);let d=new CM(r,i,Number(l));return i.computeKernel(Number(a),d,m)},()=>i.captureBegin(),()=>i.captureEnd(),()=>i.replay()])}else{let n=new fb(t);o("webnn",[n,()=>n.reserveTensorId(),i=>n.releaseTensorId(i),async(i,a,l,c,m)=>n.ensureTensor(i,a,l,c,m),(i,a)=>{n.uploadTensor(i,a)},async(i,a)=>n.downloadTensor(i,a)])}}}),SM,Pu,Cu,sn,$M,Dc,ga,Su,$u,Lc,ku,Iu,Au,av=Ue(()=>{Ex(),Px(),wt(),Ln(),cu(),ub(),SM=(e,r)=>{Yt()._OrtInit(e,r)!==0&&qt("Can't initialize onnxruntime.")},Pu=async e=>{SM(e.wasm.numThreads,pa(e.logLevel))},Cu=async(e,r)=>{var t,s;(s=(t=Yt()).asyncInit)==null||s.call(t);{let o=(bT(),Jo(nv)).init;if(r==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=e.webgpu.adapter;if(n){if(typeof n.limits!="object"||typeof n.features!="object"||typeof n.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let a=e.webgpu.forceFallbackAdapter;if(a!==void 0&&typeof a!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${a}"`);if(n=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:a}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await o("webgpu",Yt(),e,n)}if(r==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await o("webnn",Yt(),e)}}},sn=new Map,$M=e=>{let r=Yt(),t=r.stackSave();try{let s=r.PTR_SIZE,o=r.stackAlloc(2*s);r._OrtGetInputOutputCount(e,o,o+s)!==0&&qt("Can't get session input/output count.");let n=s===4?"i32":"i64";return[Number(r.getValue(o,n)),Number(r.getValue(o+s,n))]}finally{r.stackRestore(t)}},Dc=(e,r)=>{let t=Yt(),s=t.stackSave(),o=0;try{let n=t.PTR_SIZE,i=t.stackAlloc(2*n);t._OrtGetInputOutputMetadata(e,r,i,i+n)!==0&&qt("Can't get session input/output metadata.");let a=Number(t.getValue(i,"*"));o=Number(t.getValue(i+n,"*"));let l=t.HEAP32[o/4];if(l===0)return[a,0];let c=t.HEAPU32[o/4+1],m=[];for(let d=0;d<c;d++){let u=Number(t.getValue(o+8+d*n,"*"));m.push(u!==0?t.UTF8ToString(u):Number(t.getValue(o+8+(d+c)*n,"*")))}return[a,l,m]}finally{t.stackRestore(s),o!==0&&t._OrtFree(o)}},ga=e=>{let r=Yt(),t=r._malloc(e.byteLength);if(t===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return r.HEAPU8.set(e,t),[t,e.byteLength]},Su=async(e,r)=>{var d,u,g,f;let t,s,o=Yt();Array.isArray(e)?[t,s]=e:e.buffer===o.HEAPU8.buffer?[t,s]=[e.byteOffset,e.byteLength]:[t,s]=ga(e);let n=0,i=0,a=0,l=[],c=[],m=[];try{if([i,l]=await cb(r),(r==null?void 0:r.externalData)&&o.mountExternalData){let C=[];for(let D of r.externalData){let z=typeof D=="string"?D:D.path;C.push(mu(typeof D=="string"?D:D.data).then(K=>{o.mountExternalData(z,K)}))}await Promise.all(C)}for(let C of(r==null?void 0:r.executionProviders)??[])if((typeof C=="string"?C:C.name)==="webnn"){if(o.shouldTransferToMLTensor=!1,typeof C!="string"){let D=C,z=D==null?void 0:D.context,K=D==null?void 0:D.gpuDevice,H=D==null?void 0:D.deviceType,R=D==null?void 0:D.powerPreference;z?o.currentContext=z:K?o.currentContext=await o.webnnCreateMLContext(K):o.currentContext=await o.webnnCreateMLContext({deviceType:H,powerPreference:R})}else o.currentContext=await o.webnnCreateMLContext();break}n=await o._OrtCreateSession(t,s,i),(d=o.webgpuOnCreateSession)==null||d.call(o,n),n===0&&qt("Can't create a session."),(u=o.jsepOnCreateSession)==null||u.call(o),o.currentContext&&(o.webnnRegisterMLContext(n,o.currentContext),o.currentContext=void 0,o.shouldTransferToMLTensor=!0);let[y,I]=$M(n),w=!!(r!=null&&r.enableGraphCapture),b=[],k=[],x=[],v=[],E=[];for(let C=0;C<y;C++){let[D,z,K]=Dc(n,C);D===0&&qt("Can't get an input name."),c.push(D);let H=o.UTF8ToString(D);b.push(H),x.push(z===0?{name:H,isTensor:!1}:{name:H,isTensor:!0,type:Vs(z),shape:K})}for(let C=0;C<I;C++){let[D,z,K]=Dc(n,C+y);D===0&&qt("Can't get an output name."),m.push(D);let H=o.UTF8ToString(D);k.push(H),v.push(z===0?{name:H,isTensor:!1}:{name:H,isTensor:!0,type:Vs(z),shape:K});{if(w&&(r==null?void 0:r.preferredOutputLocation)===void 0){E.push("gpu-buffer");continue}let R=typeof(r==null?void 0:r.preferredOutputLocation)=="string"?r.preferredOutputLocation:((g=r==null?void 0:r.preferredOutputLocation)==null?void 0:g[H])??"cpu";if(R!=="cpu"&&R!=="cpu-pinned"&&R!=="gpu-buffer"&&R!=="ml-tensor")throw new Error(`Not supported preferred output location: ${R}.`);if(w&&R!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${R}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);E.push(R)}}let T=null;return E.some(C=>C==="gpu-buffer"||C==="ml-tensor")&&(a=o._OrtCreateBinding(n),a===0&&qt("Can't create IO binding."),T={handle:a,outputPreferredLocations:E,outputPreferredLocationsEncoded:E.map(C=>Vc(C))}),sn.set(n,[n,c,m,T,w,!1]),[n,b,k,x,v]}catch(y){throw c.forEach(I=>o._OrtFree(I)),m.forEach(I=>o._OrtFree(I)),a!==0&&o._OrtReleaseBinding(a)!==0&&qt("Can't release IO binding."),n!==0&&o._OrtReleaseSession(n)!==0&&qt("Can't release session."),y}finally{o._free(t),i!==0&&o._OrtReleaseSessionOptions(i)!==0&&qt("Can't release session options."),l.forEach(y=>o._free(y)),(f=o.unmountExternalData)==null||f.call(o)}},$u=e=>{var l,c,m;let r=Yt(),t=sn.get(e);if(!t)throw new Error(`cannot release session. invalid session id: ${e}`);let[s,o,n,i,a]=t;i&&(a&&r._OrtClearBoundOutputs(i.handle)!==0&&qt("Can't clear bound outputs."),r._OrtReleaseBinding(i.handle)!==0&&qt("Can't release IO binding.")),(l=r.jsepOnReleaseSession)==null||l.call(r,e),(c=r.webnnOnReleaseSession)==null||c.call(r,e),(m=r.webgpuOnReleaseSession)==null||m.call(r,e),o.forEach(d=>r._OrtFree(d)),n.forEach(d=>r._OrtFree(d)),r._OrtReleaseSession(s)!==0&&qt("Can't release session."),sn.delete(e)},Lc=async(e,r,t,s,o,n,i=!1)=>{if(!e){r.push(0);return}let a=Yt(),l=a.PTR_SIZE,c=e[0],m=e[1],d=e[3],u=d,g,f;if(c==="string"&&(d==="gpu-buffer"||d==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(i&&d!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${n} when enableGraphCapture is true.`);if(d==="gpu-buffer"){let w=e[2].gpuBuffer;f=In(to(c),m);{let b=a.jsepRegisterBuffer;if(!b)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');g=b(s,n,w,f)}}else if(d==="ml-tensor"){let w=e[2].mlTensor;f=In(to(c),m);let b=a.webnnRegisterMLTensor;if(!b)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');g=b(s,w,to(c),m)}else{let w=e[2];if(Array.isArray(w)){f=l*w.length,g=a._malloc(f),t.push(g);for(let b=0;b<w.length;b++){if(typeof w[b]!="string")throw new TypeError(`tensor data at index ${b} is not a string`);a.setValue(g+b*l,Es(w[b],t),"*")}}else{let b=a.webnnIsGraphInput;if(c!=="string"&&b){let k=a.UTF8ToString(o);if(b(s,k)){let x=to(c);f=In(x,m),u="ml-tensor";let v=a.webnnCreateTemporaryTensor,E=a.webnnUploadTensor;if(!v||!E)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let T=await v(s,x,m);E(T,new Uint8Array(w.buffer,w.byteOffset,w.byteLength)),g=T}else f=w.byteLength,g=a._malloc(f),t.push(g),a.HEAPU8.set(new Uint8Array(w.buffer,w.byteOffset,f),g)}else f=w.byteLength,g=a._malloc(f),t.push(g),a.HEAPU8.set(new Uint8Array(w.buffer,w.byteOffset,f),g)}}let y=a.stackSave(),I=a.stackAlloc(4*m.length);try{m.forEach((b,k)=>a.setValue(I+k*l,b,l===4?"i32":"i64"));let w=a._OrtCreateTensor(to(c),g,f,I,m.length,Vc(u));w===0&&qt(`Can't create tensor for input/output. session=${s}, index=${n}.`),r.push(w)}finally{a.stackRestore(y)}},ku=async(e,r,t,s,o,n)=>{var K,H,R,re;let i=Yt(),a=i.PTR_SIZE,l=sn.get(e);if(!l)throw new Error(`cannot run inference. invalid session id: ${e}`);let c=l[0],m=l[1],d=l[2],u=l[3],g=l[4],f=l[5],y=r.length,I=s.length,w=0,b=[],k=[],x=[],v=[],E=i.stackSave(),T=i.stackAlloc(y*a),C=i.stackAlloc(y*a),D=i.stackAlloc(I*a),z=i.stackAlloc(I*a);try{[w,b]=lb(n);for(let ee=0;ee<y;ee++)await Lc(t[ee],k,v,e,m[r[ee]],r[ee],g);for(let ee=0;ee<I;ee++)await Lc(o[ee],x,v,e,d[s[ee]],y+s[ee],g);for(let ee=0;ee<y;ee++)i.setValue(T+ee*a,k[ee],"*"),i.setValue(C+ee*a,m[r[ee]],"*");for(let ee=0;ee<I;ee++)i.setValue(D+ee*a,x[ee],"*"),i.setValue(z+ee*a,d[s[ee]],"*");if(u&&!f){let{handle:ee,outputPreferredLocations:ie,outputPreferredLocationsEncoded:he}=u;if(m.length!==y)throw new Error(`input count from feeds (${y}) is expected to be always equal to model's input count (${m.length}).`);for(let de=0;de<y;de++){let N=r[de];await i._OrtBindInput(ee,m[N],k[de])!==0&&qt(`Can't bind input[${de}] for session=${e}.`)}for(let de=0;de<I;de++){let N=s[de];(K=o[de])!=null&&K[3]?i._OrtBindOutput(ee,d[N],x[de],0)!==0&&qt(`Can't bind pre-allocated output[${de}] for session=${e}.`):i._OrtBindOutput(ee,d[N],0,he[N])!==0&&qt(`Can't bind output[${de}] to ${ie[de]} for session=${e}.`)}sn.set(e,[c,m,d,u,g,!0])}(H=i.jsepOnRunStart)==null||H.call(i,c),(R=i.webnnOnRunStart)==null||R.call(i,c);let q;u?q=await i._OrtRunWithBinding(c,u.handle,I,D,w):q=await i._OrtRun(c,C,T,y,z,I,D,w),q!==0&&qt("failed to call OrtRun().");let te=[];for(let ee=0;ee<I;ee++){let ie=Number(i.getValue(D+ee*a,"*"));if(ie===x[ee]){te.push(o[ee]);continue}let he=i.stackSave(),de=i.stackAlloc(4*a),N=!1,O,W=0;try{i._OrtGetTensorData(ie,de,de+a,de+2*a,de+3*a)!==0&&qt(`Can't access output tensor data on index ${ee}.`);let ne=a===4?"i32":"i64",fe=Number(i.getValue(de,ne));W=i.getValue(de+a,"*");let ae=i.getValue(de+a*2,"*"),xe=Number(i.getValue(de+a*3,ne)),Be=[];for(let J=0;J<xe;J++)Be.push(Number(i.getValue(ae+J*a,ne)));i._OrtFree(ae)!==0&&qt("Can't free memory for tensor dims.");let Ke=Be.reduce((J,le)=>J*le,1);O=Vs(fe);let Ae=u==null?void 0:u.outputPreferredLocations[s[ee]];if(O==="string"){if(Ae==="gpu-buffer"||Ae==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let J=[];for(let le=0;le<Ke;le++){let G=i.getValue(W+le*a,"*"),ye=i.getValue(W+(le+1)*a,"*"),Ie=le===Ke-1?void 0:ye-G;J.push(i.UTF8ToString(G,Ie))}te.push([O,Be,J,"cpu"])}else if(Ae==="gpu-buffer"&&Ke>0){let J=i.jsepGetBuffer;if(!J)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let le=J(W),G=In(fe,Ke);if(G===void 0||!du(O))throw new Error(`Unsupported data type: ${O}`);N=!0,te.push([O,Be,{gpuBuffer:le,download:i.jsepCreateDownloader(le,G,O),dispose:()=>{i._OrtReleaseTensor(ie)!==0&&qt("Can't release tensor.")}},"gpu-buffer"])}else if(Ae==="ml-tensor"&&Ke>0){let J=i.webnnEnsureTensor,le=i.webnnIsInt64Supported;if(!J||!le)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(In(fe,Ke)===void 0||!pu(O))throw new Error(`Unsupported data type: ${O}`);if(O==="int64"&&!le(e))throw new Error('preferredLocation "ml-tensor" for int64 output is not supported by current WebNN Context.');let G=await J(e,W,fe,Be,!1);N=!0,te.push([O,Be,{mlTensor:G,download:i.webnnCreateMLTensorDownloader(W,O),dispose:()=>{i.webnnReleaseTensorId(W),i._OrtReleaseTensor(ie)}},"ml-tensor"])}else{let J=uu(O),le=new J(Ke);new Uint8Array(le.buffer,le.byteOffset,le.byteLength).set(i.HEAPU8.subarray(W,W+le.byteLength)),te.push([O,Be,le,"cpu"])}}finally{i.stackRestore(he),O==="string"&&W&&i._free(W),N||i._OrtReleaseTensor(ie),(re=i.webnnOnRunEnd)==null||re.call(i,c)}}return u&&!g&&(i._OrtClearBoundOutputs(u.handle)!==0&&qt("Can't clear bound outputs."),sn.set(e,[c,m,d,u,g,!1])),te}finally{i.stackRestore(E),k.forEach(q=>i._OrtReleaseTensor(q)),x.forEach(q=>i._OrtReleaseTensor(q)),v.forEach(q=>i._free(q)),w!==0&&i._OrtReleaseRunOptions(w),b.forEach(q=>i._free(q))}},Iu=e=>{let r=Yt(),t=sn.get(e);if(!t)throw new Error("invalid session id");let s=t[0],o=r._OrtEndProfiling(s);o===0&&qt("Can't get an profile file name."),r._OrtFree(o)},Au=e=>{let r=[];for(let t of e){let s=t[2];!Array.isArray(s)&&"buffer"in s&&r.push(s.buffer)}return r}}),nn,rs,Zn,Uo,Wo,oa,zc,ia,Cn,Sn,kM,lv,cv,uv,dv,pv,mv,hv,_v=Ue(()=>{$s(),av(),Ln(),au(),nn=()=>!!er.wasm.proxy&&typeof document<"u",Zn=!1,Uo=!1,Wo=!1,ia=new Map,Cn=(e,r)=>{let t=ia.get(e);t?t.push(r):ia.set(e,[r])},Sn=()=>{if(Zn||!Uo||Wo||!rs)throw new Error("worker not ready")},kM=e=>{switch(e.data.type){case"init-wasm":Zn=!1,e.data.err?(Wo=!0,zc[1](e.data.err)):(Uo=!0,zc[0]()),oa&&(URL.revokeObjectURL(oa),oa=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=ia.get(e.data.type);e.data.err?r.shift()[1](e.data.err):r.shift()[0](e.data.out);break}}},lv=async()=>{if(!Uo){if(Zn)throw new Error("multiple calls to 'initWasm()' detected.");if(Wo)throw new Error("previous call to 'initWasm()' failed.");if(Zn=!0,nn())return new Promise((e,r)=>{rs==null||rs.terminate(),ib().then(([t,s])=>{try{rs=s,rs.onerror=n=>r(n),rs.onmessage=kM,zc=[e,r];let o={type:"init-wasm",in:er};!o.in.wasm.wasmPaths&&(t||Nc)&&(o.in.wasm.wasmPaths={wasm:new URL("/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href}),rs.postMessage(o),oa=t}catch(o){r(o)}},r)});try{await lu(er.wasm),await Pu(er),Uo=!0}catch(e){throw Wo=!0,e}finally{Zn=!1}}},cv=async e=>{if(nn())return Sn(),new Promise((r,t)=>{Cn("init-ep",[r,t]);let s={type:"init-ep",in:{epName:e,env:er}};rs.postMessage(s)});await Cu(er,e)},uv=async e=>nn()?(Sn(),new Promise((r,t)=>{Cn("copy-from",[r,t]);let s={type:"copy-from",in:{buffer:e}};rs.postMessage(s,[e.buffer])})):ga(e),dv=async(e,r)=>{if(nn()){if(r!=null&&r.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Sn(),new Promise((t,s)=>{Cn("create",[t,s]);let o={type:"create",in:{model:e,options:{...r}}},n=[];e instanceof Uint8Array&&n.push(e.buffer),rs.postMessage(o,n)})}else return Su(e,r)},pv=async e=>{if(nn())return Sn(),new Promise((r,t)=>{Cn("release",[r,t]);let s={type:"release",in:e};rs.postMessage(s)});$u(e)},mv=async(e,r,t,s,o,n)=>{if(nn()){if(t.some(i=>i[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(o.some(i=>i))throw new Error("pre-allocated output tensor is not supported for proxy.");return Sn(),new Promise((i,a)=>{Cn("run",[i,a]);let l=t,c={type:"run",in:{sessionId:e,inputIndices:r,inputs:l,outputIndices:s,options:n}};rs.postMessage(c,Au(l))})}else return ku(e,r,t,s,o,n)},hv=async e=>{if(nn())return Sn(),new Promise((r,t)=>{Cn("end-profiling",[r,t]);let s={type:"end-profiling",in:e};rs.postMessage(s)});Iu(e)}}),Bc,IM,fv,yT=Ue(()=>{$s(),_v(),wt(),iu(),ub(),Bc=(e,r)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${r()}`)}},IM=e=>{switch(e[3]){case"cpu":return new Ps(e[0],e[2],e[1]);case"gpu-buffer":{let r=e[0];if(!du(r))throw new Error(`not supported data type: ${r} for deserializing GPU tensor`);let{gpuBuffer:t,download:s,dispose:o}=e[2];return Ps.fromGpuBuffer(t,{dataType:r,dims:e[1],download:s,dispose:o})}case"ml-tensor":{let r=e[0];if(!pu(r))throw new Error(`not supported data type: ${r} for deserializing MLTensor tensor`);let{mlTensor:t,download:s,dispose:o}=e[2];return Ps.fromMLTensor(t,{dataType:r,dims:e[1],download:s,dispose:o})}default:throw new Error(`invalid data location: ${e[3]}`)}},fv=class{async fetchModelAndCopyToWasmMemory(e){return uv(await mu(e))}async loadModel(e,r){Ss();let t;typeof e=="string"?t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames,this.inputMetadata,this.outputMetadata]=await dv(t,r),ms()}async dispose(){return pv(this.sessionId)}async run(e,r,t){Ss();let s=[],o=[];Object.entries(e).forEach(d=>{let u=d[0],g=d[1],f=this.inputNames.indexOf(u);if(f===-1)throw new Error(`invalid input '${u}'`);s.push(g),o.push(f)});let n=[],i=[];Object.entries(r).forEach(d=>{let u=d[0],g=d[1],f=this.outputNames.indexOf(u);if(f===-1)throw new Error(`invalid output '${u}'`);n.push(g),i.push(f)});let a=s.map((d,u)=>Bc(d,()=>`input "${this.inputNames[o[u]]}"`)),l=n.map((d,u)=>d?Bc(d,()=>`output "${this.outputNames[i[u]]}"`):null),c=await mv(this.sessionId,o,a,i,l,t),m={};for(let d=0;d<c.length;d++)m[this.outputNames[i[d]]]=n[d]??IM(c[d]);return ms(),m}startProfiling(){}endProfiling(){hv(this.sessionId)}}}),gv={};io(gv,{OnnxruntimeWebAssemblyBackend:()=>ru,initializeFlags:()=>tu,wasmBackend:()=>wv});var tu,ru,wv,vT=Ue(()=>{$s(),_v(),yT(),tu=()=>{(typeof er.wasm.initTimeout!="number"||er.wasm.initTimeout<0)&&(er.wasm.initTimeout=0);let e=er.wasm.simd;if(typeof e!="boolean"&&e!==void 0&&e!=="fixed"&&e!=="relaxed"&&(console.warn(`Property "env.wasm.simd" is set to unknown value "${e}". Reset it to \`false\` and ignore SIMD feature checking.`),er.wasm.simd=!1),typeof er.wasm.proxy!="boolean"&&(er.wasm.proxy=!1),typeof er.wasm.trace!="boolean"&&(er.wasm.trace=!1),typeof er.wasm.numThreads!="number"||!Number.isInteger(er.wasm.numThreads)||er.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)er.wasm.numThreads=1;else{let r=typeof navigator>"u"?lx("node:os").cpus().length:navigator.hardwareConcurrency;er.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},ru=class{async init(e){tu(),await lv(),await cv(e)}async createInferenceSessionHandler(e,r){let t=new fv;return await t.loadModel(e,r),t}},wv=new ru});$s();$s();$s();var xT="1.22.0-dev.20250409-89f8206ba4",TT=eb;{let e=(vT(),Jo(gv)).wasmBackend;An("webgpu",e,5),An("webnn",e,5),An("cpu",e,10),An("wasm",e,10)}Object.defineProperty(er.versions,"web",{value:xT,enumerable:!0});/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ET=Object.freeze(Object.defineProperty({__proto__:null,get InferenceSession(){return ou},get TRACE(){return Yo},get TRACE_FUNC_BEGIN(){return Ss},get TRACE_FUNC_END(){return ms},get Tensor(){return Ps},default:TT,get env(){return er},get registerBackend(){return An}},Symbol.toStringTag,{value:"Module"}));var Ns={},PT={"onnxruntime-common":e=>{e.exports=nx},"onnxruntime-web":e=>{e.exports=ET},"?2ce3":()=>{},"?7992":()=>{},"?5af5":()=>{},"?2b25":()=>{},"?db59":()=>{},"?383f":()=>{},"?fa4b":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(e,r,t)=>{t.r(r),t.d(r,{Environment:()=>De,Interpreter:()=>it,Template:()=>Xt,parse:()=>ae,tokenize:()=>m});var s=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Comment:"Comment"}),o=class{constructor($,X){this.value=$,this.type=X}};function n($){return/\w/.test($)}function i($){return/[0-9]/.test($)}var a=[["{%",s.OpenStatement],["%}",s.CloseStatement],["{{",s.OpenExpression],["}}",s.CloseExpression],["(",s.OpenParen],[")",s.CloseParen],["{",s.OpenCurlyBracket],["}",s.CloseCurlyBracket],["[",s.OpenSquareBracket],["]",s.CloseSquareBracket],[",",s.Comma],[".",s.Dot],[":",s.Colon],["|",s.Pipe],["<=",s.ComparisonBinaryOperator],[">=",s.ComparisonBinaryOperator],["==",s.ComparisonBinaryOperator],["!=",s.ComparisonBinaryOperator],["<",s.ComparisonBinaryOperator],[">",s.ComparisonBinaryOperator],["+",s.AdditiveBinaryOperator],["-",s.AdditiveBinaryOperator],["~",s.AdditiveBinaryOperator],["*",s.MultiplicativeBinaryOperator],["/",s.MultiplicativeBinaryOperator],["%",s.MultiplicativeBinaryOperator],["=",s.Equals]],l=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function c($,X={}){return $.endsWith(`
`)&&($=$.slice(0,-1)),X.lstrip_blocks&&($=$.replace(/^[ \t]*({[#%-])/gm,"$1")),X.trim_blocks&&($=$.replace(/([#%-]})\n/g,"$1")),$.replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{").replace(/-#}\s*/g,"#}").replace(/\s*{#-/g,"{#").replace(/{%\s*(end)?generation\s*%}/gs,"")}function m($,X={}){var st,gt;const j=[],Q=c($,X);let se=0,we=0;const Oe=ht=>{let xt="";for(;ht(Q[se]);){if(Q[se]==="\\"){if(++se,se>=Q.length)throw new SyntaxError("Unexpected end of input");const nt=Q[se++],Bt=l.get(nt);if(Bt===void 0)throw new SyntaxError(`Unexpected escaped character: ${nt}`);xt+=Bt;continue}if(xt+=Q[se++],se>=Q.length)throw new SyntaxError("Unexpected end of input")}return xt};e:for(;se<Q.length;){const ht=(st=j.at(-1))==null?void 0:st.type;if(ht===void 0||ht===s.CloseStatement||ht===s.CloseExpression||ht===s.Comment){let nt="";for(;se<Q.length&&!(Q[se]==="{"&&(Q[se+1]==="%"||Q[se+1]==="{"||Q[se+1]==="#"));)nt+=Q[se++];if(nt.length>0){j.push(new o(nt,s.Text));continue}}if(Q[se]==="{"&&Q[se+1]==="#"){se+=2;let nt="";for(;Q[se]!=="#"||Q[se+1]!=="}";){if(se+2>=Q.length)throw new SyntaxError("Missing end of comment tag");nt+=Q[se++]}j.push(new o(nt,s.Comment)),se+=2;continue}Oe(nt=>/\s/.test(nt));const xt=Q[se];if(xt==="-"||xt==="+"){const nt=(gt=j.at(-1))==null?void 0:gt.type;if(nt===s.Text||nt===void 0)throw new SyntaxError(`Unexpected character: ${xt}`);switch(nt){case s.Identifier:case s.NumericLiteral:case s.StringLiteral:case s.CloseParen:case s.CloseSquareBracket:break;default:{++se;const Bt=Oe(i);j.push(new o(`${xt}${Bt}`,Bt.length>0?s.NumericLiteral:s.UnaryOperator));continue}}}for(const[nt,Bt]of a){if(nt==="}}"&&we>0)continue;if(Q.slice(se,se+nt.length)===nt){j.push(new o(nt,Bt)),Bt===s.OpenExpression?we=0:Bt===s.OpenCurlyBracket?++we:Bt===s.CloseCurlyBracket&&--we,se+=nt.length;continue e}}if(xt==="'"||xt==='"'){++se;const nt=Oe(Bt=>Bt!==xt);j.push(new o(nt,s.StringLiteral)),++se;continue}if(i(xt)){let nt=Oe(i);if(Q[se]==="."&&i(Q[se+1])){++se;const Bt=Oe(i);nt=`${nt}.${Bt}`}j.push(new o(nt,s.NumericLiteral));continue}if(n(xt)){const nt=Oe(n);j.push(new o(nt,s.Identifier));continue}throw new SyntaxError(`Unexpected character: ${xt}`)}return j}var d=class{constructor(){Y(this,"type","Statement")}},u=class extends d{constructor(X){super();Y(this,"type","Program");this.body=X}},g=class extends d{constructor(X,j,Q){super();Y(this,"type","If");this.test=X,this.body=j,this.alternate=Q}},f=class extends d{constructor(X,j,Q,se){super();Y(this,"type","For");this.loopvar=X,this.iterable=j,this.body=Q,this.defaultBlock=se}},y=class extends d{constructor(){super(...arguments);Y(this,"type","Break")}},I=class extends d{constructor(){super(...arguments);Y(this,"type","Continue")}},w=class extends d{constructor(X,j,Q){super();Y(this,"type","Set");this.assignee=X,this.value=j,this.body=Q}},b=class extends d{constructor(X,j,Q){super();Y(this,"type","Macro");this.name=X,this.args=j,this.body=Q}},k=class extends d{constructor(X){super();Y(this,"type","Comment");this.value=X}},x=class extends d{constructor(){super(...arguments);Y(this,"type","Expression")}},v=class extends x{constructor(X,j,Q){super();Y(this,"type","MemberExpression");this.object=X,this.property=j,this.computed=Q}},E=class extends x{constructor(X,j){super();Y(this,"type","CallExpression");this.callee=X,this.args=j}},T=class extends x{constructor(X){super();Y(this,"type","Identifier");this.value=X}},C=class extends x{constructor(X){super();Y(this,"type","Literal");this.value=X}},D=class extends C{constructor(){super(...arguments);Y(this,"type","IntegerLiteral")}},z=class extends C{constructor(){super(...arguments);Y(this,"type","FloatLiteral")}},K=class extends C{constructor(){super(...arguments);Y(this,"type","StringLiteral")}},H=class extends C{constructor(){super(...arguments);Y(this,"type","ArrayLiteral")}},R=class extends C{constructor(){super(...arguments);Y(this,"type","TupleLiteral")}},re=class extends C{constructor(){super(...arguments);Y(this,"type","ObjectLiteral")}},q=class extends x{constructor(X,j,Q){super();Y(this,"type","BinaryExpression");this.operator=X,this.left=j,this.right=Q}},te=class extends x{constructor(X,j){super();Y(this,"type","FilterExpression");this.operand=X,this.filter=j}},ee=class extends d{constructor(X,j){super();Y(this,"type","FilterStatement");this.filter=X,this.body=j}},ie=class extends x{constructor(X,j){super();Y(this,"type","SelectExpression");this.lhs=X,this.test=j}},he=class extends x{constructor(X,j,Q){super();Y(this,"type","TestExpression");this.operand=X,this.negate=j,this.test=Q}},de=class extends x{constructor(X,j){super();Y(this,"type","UnaryExpression");this.operator=X,this.argument=j}},N=class extends x{constructor(X=void 0,j=void 0,Q=void 0){super();Y(this,"type","SliceExpression");this.start=X,this.stop=j,this.step=Q}},O=class extends x{constructor(X,j){super();Y(this,"type","KeywordArgumentExpression");this.key=X,this.value=j}},W=class extends x{constructor(X){super();Y(this,"type","SpreadExpression");this.argument=X}},ne=class extends d{constructor(X,j,Q){super();Y(this,"type","CallStatement");this.call=X,this.callerArgs=j,this.body=Q}},fe=class extends x{constructor(X,j,Q){super();Y(this,"type","Ternary");this.condition=X,this.trueExpr=j,this.falseExpr=Q}};function ae($){const X=new u([]);let j=0;function Q(je,Ne){const tt=$[j++];if(!tt||tt.type!==je)throw new Error(`Parser Error: ${Ne}. ${tt.type} !== ${je}.`);return tt}function se(je){if(!gt(je))throw new SyntaxError(`Expected ${je}`);++j}function we(){switch($[j].type){case s.Comment:return new k($[j++].value);case s.Text:return ht();case s.OpenStatement:return xt();case s.OpenExpression:return nt();default:throw new SyntaxError(`Unexpected token type: ${$[j].type}`)}}function Oe(...je){return j+je.length<=$.length&&je.every((Ne,tt)=>Ne===$[j+tt].type)}function st(...je){var Ne,tt,Jt;return((Ne=$[j])==null?void 0:Ne.type)===s.OpenStatement&&((tt=$[j+1])==null?void 0:tt.type)===s.Identifier&&je.includes((Jt=$[j+1])==null?void 0:Jt.value)}function gt(...je){return j+je.length<=$.length&&je.every((Ne,tt)=>$[j+tt].type==="Identifier"&&Ne===$[j+tt].value)}function ht(){return new K(Q(s.Text,"Expected text token").value)}function xt(){if(Q(s.OpenStatement,"Expected opening statement token"),$[j].type!==s.Identifier)throw new SyntaxError(`Unknown statement, got ${$[j].type}`);const je=$[j].value;let Ne;switch(je){case"set":++j,Ne=Bt();break;case"if":++j,Ne=Vt(),Q(s.OpenStatement,"Expected {% token"),se("endif"),Q(s.CloseStatement,"Expected %} token");break;case"macro":++j,Ne=Nr(),Q(s.OpenStatement,"Expected {% token"),se("endmacro"),Q(s.CloseStatement,"Expected %} token");break;case"for":++j,Ne=sr(),Q(s.OpenStatement,"Expected {% token"),se("endfor"),Q(s.CloseStatement,"Expected %} token");break;case"call":{++j;let tt=null;Oe(s.OpenParen)&&(tt=es());const Jt=Gr();if(Jt.type!=="Identifier")throw new SyntaxError("Expected identifier following call statement");const zs=es();Q(s.CloseStatement,"Expected closing statement token");const _s=[];for(;!st("endcall");)_s.push(we());Q(s.OpenStatement,"Expected '{%'"),se("endcall"),Q(s.CloseStatement,"Expected closing statement token");const Bs=new E(Jt,zs);Ne=new ne(Bs,tt,_s);break}case"break":++j,Q(s.CloseStatement,"Expected closing statement token"),Ne=new y;break;case"continue":++j,Q(s.CloseStatement,"Expected closing statement token"),Ne=new I;break;case"filter":{++j;let tt=Gr();tt instanceof T&&Oe(s.OpenParen)&&(tt=Wr(tt)),Q(s.CloseStatement,"Expected closing statement token");const Jt=[];for(;!st("endfilter");)Jt.push(we());Q(s.OpenStatement,"Expected '{%'"),se("endfilter"),Q(s.CloseStatement,"Expected '%}'"),Ne=new ee(tt,Jt);break}default:throw new SyntaxError(`Unknown statement type: ${je}`)}return Ne}function nt(){Q(s.OpenExpression,"Expected opening expression token");const je=Sr();return Q(s.CloseExpression,"Expected closing expression token"),je}function Bt(){const je=Qr();let Ne=null;const tt=[];if(Oe(s.Equals))++j,Ne=Qr();else{for(Q(s.CloseStatement,"Expected %} token");!st("endset");)tt.push(we());Q(s.OpenStatement,"Expected {% token"),se("endset")}return Q(s.CloseStatement,"Expected closing statement token"),new w(je,Ne,tt)}function Vt(){const je=Sr();Q(s.CloseStatement,"Expected closing statement token");const Ne=[],tt=[];for(;!st("elif","else","endif");)Ne.push(we());if(st("elif")){++j,++j;const Jt=Vt();tt.push(Jt)}else if(st("else"))for(++j,++j,Q(s.CloseStatement,"Expected closing statement token");!st("endif");)tt.push(we());return new g(je,Ne,tt)}function Nr(){const je=Gr();if(je.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const Ne=es();Q(s.CloseStatement,"Expected closing statement token");const tt=[];for(;!st("endmacro");)tt.push(we());return new b(je,Ne,tt)}function Qr(je=!1){const Ne=je?Gr:Sr,tt=[Ne()],Jt=Oe(s.Comma);for(;Jt&&(++j,tt.push(Ne()),!!Oe(s.Comma)););return Jt?new R(tt):tt[0]}function sr(){const je=Qr(!0);if(!(je instanceof T||je instanceof R))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${je.type} instead`);if(!gt("in"))throw new SyntaxError("Expected `in` keyword following loop variable");++j;const Ne=Sr();Q(s.CloseStatement,"Expected closing statement token");const tt=[];for(;!st("endfor","else");)tt.push(we());const Jt=[];if(st("else"))for(++j,++j,Q(s.CloseStatement,"Expected closing statement token");!st("endfor");)Jt.push(we());return new f(je,Ne,tt,Jt)}function Sr(){return $r()}function $r(){const je=Vr();if(gt("if")){++j;const Ne=Vr();if(gt("else")){++j;const tt=$r();return new fe(Ne,je,tt)}else return new ie(je,Ne)}return je}function Vr(){let je=ls();for(;gt("or");){const Ne=$[j];++j;const tt=ls();je=new q(Ne,je,tt)}return je}function ls(){let je=kr();for(;gt("and");){const Ne=$[j];++j;const tt=kr();je=new q(Ne,je,tt)}return je}function kr(){let je;for(;gt("not");){const Ne=$[j];++j;const tt=kr();je=new de(Ne,tt)}return je??As()}function As(){let je=Fs();for(;;){let Ne;if(gt("not","in"))Ne=new o("not in",s.Identifier),j+=2;else if(gt("in"))Ne=$[j++];else if(Oe(s.ComparisonBinaryOperator))Ne=$[j++];else break;const tt=Fs();je=new q(Ne,je,tt)}return je}function Fs(){let je=_r();for(;Oe(s.AdditiveBinaryOperator);){const Ne=$[j];++j;const tt=_r();je=new q(Ne,je,tt)}return je}function Ur(){const je=mr(Gr());return Oe(s.OpenParen)?Wr(je):je}function Wr(je){let Ne=new E(je,es());return Ne=mr(Ne),Oe(s.OpenParen)&&(Ne=Wr(Ne)),Ne}function es(){Q(s.OpenParen,"Expected opening parenthesis for arguments list");const je=Dr();return Q(s.CloseParen,"Expected closing parenthesis for arguments list"),je}function Dr(){const je=[];for(;!Oe(s.CloseParen);){let Ne;if($[j].type===s.MultiplicativeBinaryOperator&&$[j].value==="*"){++j;const tt=Sr();Ne=new W(tt)}else if(Ne=Sr(),Oe(s.Equals)){if(++j,!(Ne instanceof T))throw new SyntaxError("Expected identifier for keyword argument");const tt=Sr();Ne=new O(Ne,tt)}je.push(Ne),Oe(s.Comma)&&++j}return je}function hs(){const je=[];let Ne=!1;for(;!Oe(s.CloseSquareBracket);)Oe(s.Colon)?(je.push(void 0),++j,Ne=!0):(je.push(Sr()),Oe(s.Colon)&&(++j,Ne=!0));if(je.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(Ne){if(je.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new N(...je)}return je[0]}function mr(je){for(;Oe(s.Dot)||Oe(s.OpenSquareBracket);){const Ne=$[j];++j;let tt;const Jt=Ne.type===s.OpenSquareBracket;if(Jt)tt=hs(),Q(s.CloseSquareBracket,"Expected closing square bracket");else if(tt=Gr(),tt.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");je=new v(je,tt,Jt)}return je}function _r(){let je=Xr();for(;Oe(s.MultiplicativeBinaryOperator);){const Ne=$[j++],tt=Xr();je=new q(Ne,je,tt)}return je}function Xr(){let je=Ls();for(;gt("is");){++j;const Ne=gt("not");Ne&&++j;const tt=Gr();if(!(tt instanceof T))throw new SyntaxError("Expected identifier for the test");je=new he(je,Ne,tt)}return je}function Ls(){let je=Ur();for(;Oe(s.Pipe);){++j;let Ne=Gr();if(!(Ne instanceof T))throw new SyntaxError("Expected identifier for the filter");Oe(s.OpenParen)&&(Ne=Wr(Ne)),je=new te(je,Ne)}return je}function Gr(){const je=$[j++];switch(je.type){case s.NumericLiteral:{const Ne=je.value;return Ne.includes(".")?new z(Number(Ne)):new D(Number(Ne))}case s.StringLiteral:{let Ne=je.value;for(;Oe(s.StringLiteral);)Ne+=$[j++].value;return new K(Ne)}case s.Identifier:return new T(je.value);case s.OpenParen:{const Ne=Qr();return Q(s.CloseParen,"Expected closing parenthesis, got ${tokens[current].type} instead."),Ne}case s.OpenSquareBracket:{const Ne=[];for(;!Oe(s.CloseSquareBracket);)Ne.push(Sr()),Oe(s.Comma)&&++j;return++j,new H(Ne)}case s.OpenCurlyBracket:{const Ne=new Map;for(;!Oe(s.CloseCurlyBracket);){const tt=Sr();Q(s.Colon,"Expected colon between key and value in object literal");const Jt=Sr();Ne.set(tt,Jt),Oe(s.Comma)&&++j}return++j,new re(Ne)}default:throw new SyntaxError(`Unexpected token: ${je.type}`)}}for(;j<$.length;)X.body.push(we());return X}function xe($,X,j=1){X===void 0&&(X=$,$=0);const Q=[];for(let se=$;se<X;se+=j)Q.push(se);return Q}function Be($,X,j,Q=1){const se=Math.sign(Q);se>=0?(X=(X??(X=0))<0?Math.max($.length+X,0):Math.min(X,$.length),j=(j??(j=$.length))<0?Math.max($.length+j,0):Math.min(j,$.length)):(X=(X??(X=$.length-1))<0?Math.max($.length+X,-1):Math.min(X,$.length-1),j=(j??(j=-1))<-1?Math.max($.length+j,-1):Math.min(j,$.length-1));const we=[];for(let Oe=X;se*Oe<se*j;Oe+=Q)we.push($[Oe]);return we}function Ke($){return $.replace(/\b\w/g,X=>X.toUpperCase())}function Ae($){return J(new Date,$)}function J($,X){const j=new Intl.DateTimeFormat(void 0,{month:"long"}),Q=new Intl.DateTimeFormat(void 0,{month:"short"}),se=we=>we<10?"0"+we:we.toString();return X.replace(/%[YmdbBHM%]/g,we=>{switch(we){case"%Y":return $.getFullYear().toString();case"%m":return se($.getMonth()+1);case"%d":return se($.getDate());case"%b":return Q.format($);case"%B":return j.format($);case"%H":return se($.getHours());case"%M":return se($.getMinutes());case"%%":return"%";default:return we}})}function le($){return $.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function G($,X,j,Q){if(Q===0)return $;let se=Q==null||Q<0?1/0:Q;const we=X.length===0?new RegExp("(?=)","gu"):new RegExp(le(X),"gu");return $.replaceAll(we,Oe=>se>0?(--se,j):Oe)}var ye=class extends Error{},Ie=class extends Error{},Pe=class{constructor($=void 0){Y(this,"type","RuntimeValue");Y(this,"value");Y(this,"builtins",new Map);this.value=$}__bool__(){return new Fe(!!this.value)}toString(){return String(this.value)}},be=class extends Pe{constructor(){super(...arguments);Y(this,"type","IntegerValue")}},$e=class extends Pe{constructor(){super(...arguments);Y(this,"type","FloatValue")}toString(){return this.value%1===0?this.value.toFixed(1):this.value.toString()}},Me=class extends Pe{constructor(){super(...arguments);Y(this,"type","StringValue");Y(this,"builtins",new Map([["upper",new He(()=>new Me(this.value.toUpperCase()))],["lower",new He(()=>new Me(this.value.toLowerCase()))],["strip",new He(()=>new Me(this.value.trim()))],["title",new He(()=>new Me(Ke(this.value)))],["capitalize",new He(()=>new Me(this.value.charAt(0).toUpperCase()+this.value.slice(1)))],["length",new be(this.value.length)],["rstrip",new He(()=>new Me(this.value.trimEnd()))],["lstrip",new He(()=>new Me(this.value.trimStart()))],["startswith",new He(X=>{if(X.length===0)throw new Error("startswith() requires at least one argument");const j=X[0];if(j instanceof Me)return new Fe(this.value.startsWith(j.value));if(j instanceof Te){for(const Q of j.value){if(!(Q instanceof Me))throw new Error("startswith() tuple elements must be strings");if(this.value.startsWith(Q.value))return new Fe(!0)}return new Fe(!1)}throw new Error("startswith() argument must be a string or tuple of strings")})],["endswith",new He(X=>{if(X.length===0)throw new Error("endswith() requires at least one argument");const j=X[0];if(j instanceof Me)return new Fe(this.value.endsWith(j.value));if(j instanceof Te){for(const Q of j.value){if(!(Q instanceof Me))throw new Error("endswith() tuple elements must be strings");if(this.value.endsWith(Q.value))return new Fe(!0)}return new Fe(!1)}throw new Error("endswith() argument must be a string or tuple of strings")})],["split",new He(X=>{const j=X[0]??new ot;if(!(j instanceof Me||j instanceof ot))throw new Error("sep argument must be a string or null");const Q=X[1]??new be(-1);if(!(Q instanceof be))throw new Error("maxsplit argument must be a number");let se=[];if(j instanceof ot){const we=this.value.trimStart();for(const{0:Oe,index:st}of we.matchAll(/\S+/g)){if(Q.value!==-1&&se.length>=Q.value&&st!==void 0){se.push(Oe+we.slice(st+Oe.length));break}se.push(Oe)}}else{if(j.value==="")throw new Error("empty separator");se=this.value.split(j.value),Q.value!==-1&&se.length>Q.value&&se.push(se.splice(Q.value).join(j.value))}return new Te(se.map(we=>new Me(we)))})],["replace",new He(X=>{if(X.length<2)throw new Error("replace() requires at least two arguments");const j=X[0],Q=X[1];if(!(j instanceof Me&&Q instanceof Me))throw new Error("replace() arguments must be strings");let se;if(X.length>2?X[2].type==="KeywordArgumentsValue"?se=X[2].value.get("count")??new ot:se=X[2]:se=new ot,!(se instanceof be||se instanceof ot))throw new Error("replace() count argument must be a number or null");return new Me(G(this.value,j.value,Q.value,se.value))})]]))}},Fe=class extends Pe{constructor(){super(...arguments);Y(this,"type","BooleanValue")}},Re=class extends Pe{constructor(){super(...arguments);Y(this,"type","ObjectValue");Y(this,"builtins",new Map([["get",new He(([X,j])=>{if(!(X instanceof Me))throw new Error(`Object key must be a string: got ${X.type}`);return this.value.get(X.value)??j??new ot})],["items",new He(()=>this.items())],["keys",new He(()=>this.keys())],["values",new He(()=>this.values())]]))}__bool__(){return new Fe(this.value.size>0)}items(){return new Te(Array.from(this.value.entries()).map(([X,j])=>new Te([new Me(X),j])))}keys(){return new Te(Array.from(this.value.keys()).map(X=>new Me(X)))}values(){return new Te(Array.from(this.value.values()))}},Xe=class extends Re{constructor(){super(...arguments);Y(this,"type","KeywordArgumentsValue")}},Te=class extends Pe{constructor(){super(...arguments);Y(this,"type","ArrayValue");Y(this,"builtins",new Map([["length",new be(this.value.length)]]))}__bool__(){return new Fe(this.value.length>0)}},et=class extends Te{constructor(){super(...arguments);Y(this,"type","TupleValue")}},He=class extends Pe{constructor(){super(...arguments);Y(this,"type","FunctionValue")}},ot=class extends Pe{constructor(){super(...arguments);Y(this,"type","NullValue")}},Ye=class extends Pe{constructor(){super(...arguments);Y(this,"type","UndefinedValue")}},De=class{constructor($){Y(this,"variables",new Map([["namespace",new He($=>{if($.length===0)return new Re(new Map);if($.length!==1||!($[0]instanceof Re))throw new Error("`namespace` expects either zero arguments or a single object argument");return $[0]})]]));Y(this,"tests",new Map([["boolean",$=>$.type==="BooleanValue"],["callable",$=>$ instanceof He],["odd",$=>{if(!($ instanceof be))throw new Error(`cannot odd on ${$.type}`);return $.value%2!==0}],["even",$=>{if(!($ instanceof be))throw new Error(`cannot even on ${$.type}`);return $.value%2===0}],["false",$=>$.type==="BooleanValue"&&!$.value],["true",$=>$.type==="BooleanValue"&&$.value],["none",$=>$.type==="NullValue"],["string",$=>$.type==="StringValue"],["number",$=>$ instanceof be||$ instanceof $e],["integer",$=>$ instanceof be],["iterable",$=>$.type==="ArrayValue"||$.type==="StringValue"],["mapping",$=>$.type==="ObjectValue"],["lower",$=>{const X=$.value;return $.type==="StringValue"&&X===X.toLowerCase()}],["upper",$=>{const X=$.value;return $.type==="StringValue"&&X===X.toUpperCase()}],["none",$=>$.type==="NullValue"],["defined",$=>$.type!=="UndefinedValue"],["undefined",$=>$.type==="UndefinedValue"],["equalto",($,X)=>$.value===X.value],["eq",($,X)=>$.value===X.value]]));this.parent=$}set($,X){return this.declareVariable($,At(X))}declareVariable($,X){if(this.variables.has($))throw new SyntaxError(`Variable already declared: ${$}`);return this.variables.set($,X),X}setVariable($,X){return this.variables.set($,X),X}resolve($){if(this.variables.has($))return this;if(this.parent)return this.parent.resolve($);throw new Error(`Unknown variable: ${$}`)}lookupVariable($){try{return this.resolve($).variables.get($)??new Ye}catch{return new Ye}}};function Ze($){$.set("false",!1),$.set("true",!0),$.set("none",null),$.set("raise_exception",X=>{throw new Error(X)}),$.set("range",xe),$.set("strftime_now",Ae),$.set("True",!0),$.set("False",!1),$.set("None",null)}var it=class{constructor($){Y(this,"global");this.global=$??new De}run($){return this.evaluate($,this.global)}evaluateBinaryExpression($,X){const j=this.evaluate($.left,X);switch($.operator.value){case"and":return j.__bool__().value?this.evaluate($.right,X):j;case"or":return j.__bool__().value?j:this.evaluate($.right,X)}const Q=this.evaluate($.right,X);switch($.operator.value){case"==":return new Fe(j.value==Q.value);case"!=":return new Fe(j.value!=Q.value)}if(j instanceof Ye||Q instanceof Ye){if(Q instanceof Ye&&["in","not in"].includes($.operator.value))return new Fe($.operator.value==="not in");throw new Error(`Cannot perform operation ${$.operator.value} on undefined values`)}else{if(j instanceof ot||Q instanceof ot)throw new Error("Cannot perform operation on null values");if($.operator.value==="~")return new Me(j.value.toString()+Q.value.toString());if((j instanceof be||j instanceof $e)&&(Q instanceof be||Q instanceof $e)){const se=j.value,we=Q.value;switch($.operator.value){case"+":case"-":case"*":{const Oe=$.operator.value==="+"?se+we:$.operator.value==="-"?se-we:se*we;return j instanceof $e||Q instanceof $e?new $e(Oe):new be(Oe)}case"/":return new $e(se/we);case"%":{const Oe=se%we;return j instanceof $e||Q instanceof $e?new $e(Oe):new be(Oe)}case"<":return new Fe(se<we);case">":return new Fe(se>we);case">=":return new Fe(se>=we);case"<=":return new Fe(se<=we)}}else if(j instanceof Te&&Q instanceof Te)switch($.operator.value){case"+":return new Te(j.value.concat(Q.value))}else if(Q instanceof Te){const se=Q.value.find(we=>we.value===j.value)!==void 0;switch($.operator.value){case"in":return new Fe(se);case"not in":return new Fe(!se)}}}if(j instanceof Me||Q instanceof Me)switch($.operator.value){case"+":return new Me(j.value.toString()+Q.value.toString())}if(j instanceof Me&&Q instanceof Me)switch($.operator.value){case"in":return new Fe(Q.value.includes(j.value));case"not in":return new Fe(!Q.value.includes(j.value))}if(j instanceof Me&&Q instanceof Re)switch($.operator.value){case"in":return new Fe(Q.value.has(j.value));case"not in":return new Fe(!Q.value.has(j.value))}throw new SyntaxError(`Unknown operator "${$.operator.value}" between ${j.type} and ${Q.type}`)}evaluateArguments($,X){const j=[],Q=new Map;for(const se of $)if(se.type==="SpreadExpression"){const we=se,Oe=this.evaluate(we.argument,X);if(!(Oe instanceof Te))throw new Error(`Cannot unpack non-iterable type: ${Oe.type}`);for(const st of Oe.value)j.push(st)}else if(se.type==="KeywordArgumentExpression"){const we=se;Q.set(we.key.value,this.evaluate(we.value,X))}else{if(Q.size>0)throw new Error("Positional arguments must come before keyword arguments");j.push(this.evaluate(se,X))}return[j,Q]}applyFilter($,X,j){if(X.type==="Identifier"){const Q=X;if(Q.value==="tojson")return new Me($t($));if($ instanceof Te)switch(Q.value){case"list":return $;case"first":return $.value[0];case"last":return $.value[$.value.length-1];case"length":return new be($.value.length);case"reverse":return new Te($.value.reverse());case"sort":return new Te($.value.sort((se,we)=>{if(se.type!==we.type)throw new Error(`Cannot compare different types: ${se.type} and ${we.type}`);switch(se.type){case"IntegerValue":case"FloatValue":return se.value-we.value;case"StringValue":return se.value.localeCompare(we.value);default:throw new Error(`Cannot compare type: ${se.type}`)}}));case"join":return new Me($.value.map(se=>se.value).join(""));case"string":return new Me($t($));case"unique":{const se=new Set,we=[];for(const Oe of $.value)se.has(Oe.value)||(se.add(Oe.value),we.push(Oe));return new Te(we)}default:throw new Error(`Unknown ArrayValue filter: ${Q.value}`)}else if($ instanceof Me)switch(Q.value){case"length":case"upper":case"lower":case"title":case"capitalize":{const se=$.builtins.get(Q.value);if(se instanceof He)return se.value([],j);if(se instanceof be)return se;throw new Error(`Unknown StringValue filter: ${Q.value}`)}case"trim":return new Me($.value.trim());case"indent":return new Me($.value.split(`
`).map((se,we)=>we===0||se.length===0?se:"    "+se).join(`
`));case"join":case"string":return $;case"int":{const se=parseInt($.value,10);return new be(isNaN(se)?0:se)}case"float":{const se=parseFloat($.value);return new $e(isNaN(se)?0:se)}default:throw new Error(`Unknown StringValue filter: ${Q.value}`)}else if($ instanceof be||$ instanceof $e)switch(Q.value){case"abs":return $ instanceof be?new be(Math.abs($.value)):new $e(Math.abs($.value));case"int":return new be(Math.floor($.value));case"float":return new $e($.value);default:throw new Error(`Unknown NumericValue filter: ${Q.value}`)}else if($ instanceof Re)switch(Q.value){case"items":return new Te(Array.from($.value.entries()).map(([se,we])=>new Te([new Me(se),we])));case"length":return new be($.value.size);default:throw new Error(`Unknown ObjectValue filter: ${Q.value}`)}else if($ instanceof Fe)switch(Q.value){case"bool":return new Fe($.value);case"int":return new be($.value?1:0);case"float":return new $e($.value?1:0);case"string":return new Me($.value?"true":"false");default:throw new Error(`Unknown BooleanValue filter: ${Q.value}`)}throw new Error(`Cannot apply filter "${Q.value}" to type: ${$.type}`)}else if(X.type==="CallExpression"){const Q=X;if(Q.callee.type!=="Identifier")throw new Error(`Unknown filter: ${Q.callee.type}`);const se=Q.callee.value;if(se==="tojson"){const[,we]=this.evaluateArguments(Q.args,j),Oe=we.get("indent")??new ot;if(!(Oe instanceof be||Oe instanceof ot))throw new Error("If set, indent must be a number");return new Me($t($,Oe.value))}else if(se==="join"){let we;if($ instanceof Me)we=Array.from($.value);else if($ instanceof Te)we=$.value.map(ht=>ht.value);else throw new Error(`Cannot apply filter "${se}" to type: ${$.type}`);const[Oe,st]=this.evaluateArguments(Q.args,j),gt=Oe.at(0)??st.get("separator")??new Me("");if(!(gt instanceof Me))throw new Error("separator must be a string");return new Me(we.join(gt.value))}else if(se==="int"||se==="float"){const[we,Oe]=this.evaluateArguments(Q.args,j),st=we.at(0)??Oe.get("default")??(se==="int"?new be(0):new $e(0));if($ instanceof Me){const gt=se==="int"?parseInt($.value,10):parseFloat($.value);return isNaN(gt)?st:se==="int"?new be(gt):new $e(gt)}else{if($ instanceof be||$ instanceof $e)return $;if($ instanceof Fe)return se==="int"?new be($.value?1:0):new $e($.value?1:0);throw new Error(`Cannot apply filter "${se}" to type: ${$.type}`)}}else if(se==="default"){const[we,Oe]=this.evaluateArguments(Q.args,j),st=we[0]??new Me(""),gt=we[1]??Oe.get("boolean")??new Fe(!1);if(!(gt instanceof Fe))throw new Error("`default` filter flag must be a boolean");return $ instanceof Ye||gt.value&&!$.__bool__().value?st:$}if($ instanceof Te){switch(se){case"selectattr":case"rejectattr":{const we=se==="selectattr";if($.value.some(nt=>!(nt instanceof Re)))throw new Error(`\`${se}\` can only be applied to array of objects`);if(Q.args.some(nt=>nt.type!=="StringLiteral"))throw new Error(`arguments of \`${se}\` must be strings`);const[Oe,st,gt]=Q.args.map(nt=>this.evaluate(nt,j));let ht;if(st){const nt=j.tests.get(st.value);if(!nt)throw new Error(`Unknown test: ${st.value}`);ht=nt}else ht=(...nt)=>nt[0].__bool__().value;const xt=$.value.filter(nt=>{const Bt=nt.value.get(Oe.value),Vt=Bt?ht(Bt,gt):!1;return we?Vt:!Vt});return new Te(xt)}case"map":{const[,we]=this.evaluateArguments(Q.args,j);if(we.has("attribute")){const Oe=we.get("attribute");if(!(Oe instanceof Me))throw new Error("attribute must be a string");const st=we.get("default"),gt=$.value.map(ht=>{if(!(ht instanceof Re))throw new Error("items in map must be an object");return ht.value.get(Oe.value)??st??new Ye});return new Te(gt)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${se}`)}else if($ instanceof Me){switch(se){case"indent":{const[we,Oe]=this.evaluateArguments(Q.args,j),st=we.at(0)??Oe.get("width")??new be(4);if(!(st instanceof be))throw new Error("width must be a number");const gt=we.at(1)??Oe.get("first")??new Fe(!1),ht=we.at(2)??Oe.get("blank")??new Fe(!1),xt=$.value.split(`
`),nt=" ".repeat(st.value),Bt=xt.map((Vt,Nr)=>!gt.value&&Nr===0||!ht.value&&Vt.length===0?Vt:nt+Vt);return new Me(Bt.join(`
`))}case"replace":{const we=$.builtins.get("replace");if(!(we instanceof He))throw new Error("replace filter not available");const[Oe,st]=this.evaluateArguments(Q.args,j);return we.value([...Oe,new Xe(st)],j)}}throw new Error(`Unknown StringValue filter: ${se}`)}else throw new Error(`Cannot apply filter "${se}" to type: ${$.type}`)}throw new Error(`Unknown filter: ${X.type}`)}evaluateFilterExpression($,X){const j=this.evaluate($.operand,X);return this.applyFilter(j,$.filter,X)}evaluateTestExpression($,X){const j=this.evaluate($.operand,X),Q=X.tests.get($.test.value);if(!Q)throw new Error(`Unknown test: ${$.test.value}`);const se=Q(j);return new Fe($.negate?!se:se)}evaluateSelectExpression($,X){return this.evaluate($.test,X).__bool__().value?this.evaluate($.lhs,X):new Ye}evaluateUnaryExpression($,X){const j=this.evaluate($.argument,X);switch($.operator.value){case"not":return new Fe(!j.value);default:throw new SyntaxError(`Unknown operator: ${$.operator.value}`)}}evaluateTernaryExpression($,X){return this.evaluate($.condition,X).__bool__().value?this.evaluate($.trueExpr,X):this.evaluate($.falseExpr,X)}evalProgram($,X){return this.evaluateBlock($.body,X)}evaluateBlock($,X){let j="";for(const Q of $){const se=this.evaluate(Q,X);se.type!=="NullValue"&&se.type!=="UndefinedValue"&&(j+=se.toString())}return new Me(j)}evaluateIdentifier($,X){return X.lookupVariable($.value)}evaluateCallExpression($,X){const[j,Q]=this.evaluateArguments($.args,X);Q.size>0&&j.push(new Xe(Q));const se=this.evaluate($.callee,X);if(se.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${se.type}`);return se.value(j,X)}evaluateSliceExpression($,X,j){if(!($ instanceof Te||$ instanceof Me))throw new Error("Slice object must be an array or string");const Q=this.evaluate(X.start,j),se=this.evaluate(X.stop,j),we=this.evaluate(X.step,j);if(!(Q instanceof be||Q instanceof Ye))throw new Error("Slice start must be numeric or undefined");if(!(se instanceof be||se instanceof Ye))throw new Error("Slice stop must be numeric or undefined");if(!(we instanceof be||we instanceof Ye))throw new Error("Slice step must be numeric or undefined");return $ instanceof Te?new Te(Be($.value,Q.value,se.value,we.value)):new Me(Be(Array.from($.value),Q.value,se.value,we.value).join(""))}evaluateMemberExpression($,X){const j=this.evaluate($.object,X);let Q;if($.computed){if($.property.type==="SliceExpression")return this.evaluateSliceExpression(j,$.property,X);Q=this.evaluate($.property,X)}else Q=new Me($.property.value);let se;if(j instanceof Re){if(!(Q instanceof Me))throw new Error(`Cannot access property with non-string: got ${Q.type}`);se=j.value.get(Q.value)??j.builtins.get(Q.value)}else if(j instanceof Te||j instanceof Me)if(Q instanceof be)se=j.value.at(Q.value),j instanceof Me&&(se=new Me(j.value.at(Q.value)));else if(Q instanceof Me)se=j.builtins.get(Q.value);else throw new Error(`Cannot access property with non-string/non-number: got ${Q.type}`);else{if(!(Q instanceof Me))throw new Error(`Cannot access property with non-string: got ${Q.type}`);se=j.builtins.get(Q.value)}return se instanceof Pe?se:new Ye}evaluateSet($,X){const j=$.value?this.evaluate($.value,X):this.evaluateBlock($.body,X);if($.assignee.type==="Identifier"){const Q=$.assignee.value;X.setVariable(Q,j)}else if($.assignee.type==="TupleLiteral"){const Q=$.assignee;if(!(j instanceof Te))throw new Error(`Cannot unpack non-iterable type in set: ${j.type}`);const se=j.value;if(se.length!==Q.value.length)throw new Error(`Too ${Q.value.length>se.length?"few":"many"} items to unpack in set`);for(let we=0;we<Q.value.length;++we){const Oe=Q.value[we];if(Oe.type!=="Identifier")throw new Error(`Cannot unpack to non-identifier in set: ${Oe.type}`);X.setVariable(Oe.value,se[we])}}else if($.assignee.type==="MemberExpression"){const Q=$.assignee,se=this.evaluate(Q.object,X);if(!(se instanceof Re))throw new Error("Cannot assign to member of non-object");if(Q.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");se.value.set(Q.property.value,j)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify($.assignee)}`);return new ot}evaluateIf($,X){const j=this.evaluate($.test,X);return this.evaluateBlock(j.__bool__().value?$.body:$.alternate,X)}evaluateFor($,X){const j=new De(X);let Q,se;if($.iterable.type==="SelectExpression"){const ht=$.iterable;se=this.evaluate(ht.lhs,j),Q=ht.test}else se=this.evaluate($.iterable,j);if(!(se instanceof Te||se instanceof Re))throw new Error(`Expected iterable or object type in for loop: got ${se.type}`);se instanceof Re&&(se=se.keys());const we=[],Oe=[];for(let ht=0;ht<se.value.length;++ht){const xt=new De(j),nt=se.value[ht];let Bt;if($.loopvar.type==="Identifier")Bt=Vt=>Vt.setVariable($.loopvar.value,nt);else if($.loopvar.type==="TupleLiteral"){const Vt=$.loopvar;if(nt.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${nt.type}`);const Nr=nt;if(Vt.value.length!==Nr.value.length)throw new Error(`Too ${Vt.value.length>Nr.value.length?"few":"many"} items to unpack`);Bt=Qr=>{for(let sr=0;sr<Vt.value.length;++sr){if(Vt.value[sr].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${Vt.value[sr].type}`);Qr.setVariable(Vt.value[sr].value,Nr.value[sr])}}}else throw new Error(`Invalid loop variable(s): ${$.loopvar.type}`);Q&&(Bt(xt),!this.evaluate(Q,xt).__bool__().value)||(we.push(nt),Oe.push(Bt))}let st="",gt=!0;for(let ht=0;ht<we.length;++ht){const xt=new Map([["index",new be(ht+1)],["index0",new be(ht)],["revindex",new be(we.length-ht)],["revindex0",new be(we.length-ht-1)],["first",new Fe(ht===0)],["last",new Fe(ht===we.length-1)],["length",new be(we.length)],["previtem",ht>0?we[ht-1]:new Ye],["nextitem",ht<we.length-1?we[ht+1]:new Ye]]);j.setVariable("loop",new Re(xt)),Oe[ht](j);try{const nt=this.evaluateBlock($.body,j);st+=nt.value}catch(nt){if(nt instanceof Ie)continue;if(nt instanceof ye)break;throw nt}gt=!1}if(gt){const ht=this.evaluateBlock($.defaultBlock,j);st+=ht.value}return new Me(st)}evaluateMacro($,X){return X.setVariable($.name.value,new He((j,Q)=>{var Oe;const se=new De(Q);j=j.slice();let we;((Oe=j.at(-1))==null?void 0:Oe.type)==="KeywordArgumentsValue"&&(we=j.pop());for(let st=0;st<$.args.length;++st){const gt=$.args[st],ht=j[st];if(gt.type==="Identifier"){const xt=gt;if(!ht)throw new Error(`Missing positional argument: ${xt.value}`);se.setVariable(xt.value,ht)}else if(gt.type==="KeywordArgumentExpression"){const xt=gt,nt=ht??(we==null?void 0:we.value.get(xt.key.value))??this.evaluate(xt.value,se);se.setVariable(xt.key.value,nt)}else throw new Error(`Unknown argument type: ${gt.type}`)}return this.evaluateBlock($.body,se)})),new ot}evaluateCallStatement($,X){const j=new He((st,gt)=>{const ht=new De(gt);if($.callerArgs)for(let xt=0;xt<$.callerArgs.length;++xt){const nt=$.callerArgs[xt];if(nt.type!=="Identifier")throw new Error(`Caller parameter must be an identifier, got ${nt.type}`);ht.setVariable(nt.value,st[xt]??new Ye)}return this.evaluateBlock($.body,ht)}),[Q,se]=this.evaluateArguments($.call.args,X);Q.push(new Xe(se));const we=this.evaluate($.call.callee,X);if(we.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${we.type}`);const Oe=new De(X);return Oe.setVariable("caller",j),we.value(Q,Oe)}evaluateFilterStatement($,X){const j=this.evaluateBlock($.body,X);return this.applyFilter(j,$.filter,X)}evaluate($,X){if(!$)return new Ye;switch($.type){case"Program":return this.evalProgram($,X);case"Set":return this.evaluateSet($,X);case"If":return this.evaluateIf($,X);case"For":return this.evaluateFor($,X);case"Macro":return this.evaluateMacro($,X);case"CallStatement":return this.evaluateCallStatement($,X);case"Break":throw new ye;case"Continue":throw new Ie;case"IntegerLiteral":return new be($.value);case"FloatLiteral":return new $e($.value);case"StringLiteral":return new Me($.value);case"ArrayLiteral":return new Te($.value.map(j=>this.evaluate(j,X)));case"TupleLiteral":return new et($.value.map(j=>this.evaluate(j,X)));case"ObjectLiteral":{const j=new Map;for(const[Q,se]of $.value){const we=this.evaluate(Q,X);if(!(we instanceof Me))throw new Error(`Object keys must be strings: got ${we.type}`);j.set(we.value,this.evaluate(se,X))}return new Re(j)}case"Identifier":return this.evaluateIdentifier($,X);case"CallExpression":return this.evaluateCallExpression($,X);case"MemberExpression":return this.evaluateMemberExpression($,X);case"UnaryExpression":return this.evaluateUnaryExpression($,X);case"BinaryExpression":return this.evaluateBinaryExpression($,X);case"FilterExpression":return this.evaluateFilterExpression($,X);case"FilterStatement":return this.evaluateFilterStatement($,X);case"TestExpression":return this.evaluateTestExpression($,X);case"SelectExpression":return this.evaluateSelectExpression($,X);case"Ternary":return this.evaluateTernaryExpression($,X);case"Comment":return new ot;default:throw new SyntaxError(`Unknown node type: ${$.type}`)}}};function At($){switch(typeof $){case"number":return Number.isInteger($)?new be($):new $e($);case"string":return new Me($);case"boolean":return new Fe($);case"undefined":return new Ye;case"object":return $===null?new ot:Array.isArray($)?new Te($.map(At)):new Re(new Map(Object.entries($).map(([X,j])=>[X,At(j)])));case"function":return new He((X,j)=>{const Q=$(...X.map(se=>se.value))??null;return At(Q)});default:throw new Error(`Cannot convert to runtime value: ${$}`)}}function $t($,X,j){const Q=j??0;switch($.type){case"NullValue":case"UndefinedValue":return"null";case"IntegerValue":case"FloatValue":case"StringValue":case"BooleanValue":return JSON.stringify($.value);case"ArrayValue":case"ObjectValue":{const se=X?" ".repeat(X):"",we=`
`+se.repeat(Q),Oe=we+se;if($.type==="ArrayValue"){const st=$.value.map(gt=>$t(gt,X,Q+1));return X?`[${Oe}${st.join(`,${Oe}`)}${we}]`:`[${st.join(", ")}]`}else{const st=Array.from($.value.entries()).map(([gt,ht])=>{const xt=`"${gt}": ${$t(ht,X,Q+1)}`;return X?`${Oe}${xt}`:xt});return X?`{${st.join(",")}${we}}`:`{${st.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${$.type}`)}}var Mt=`
`,br="{%- ",Pr=" -%}";function jr($){switch($.operator.type){case"MultiplicativeBinaryOperator":return 4;case"AdditiveBinaryOperator":return 3;case"ComparisonBinaryOperator":return 2;case"Identifier":return $.operator.value==="and"?1:$.operator.value==="in"||$.operator.value==="not in"?2:0}return 0}function as($,X="	"){const j=typeof X=="number"?" ".repeat(X):X;return Cr($.body,0,j).replace(/\n$/,"")}function Qt(...$){return br+$.join(" ")+Pr}function Cr($,X,j){return $.map(Q=>Ws(Q,X,j)).join(Mt)}function Ws($,X,j){const Q=j.repeat(X);switch($.type){case"Program":return Cr($.body,X,j);case"If":return Gs($,X,j);case"For":return Ks($,X,j);case"Set":return Hs($,X,j);case"Macro":return mt($,X,j);case"Break":return Q+Qt("break");case"Continue":return Q+Qt("continue");case"CallStatement":return ks($,X,j);case"FilterStatement":return Is($,X,j);case"Comment":return Q+"{# "+$.value+" #}";default:return Q+"{{- "+St($)+" -}}"}}function Gs($,X,j){const Q=j.repeat(X),se=[];let we=$;for(;we&&(se.push({test:we.test,body:we.body}),we.alternate.length===1&&we.alternate[0].type==="If");)we=we.alternate[0];let Oe=Q+Qt("if",St(se[0].test))+Mt+Cr(se[0].body,X+1,j);for(let st=1;st<se.length;++st)Oe+=Mt+Q+Qt("elif",St(se[st].test))+Mt+Cr(se[st].body,X+1,j);return we&&we.alternate.length>0&&(Oe+=Mt+Q+Qt("else")+Mt+Cr(we.alternate,X+1,j)),Oe+=Mt+Q+Qt("endif"),Oe}function Ks($,X,j){const Q=j.repeat(X);let se="";if($.iterable.type==="SelectExpression"){const Oe=$.iterable;se=`${St(Oe.lhs)} if ${St(Oe.test)}`}else se=St($.iterable);let we=Q+Qt("for",St($.loopvar),"in",se)+Mt+Cr($.body,X+1,j);return $.defaultBlock.length>0&&(we+=Mt+Q+Qt("else")+Mt+Cr($.defaultBlock,X+1,j)),we+=Mt+Q+Qt("endfor"),we}function Hs($,X,j){const Q=j.repeat(X),se=St($.assignee),we=$.value?St($.value):"",Oe=Q+Qt("set",`${se}${$.value?" = "+we:""}`);return $.body.length===0?Oe:Oe+Mt+Cr($.body,X+1,j)+Mt+Q+Qt("endset")}function mt($,X,j){const Q=j.repeat(X),se=$.args.map(St).join(", ");return Q+Qt("macro",`${$.name.value}(${se})`)+Mt+Cr($.body,X+1,j)+Mt+Q+Qt("endmacro")}function ks($,X,j){const Q=j.repeat(X),se=$.callerArgs&&$.callerArgs.length>0?`(${$.callerArgs.map(St).join(", ")})`:"",we=St($.call);let Oe=Q+Qt(`call${se}`,we)+Mt;return Oe+=Cr($.body,X+1,j)+Mt,Oe+=Q+Qt("endcall"),Oe}function Is($,X,j){const Q=j.repeat(X),se=$.filter.type==="Identifier"?$.filter.value:St($.filter);let we=Q+Qt("filter",se)+Mt;return we+=Cr($.body,X+1,j)+Mt,we+=Q+Qt("endfilter"),we}function St($,X=-1){switch($.type){case"SpreadExpression":return`*${St($.argument)}`;case"Identifier":return $.value;case"IntegerLiteral":return`${$.value}`;case"FloatLiteral":return`${$.value}`;case"StringLiteral":return JSON.stringify($.value);case"BinaryExpression":{const j=$,Q=jr(j),se=St(j.left,Q),we=St(j.right,Q+1),Oe=`${se} ${j.operator.value} ${we}`;return Q<X?`(${Oe})`:Oe}case"UnaryExpression":{const j=$;return j.operator.value+(j.operator.value==="not"?" ":"")+St(j.argument,1/0)}case"CallExpression":{const j=$,Q=j.args.map(St).join(", ");return`${St(j.callee)}(${Q})`}case"MemberExpression":{const j=$;let Q=St(j.object);["Identifier","MemberExpression","CallExpression","StringLiteral","IntegerLiteral","FloatLiteral","ArrayLiteral","TupleLiteral","ObjectLiteral"].includes(j.object.type)||(Q=`(${Q})`);let se=St(j.property);return!j.computed&&j.property.type!=="Identifier"&&(se=`(${se})`),j.computed?`${Q}[${se}]`:`${Q}.${se}`}case"FilterExpression":{const j=$,Q=St(j.operand,1/0);return j.filter.type==="CallExpression"?`${Q} | ${St(j.filter)}`:`${Q} | ${j.filter.value}`}case"SelectExpression":{const j=$;return`${St(j.lhs)} if ${St(j.test)}`}case"TestExpression":{const j=$;return`${St(j.operand)} is${j.negate?" not":""} ${j.test.value}`}case"ArrayLiteral":case"TupleLiteral":{const j=$.value.map(St),Q=$.type==="ArrayLiteral"?"[]":"()";return`${Q[0]}${j.join(", ")}${Q[1]}`}case"ObjectLiteral":return`{${Array.from($.value.entries()).map(([Q,se])=>`${St(Q)}: ${St(se)}`).join(", ")}}`;case"SliceExpression":{const j=$,Q=j.start?St(j.start):"",se=j.stop?St(j.stop):"",we=j.step?`:${St(j.step)}`:"";return`${Q}:${se}${we}`}case"KeywordArgumentExpression":{const j=$;return`${j.key.value}=${St(j.value)}`}case"Ternary":{const j=$,Q=`${St(j.trueExpr)} if ${St(j.condition,0)} else ${St(j.falseExpr)}`;return X>-1?`(${Q})`:Q}default:throw new Error(`Unknown expression type: ${$.type}`)}}var Xt=class{constructor($){Y(this,"parsed");const X=m($,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=ae(X)}render($){const X=new De;if(Ze(X),$)for(const[se,we]of Object.entries($))X.set(se,we);return new it(X).run(this.parsed).value}format($){return as(this.parsed,($==null?void 0:$.indent)||"	")}}},"./src/backends/onnx.js":(e,r,t)=>{var s;t.r(r),t.d(r,{Tensor:()=>a.Tensor,createInferenceSession:()=>I,deviceToExecutionProviders:()=>f,isONNXProxy:()=>k,isONNXTensor:()=>w});var o=t("./src/env.js"),n=t("?2ce3"),i=t("onnxruntime-web"),a=t("onnxruntime-common");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),c=[];let m,d;const u=Symbol.for("onnxruntime");if(u in globalThis)d=globalThis[u];else if(o.apis.IS_NODE_ENV){switch(d=n??(s||(s=t.t(n,2))),process.platform){case"win32":c.push("dml");break;case"linux":process.arch==="x64"&&c.push("cuda");break}c.push("cpu"),m=["cpu"]}else d=i,o.apis.IS_WEBNN_AVAILABLE&&c.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),o.apis.IS_WEBGPU_AVAILABLE&&c.push("webgpu"),c.push("wasm"),m=["wasm"];const g=d.InferenceSession;function f(x=null){if(!x)return m;switch(x){case"auto":return c;case"gpu":return c.filter(v=>["webgpu","cuda","dml","webnn-gpu"].includes(v))}if(c.includes(x))return[l[x]??x];throw new Error(`Unsupported device: "${x}". Should be one of: ${c.join(", ")}.`)}let y=null;async function I(x,v,E){y&&await y;const T=g.create(x,v);y??(y=T);const C=await T;return C.config=E,C}function w(x){return x instanceof d.Tensor}const b=d==null?void 0:d.env;b!=null&&b.wasm&&(!(typeof ServiceWorkerGlobalScope<"u"&&self instanceof ServiceWorkerGlobalScope)&&!b.wasm.wasmPaths&&(b.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${o.env.version}/dist/`),b.wasm.proxy=!1),b!=null&&b.webgpu&&(b.webgpu.powerPreference="high-performance");function k(){var x;return(x=b==null?void 0:b.wasm)==null?void 0:x.proxy}o.env.backends.onnx=b},"./src/base/feature_extraction_utils.js":(e,r,t)=>{t.r(r),t.d(r,{FeatureExtractor:()=>i,validate_audio_inputs:()=>a});var s=t("./src/utils/constants.js"),o=t("./src/utils/generic.js"),n=t("./src/utils/hub.js");class i extends o.Callable{constructor(c){super(),this.config=c}static async from_pretrained(c,m={}){const d=await(0,n.getModelJSON)(c,s.FEATURE_EXTRACTOR_NAME,!0,m);return new this(d)}}function a(l,c){var m;if(!(l instanceof Float32Array||l instanceof Float64Array))throw new Error(`${c} expects input to be a Float32Array or a Float64Array, but got ${((m=l==null?void 0:l.constructor)==null?void 0:m.name)??typeof l} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(e,r,t)=>{t.r(r),t.d(r,{ImageProcessor:()=>x,center_to_corners_format:()=>d,post_process_instance_segmentation:()=>k,post_process_object_detection:()=>u,post_process_panoptic_segmentation:()=>b,post_process_semantic_segmentation:()=>g});var s=t("./src/utils/generic.js"),o=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");t("./src/utils/image.js");var i=t("./src/utils/core.js"),a=t("./src/utils/hub.js"),l=t("./src/utils/constants.js");function c(v,E,T=0,C=null){const D=v/E;let z=(0,n.bankers_round)(D)*E;return C!==null&&z>C&&(z=Math.floor(D)*E),z<T&&(z=Math.ceil(D)*E),z}function m([v,E],T){return[Math.max(Math.floor(v/T),1)*T,Math.max(Math.floor(E/T),1)*T]}function d([v,E,T,C]){return[v-T/2,E-C/2,v+T/2,E+C/2]}function u(v,E=.5,T=null,C=!1){const D=v.logits,z=v.pred_boxes,[K,H,R]=D.dims;if(T!==null&&T.length!==K)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let re=[];for(let q=0;q<K;++q){let te=T!==null?T[q]:null,ee={boxes:[],classes:[],scores:[]},ie=D[q],he=z[q];for(let de=0;de<H;++de){let N=ie[de],O=[],W;if(C){W=N.sigmoid().data;for(let ne=0;ne<W.length;++ne)W[ne]>E&&O.push(ne)}else{let ne=(0,n.max)(N.data)[1];if(ne===R-1||(W=(0,n.softmax)(N.data),W[ne]<E))continue;O.push(ne)}for(const ne of O){let fe=he[de].data;fe=d(fe),te!==null&&(fe=fe.map((ae,xe)=>ae*te[(xe+1)%2])),ee.boxes.push(fe),ee.classes.push(ne),ee.scores.push(W[ne])}}re.push(ee)}return re}function g(v,E=null){const T=v.logits,C=T.dims[0];if(E!==null&&E.length!==C)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const D=[];for(let z=0;z<C;++z){const K=E!==null?E[z]:null;let H=T[z];K!==null&&(H=(0,o.interpolate)(H,K,"bilinear",!1));const[R,re]=K??H.dims.slice(-2),q=new o.Tensor("int32",new Int32Array(R*re),[R,re]),te=H[0].data,ee=q.data;for(let de=1;de<H.dims[0];++de){const N=H[de].data;for(let O=0;O<N.length;++O)N[O]>te[O]&&(te[O]=N[O],ee[O]=de)}const ie=new Array(H.dims[0]);for(let de=0;de<ee.length;++de){const N=ee[de];ie[N]=N}const he=ie.filter(de=>de!==void 0);D.push({segmentation:q,labels:he})}return D}function f(v,E,T,C){const D=[],z=[],K=[];for(let H=0;H<v.dims[0];++H){const R=v[H],re=E[H],q=(0,n.max)(R.data)[1];if(q===C)continue;const ee=(0,n.softmax)(R.data)[q];ee>T&&(D.push(re),z.push(ee),K.push(q))}return[D,z,K]}function y(v,E,T,C=.5,D=.8){const z=[];let K=0,H=0;const R=E[T].data;for(let q=0;q<v.length;++q)v[q]===T&&(z.push(q),++K),R[q]>=C&&++H;let re=K>0&&H>0;return re&&(re=K/H>D),[re,z]}function I(v,E,T,C,D,z=null,K=null){const[H,R]=K??v[0].dims,re=new o.Tensor("int32",new Int32Array(H*R),[H,R]),q=[];if(K!==null)for(let de=0;de<v.length;++de)v[de]=(0,o.interpolate)(v[de],K,"bilinear",!1);const te=new Int32Array(v[0].data.length),ee=new Float32Array(v[0].data.length);for(let de=0;de<v.length;++de){let N=E[de];const O=v[de].data;for(let W=0;W<O.length;++W)O[W]*=N,O[W]>ee[W]&&(te[W]=de,ee[W]=O[W])}let ie=0;const he=re.data;for(let de=0;de<T.length;++de){const N=T[de],[O,W]=y(te,v,de,C,D);if(O){++ie;for(const ne of W)he[ne]=ie;q.push({id:ie,label_id:N,score:E[de]})}}return[re,q]}function w(v,E,T=28,C=56*56,D=14*14*4*1280){if(v<T||E<T)throw new Error(`height:${v} or width:${E} must be larger than factor:${T}`);if(Math.max(v,E)/Math.min(v,E)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(v,E)/Math.min(v,E)}`);let z=Math.round(v/T)*T,K=Math.round(E/T)*T;if(z*K>D){const H=Math.sqrt(v*E/D);z=Math.floor(v/H/T)*T,K=Math.floor(E/H/T)*T}else if(z*K<C){const H=Math.sqrt(C/(v*E));z=Math.ceil(v*H/T)*T,K=Math.ceil(E*H/T)*T}return[z,K]}function b(v,E=.5,T=.5,C=.8,D=null,z=null){D===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),D=new Set);const K=v.class_queries_logits??v.logits,R=(v.masks_queries_logits??v.pred_masks).sigmoid();let[re,q,te]=K.dims;if(te-=1,z!==null&&z.length!==re)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let ee=[];for(let ie=0;ie<re;++ie){let he=z!==null?z[ie]:null,de=K[ie],N=R[ie],[O,W,ne]=f(de,N,E,te);if(ne.length===0){let[xe,Be]=he??N.dims.slice(-2),Ke=new o.Tensor("int32",new Int32Array(xe*Be).fill(-1),[xe,Be]);ee.push({segmentation:Ke,segments_info:[]});continue}let[fe,ae]=I(O,W,ne,T,C,D,he);ee.push({segmentation:fe,segments_info:ae})}return ee}function k(v,E=.5,T=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class x extends s.Callable{constructor(E){super(),this.image_mean=E.image_mean??E.mean,this.image_std=E.image_std??E.std,this.resample=E.resample??2,this.do_rescale=E.do_rescale??!0,this.rescale_factor=E.rescale_factor??1/255,this.do_normalize=E.do_normalize,this.do_thumbnail=E.do_thumbnail,this.size=E.size??E.image_size,this.do_resize=E.do_resize??this.size!==void 0,this.size_divisibility=E.size_divisibility??E.size_divisor,this.do_center_crop=E.do_center_crop,this.crop_size=E.crop_size,this.do_convert_rgb=E.do_convert_rgb??!0,this.do_crop_margin=E.do_crop_margin,this.pad_size=E.pad_size,this.do_pad=E.do_pad,this.min_pixels=E.min_pixels,this.max_pixels=E.max_pixels,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=E.do_flip_channel_order??!1,this.config=E}async thumbnail(E,T,C=2){const D=E.height,z=E.width,K=T.height,H=T.width;let R=Math.min(D,K),re=Math.min(z,H);return R===D&&re===z?E:(D>z?re=Math.floor(z*R/D):z>D&&(R=Math.floor(D*re/z)),await E.resize(re,R,{resample:C}))}async crop_margin(E,T=200){const C=E.clone().grayscale(),D=(0,n.min)(C.data)[0],K=(0,n.max)(C.data)[0]-D;if(K===0)return E;const H=T/255;let R=C.width,re=C.height,q=0,te=0;const ee=C.data;for(let ie=0;ie<C.height;++ie){const he=ie*C.width;for(let de=0;de<C.width;++de)(ee[he+de]-D)/K<H&&(R=Math.min(R,de),re=Math.min(re,ie),q=Math.max(q,de),te=Math.max(te,ie))}return E=await E.crop([R,re,q,te]),E}pad_image(E,T,C,{mode:D="constant",center:z=!1,constant_values:K=0}={}){const[H,R,re]=T;let q,te;if(typeof C=="number"?(q=C,te=C):C==="square"?q=te=Math.max(H,R):(q=C.width,te=C.height),q!==R||te!==H){const ee=new Float32Array(q*te*re);if(Array.isArray(K))for(let de=0;de<ee.length;++de)ee[de]=K[de%re];else K!==0&&ee.fill(K);const[ie,he]=z?[Math.floor((q-R)/2),Math.floor((te-H)/2)]:[0,0];for(let de=0;de<H;++de){const N=(de+he)*q,O=de*R;for(let W=0;W<R;++W){const ne=(N+W+ie)*re,fe=(O+W)*re;for(let ae=0;ae<re;++ae)ee[ne+ae]=E[fe+ae]}}if(D==="symmetric"){if(z)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const de=H-1,N=R-1;for(let O=0;O<te;++O){const W=O*q,ne=(0,i.calculateReflectOffset)(O,de)*R;for(let fe=0;fe<q;++fe){if(O<H&&fe<R)continue;const ae=(W+fe)*re,xe=(ne+(0,i.calculateReflectOffset)(fe,N))*re;for(let Be=0;Be<re;++Be)ee[ae+Be]=E[xe+Be]}}}E=ee,T=[te,q,re]}return[E,T]}rescale(E){for(let T=0;T<E.length;++T)E[T]=this.rescale_factor*E[T]}get_resize_output_image_size(E,T){const[C,D]=E.size;let z,K;if(this.do_thumbnail){const{height:H,width:R}=T;z=Math.min(H,R)}else Number.isInteger(T)?(z=T,K=this.config.max_size??z):T!==void 0&&(z=T.shortest_edge,K=T.longest_edge);if(z!==void 0||K!==void 0){const H=z===void 0?1:Math.max(z/C,z/D),R=C*H,re=D*H,q=K===void 0?1:Math.min(K/R,K/re);let te=Math.floor(Number((R*q).toFixed(2))),ee=Math.floor(Number((re*q).toFixed(2)));return this.size_divisibility!==void 0&&([te,ee]=m([te,ee],this.size_divisibility)),[te,ee]}else if(T!==void 0&&T.width!==void 0&&T.height!==void 0){let H=T.width,R=T.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let re=R/D,q=H/C;Math.abs(1-q)<Math.abs(1-re)?re=q:q=re,R=c(re*D,this.config.ensure_multiple_of),H=c(q*C,this.config.ensure_multiple_of)}return[H,R]}else{if(this.size_divisibility!==void 0)return m([C,D],this.size_divisibility);if(this.min_pixels!==void 0&&this.max_pixels!==void 0){const H=this.config.patch_size*this.config.merge_size;return w(D,C,H,this.min_pixels,this.max_pixels)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(T)}`)}}async resize(E){const[T,C]=this.get_resize_output_image_size(E,this.size);return await E.resize(T,C,{resample:this.resample})}async preprocess(E,{do_normalize:T=null,do_pad:C=null,do_convert_rgb:D=null,do_convert_grayscale:z=null,do_flip_channel_order:K=null}={}){this.do_crop_margin&&(E=await this.crop_margin(E));const[H,R]=E.size;if(D??this.do_convert_rgb?E=E.rgb():z&&(E=E.grayscale()),this.do_resize&&(E=await this.resize(E)),this.do_thumbnail&&(E=await this.thumbnail(E,this.size,this.resample)),this.do_center_crop){let ie,he;Number.isInteger(this.crop_size)?(ie=this.crop_size,he=this.crop_size):(ie=this.crop_size.width,he=this.crop_size.height),E=await E.center_crop(ie,he)}const re=[E.height,E.width];let q=Float32Array.from(E.data),te=[E.height,E.width,E.channels];if(this.do_rescale&&this.rescale(q),T??this.do_normalize){let ie=this.image_mean;Array.isArray(this.image_mean)||(ie=new Array(E.channels).fill(ie));let he=this.image_std;if(Array.isArray(this.image_std)||(he=new Array(E.channels).fill(ie)),ie.length!==E.channels||he.length!==E.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${ie.length}) and \`image_std\` (${he.length}) must match the number of channels in the image (${E.channels}).`);for(let de=0;de<q.length;de+=E.channels)for(let N=0;N<E.channels;++N)q[de+N]=(q[de+N]-ie[N])/he[N]}if(C??this.do_pad){if(this.pad_size)[q,te]=this.pad_image(q,[E.height,E.width,E.channels],this.pad_size);else if(this.size_divisibility){const[ie,he]=m([te[1],te[0]],this.size_divisibility);[q,te]=this.pad_image(q,te,{width:ie,height:he})}}if(K??this.do_flip_channel_order){if(te[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let ie=0;ie<q.length;ie+=3){const he=q[ie];q[ie]=q[ie+2],q[ie+2]=he}}const ee=new o.Tensor("float32",q,te).permute(2,0,1);return{original_size:[R,H],reshaped_input_size:re,pixel_values:ee}}async _call(E,...T){Array.isArray(E)||(E=[E]);const C=await Promise.all(E.map(z=>this.preprocess(z)));return{pixel_values:(0,o.stack)(C.map(z=>z.pixel_values),0),original_sizes:C.map(z=>z.original_size),reshaped_input_sizes:C.map(z=>z.reshaped_input_size)}}static async from_pretrained(E,T={}){const C=await(0,a.getModelJSON)(E,l.IMAGE_PROCESSOR_NAME,!0,T);return new this(C)}}},"./src/base/processing_utils.js":(e,r,t)=>{t.r(r),t.d(r,{Processor:()=>i});var s=t("./src/utils/constants.js"),o=t("./src/utils/generic.js"),n=t("./src/utils/hub.js");class i extends o.Callable{constructor(l,c,m){super(),this.config=l,this.components=c,this.chat_template=m}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(l,c={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(l,{tokenize:!1,chat_template:this.chat_template??void 0,...c})}batch_decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...l)}decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...l)}async _call(l,...c){for(const m of[this.image_processor,this.feature_extractor,this.tokenizer])if(m)return m(l,...c);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(l,c={}){const[m,d,u]=await Promise.all([this.uses_processor_config?(0,n.getModelJSON)(l,s.PROCESSOR_NAME,!0,c):{},Promise.all(this.classes.filter(g=>g in this).map(async g=>{const f=await this[g].from_pretrained(l,c);return[g.replace(/_class$/,""),f]})).then(Object.fromEntries),this.uses_chat_template_file?(0,n.getModelText)(l,s.CHAT_TEMPLATE_NAME,!0,c):null]);return new this(m,d,u)}}Y(i,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),Y(i,"uses_processor_config",!1),Y(i,"uses_chat_template_file",!1)},"./src/configs.js":(e,r,t)=>{t.r(r),t.d(r,{AutoConfig:()=>m,PretrainedConfig:()=>c,getCacheShapes:()=>a});var s=t("./src/utils/core.js"),o=t("./src/utils/hub.js");async function n(d,u){return await(0,o.getModelJSON)(d,"config.json",!0,u)}function i(d){const u={};let g={};switch(d.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"voxtral":case"smolvlm":case"gemma3n":g=i(d.text_config);break;case"moondream1":g=i(d.phi_config);break;case"musicgen":g=i(d.decoder);break;case"multi_modality":g=i(d.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":u.num_heads="n_head",u.num_layers="n_layer",u.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":case"modernbert-decoder":u.num_heads="num_attention_heads",u.num_layers="num_hidden_layers",u.hidden_size="hidden_size";break;case"llama":case"arcee":case"lfm2":case"smollm3":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":case"llava_qwen2":u.num_heads="num_key_value_heads",u.num_layers="num_hidden_layers",u.hidden_size="hidden_size",u.num_attention_heads="num_attention_heads",u.dim_kv="head_dim";break;case"qwen3":case"gemma":case"gemma2":case"gemma3_text":case"gemma3n_text":case"glm":case"helium":case"ernie4_5":u.num_heads="num_key_value_heads",u.num_layers="num_hidden_layers",u.dim_kv="head_dim";break;case"openelm":u.num_heads="num_kv_heads",u.num_layers="num_transformer_layers",u.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":u.num_heads="num_heads",u.num_layers="num_layers",u.hidden_size="hidden_size";break;case"bloom":u.num_heads="n_head",u.num_layers="n_layer",u.hidden_size="hidden_size";break;case"mpt":u.num_heads="n_heads",u.num_layers="n_layers",u.hidden_size="d_model";break;case"exaone":u.num_heads="num_key_value_heads",u.num_layers="num_layers",u.dim_kv="head_dim",u.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":u.num_decoder_layers="num_decoder_layers",u.num_decoder_heads="num_heads",u.decoder_dim_kv="d_kv",u.num_encoder_layers="num_layers",u.num_encoder_heads="num_heads",u.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":u.num_decoder_layers="decoder_layers",u.num_decoder_heads="decoder_attention_heads",u.decoder_hidden_size="d_model",u.num_encoder_layers="encoder_layers",u.num_encoder_heads="encoder_attention_heads",u.encoder_hidden_size="d_model";break;case"speecht5":u.num_decoder_layers="decoder_layers",u.num_decoder_heads="decoder_attention_heads",u.decoder_hidden_size="hidden_size",u.num_encoder_layers="encoder_layers",u.num_encoder_heads="encoder_attention_heads",u.encoder_hidden_size="hidden_size";break;case"trocr":u.num_encoder_layers=u.num_decoder_layers="decoder_layers",u.num_encoder_heads=u.num_decoder_heads="decoder_attention_heads",u.encoder_hidden_size=u.decoder_hidden_size="d_model";break;case"musicgen_decoder":u.num_encoder_layers=u.num_decoder_layers="num_hidden_layers",u.num_encoder_heads=u.num_decoder_heads="num_attention_heads",u.encoder_hidden_size=u.decoder_hidden_size="hidden_size";break;case"moonshine":u.num_decoder_layers="decoder_num_hidden_layers",u.num_decoder_heads="decoder_num_key_value_heads",u.num_encoder_layers="encoder_num_hidden_layers",u.num_encoder_heads="encoder_num_key_value_heads",u.encoder_hidden_size=u.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const y=i(d.decoder),I="num_decoder_layers"in y,w=(0,s.pick)(d,["model_type","is_encoder_decoder"]);return I?(w.num_decoder_layers=y.num_decoder_layers,w.num_decoder_heads=y.num_decoder_heads,w.decoder_hidden_size=y.decoder_hidden_size,w.num_encoder_layers=y.num_encoder_layers,w.num_encoder_heads=y.num_encoder_heads,w.encoder_hidden_size=y.encoder_hidden_size):(w.num_layers=y.num_layers,w.num_heads=y.num_heads,w.hidden_size=y.hidden_size),w}const f={...g,...(0,s.pick)(d,["model_type","multi_query","is_encoder_decoder"])};for(const y in u)f[y]=d[u[y]];return f}function a(d,u){if(d.model_type==="lfm2"){const g=(u==null?void 0:u.prefix)??"past_key_values",f=g==="present"?"present":"past",y={},{layer_types:I,num_attention_heads:w,num_key_value_heads:b,hidden_size:k,conv_L_cache:x}=d,v=k/w,E=(u==null?void 0:u.batch_size)??1;for(let T=0;T<I.length;++T)if(I[T]==="full_attention")for(const C of["key","value"])y[`${g}.${T}.${C}`]=[E,b,0,v];else if(I[T]==="conv")y[`${f}_conv.${T}`]=[E,k,x];else throw new Error(`Unsupported layer type: ${I[T]}`);return y}return l(d,u)}function l(d,{prefix:u="past_key_values",batch_size:g=1}={}){const f={},y=d.normalized_config;if(y.is_encoder_decoder&&"num_encoder_heads"in y&&"num_decoder_heads"in y){const I=y.encoder_dim_kv??y.encoder_hidden_size/y.num_encoder_heads,w=y.decoder_dim_kv??y.decoder_hidden_size/y.num_decoder_heads,b=[g,y.num_encoder_heads,0,I],k=[g,y.num_decoder_heads,0,w];for(let x=0;x<y.num_decoder_layers;++x)f[`${u}.${x}.encoder.key`]=b,f[`${u}.${x}.encoder.value`]=b,f[`${u}.${x}.decoder.key`]=k,f[`${u}.${x}.decoder.value`]=k}else{const I=y.num_heads,w=y.num_layers,b=y.dim_kv??y.hidden_size/(y.num_attention_heads??I);if(y.model_type==="falcon"){const k=[g*I,0,b];for(let x=0;x<w;++x)f[`${u}.${x}.key`]=k,f[`${u}.${x}.value`]=k}else if(y.multi_query){const k=[g*I,0,2*b];for(let x=0;x<w;++x)f[`${u}.${x}.key_value`]=k}else if(y.model_type==="bloom"){const k=[g*I,b,0],x=[g*I,0,b];for(let v=0;v<w;++v)f[`${u}.${v}.key`]=k,f[`${u}.${v}.value`]=x}else if(y.model_type==="openelm")for(let k=0;k<w;++k){const x=[g,I[k],0,b];f[`${u}.${k}.key`]=x,f[`${u}.${k}.value`]=x}else{const k=[g,I,0,b];for(let x=0;x<w;++x)f[`${u}.${x}.key`]=k,f[`${u}.${x}.value`]=k}}return f}class c{constructor(u){Y(this,"model_type",null);Y(this,"is_encoder_decoder",!1);Y(this,"max_position_embeddings");Y(this,"transformers.js_config");Object.assign(this,u),this.normalized_config=i(this)}static async from_pretrained(u,{progress_callback:g=null,config:f=null,cache_dir:y=null,local_files_only:I=!1,revision:w="main"}={}){f&&!(f instanceof c)&&(f=new c(f));const b=f??await n(u,{progress_callback:g,config:f,cache_dir:y,local_files_only:I,revision:w});return new this(b)}}class m{static async from_pretrained(...u){return c.from_pretrained(...u)}}},"./src/env.js":(e,r,t)=>{var D,z;t.r(r),t.d(r,{apis:()=>w,env:()=>T});var s=t("?db59"),o=t("?383f"),n=t("?fa4b");const i="3.7.2",a=typeof window<"u"&&typeof window.document<"u",l=typeof self<"u"&&["DedicatedWorkerGlobalScope","ServiceWorkerGlobalScope","SharedWorkerGlobalScope"].includes((D=self.constructor)==null?void 0:D.name),c=typeof self<"u"&&"caches"in self,m=typeof navigator<"u"&&"gpu"in navigator,d=typeof navigator<"u"&&"ml"in navigator,u=typeof process<"u",g=u&&((z=process==null?void 0:process.release)==null?void 0:z.name)==="node",f=!C(s),y=!C(o),I=typeof globalThis.Deno<"u",w=Object.freeze({IS_BROWSER_ENV:a,IS_WEBWORKER_ENV:l,IS_WEB_CACHE_AVAILABLE:c,IS_WEBGPU_AVAILABLE:m,IS_WEBNN_AVAILABLE:d,IS_PROCESS_AVAILABLE:u,IS_NODE_ENV:g,IS_FS_AVAILABLE:f,IS_PATH_AVAILABLE:y}),b=f&&y;let k="./";if(b){const K=Object(import.meta).url;K?k=o.dirname(o.dirname(n.fileURLToPath(K))):typeof __dirname<"u"&&(k=o.dirname(__dirname))}const x=b?o.join(k,"/.cache/"):null,v="/models/",E=b?o.join(k,v):v,T={version:i,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(a||l),localModelPath:E,useFS:f,useBrowserCache:c&&!I,useFSCache:f,cacheDir:x,useCustomCache:!1,customCache:null};function C(K){return Object.keys(K).length===0}},"./src/generation/configuration_utils.js":(e,r,t)=>{t.r(r),t.d(r,{GenerationConfig:()=>o});var s=t("./src/utils/core.js");class o{constructor(i){Y(this,"max_length",20);Y(this,"max_new_tokens",null);Y(this,"min_length",0);Y(this,"min_new_tokens",null);Y(this,"early_stopping",!1);Y(this,"max_time",null);Y(this,"do_sample",!1);Y(this,"num_beams",1);Y(this,"num_beam_groups",1);Y(this,"penalty_alpha",null);Y(this,"use_cache",!0);Y(this,"temperature",1);Y(this,"top_k",50);Y(this,"top_p",1);Y(this,"typical_p",1);Y(this,"epsilon_cutoff",0);Y(this,"eta_cutoff",0);Y(this,"diversity_penalty",0);Y(this,"repetition_penalty",1);Y(this,"encoder_repetition_penalty",1);Y(this,"length_penalty",1);Y(this,"no_repeat_ngram_size",0);Y(this,"bad_words_ids",null);Y(this,"force_words_ids",null);Y(this,"renormalize_logits",!1);Y(this,"constraints",null);Y(this,"forced_bos_token_id",null);Y(this,"forced_eos_token_id",null);Y(this,"remove_invalid_values",!1);Y(this,"exponential_decay_length_penalty",null);Y(this,"suppress_tokens",null);Y(this,"streamer",null);Y(this,"begin_suppress_tokens",null);Y(this,"forced_decoder_ids",null);Y(this,"guidance_scale",null);Y(this,"num_return_sequences",1);Y(this,"output_attentions",!1);Y(this,"output_hidden_states",!1);Y(this,"output_scores",!1);Y(this,"return_dict_in_generate",!1);Y(this,"pad_token_id",null);Y(this,"bos_token_id",null);Y(this,"eos_token_id",null);Y(this,"encoder_no_repeat_ngram_size",0);Y(this,"decoder_start_token_id",null);Y(this,"generation_kwargs",{});Object.assign(this,(0,s.pick)(i,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(e,r,t)=>{t.r(r),t.d(r,{ClassifierFreeGuidanceLogitsProcessor:()=>w,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>c,LogitsProcessor:()=>n,LogitsProcessorList:()=>a,LogitsWarper:()=>i,MinLengthLogitsProcessor:()=>f,MinNewTokensLengthLogitsProcessor:()=>y,NoBadWordsLogitsProcessor:()=>I,NoRepeatNGramLogitsProcessor:()=>u,RepetitionPenaltyLogitsProcessor:()=>g,SuppressTokensAtBeginLogitsProcessor:()=>m,TemperatureLogitsWarper:()=>b,TopKLogitsWarper:()=>x,TopPLogitsWarper:()=>k,WhisperTimeStampLogitsProcessor:()=>d});var s=t("./src/utils/generic.js");t("./src/utils/tensor.js");var o=t("./src/utils/maths.js");class n extends s.Callable{_call(E,T){throw Error("`_call` should be implemented in a subclass")}}class i extends s.Callable{_call(E,T){throw Error("`_call` should be implemented in a subclass")}}class a extends s.Callable{constructor(){super(),this.processors=[]}push(E){this.processors.push(E)}extend(E){this.processors.push(...E)}_call(E,T){let C=T;for(const D of this.processors)C=D(E,C);return C}[Symbol.iterator](){return this.processors.values()}}class l extends n{constructor(E){super(),this.bos_token_id=E}_call(E,T){for(let C=0;C<E.length;++C)if(E[C].length===1){const D=T[C].data;D.fill(-1/0),D[this.bos_token_id]=0}return T}}class c extends n{constructor(E,T){super(),this.max_length=E,this.eos_token_id=Array.isArray(T)?T:[T]}_call(E,T){for(let C=0;C<E.length;++C)if(E[C].length===this.max_length-1){const D=T[C].data;D.fill(-1/0);for(const z of this.eos_token_id)D[z]=0}return T}}class m extends n{constructor(E,T){super(),this.begin_suppress_tokens=E,this.begin_index=T}_call(E,T){for(let C=0;C<E.length;++C)if(E[C].length===this.begin_index){const D=T[C].data;for(const z of this.begin_suppress_tokens)D[z]=-1/0}return T}}class d extends n{constructor(E,T){super(),this.eos_token_id=Array.isArray(E.eos_token_id)?E.eos_token_id[0]:E.eos_token_id,this.no_timestamps_token_id=E.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=T.length,T.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=E.max_initial_timestamp_index}_call(E,T){for(let C=0;C<E.length;++C){const D=T[C].data;if(D[this.no_timestamps_token_id]=-1/0,E[C].length===this.begin_index-1){D.fill(-1/0),D[this.timestamp_begin]=0;continue}const z=E[C].slice(this.begin_index),K=z.length>=1&&z[z.length-1]>=this.timestamp_begin,H=z.length<2||z[z.length-2]>=this.timestamp_begin;if(K&&(H?D.subarray(this.timestamp_begin).fill(-1/0):D.subarray(0,this.eos_token_id).fill(-1/0)),E[C].length===this.begin_index&&this.max_initial_timestamp_index!==null){const te=this.timestamp_begin+this.max_initial_timestamp_index;D.subarray(te+1).fill(-1/0)}const R=(0,o.log_softmax)(D),re=Math.log(R.subarray(this.timestamp_begin).map(Math.exp).reduce((te,ee)=>te+ee)),q=(0,o.max)(R.subarray(0,this.timestamp_begin))[0];re>q&&D.subarray(0,this.timestamp_begin).fill(-1/0)}return T}}class u extends n{constructor(E){super(),this.no_repeat_ngram_size=E}getNgrams(E){const T=E.length,C=[];for(let z=0;z<T+1-this.no_repeat_ngram_size;++z){const K=[];for(let H=0;H<this.no_repeat_ngram_size;++H)K.push(E[z+H]);C.push(K.map(Number))}const D=new Map;for(const z of C){const K=z.slice(0,z.length-1),H=JSON.stringify(K),R=D.get(H)??[];R.push(z[z.length-1]),D.set(H,R)}return D}getGeneratedNgrams(E,T){const C=T.slice(T.length+1-this.no_repeat_ngram_size,T.length);return E.get(JSON.stringify(C.map(Number)))??[]}calcBannedNgramTokens(E){const T=[];if(E.length+1<this.no_repeat_ngram_size)return T;{const C=this.getNgrams(E);return this.getGeneratedNgrams(C,E)}}_call(E,T){for(let C=0;C<E.length;++C){const D=T[C].data,z=this.calcBannedNgramTokens(E[C]);for(const K of z)D[K]=-1/0}return T}}class g extends n{constructor(E){super(),this.penalty=E}_call(E,T){for(let C=0;C<E.length;++C){const D=T[C].data;for(const z of new Set(E[C])){const K=Number(z);D[K]<0?D[K]*=this.penalty:D[K]/=this.penalty}}return T}}class f extends n{constructor(E,T){super(),this.min_length=E,this.eos_token_id=Array.isArray(T)?T:[T]}_call(E,T){for(let C=0;C<E.length;++C)if(E[C].length<this.min_length){const D=T[C].data;for(const z of this.eos_token_id)D[z]=-1/0}return T}}class y extends n{constructor(E,T,C){super(),this.prompt_length_to_skip=E,this.min_new_tokens=T,this.eos_token_id=Array.isArray(C)?C:[C]}_call(E,T){for(let C=0;C<E.length;++C)if(E[C].length-this.prompt_length_to_skip<this.min_new_tokens){const z=T[C].data;for(const K of this.eos_token_id)z[K]=-1/0}return T}}class I extends n{constructor(E,T){super(),this.bad_words_ids=E,this.eos_token_id=Array.isArray(T)?T:[T]}_call(E,T){for(let C=0;C<E.length;++C){const D=T[C].data,z=E[C];for(const K of this.bad_words_ids){if(z.length<K.length-1)continue;let H=!0;for(let R=1;R<=K.length-1;++R)if(K.at(-R-1)!=z.at(-R)){H=!1;break}H&&(D[K.at(-1)]=-1/0)}}return T}}class w extends n{constructor(E){if(super(),E<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${E}.`);this.guidance_scale=E}_call(E,T){if(T.dims[0]!==2*E.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${T.dims[0]} for the logits and ${E.length} for the input ids.`);const C=E.length,D=T.slice([0,C],null),z=T.slice([C,T.dims[0]],null);for(let K=0;K<z.data.length;++K)z.data[K]+=(D.data[K]-z.data[K])*this.guidance_scale;return z}}class b extends i{constructor(E){super(),this.temperature=E}_call(E,T){const C=T.data;for(let D=0;D<C.length;++D)C[D]/=this.temperature;return T}}class k extends i{constructor(E,{filter_value:T=-1/0,min_tokens_to_keep:C=1}={}){if(super(),E<0||E>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${E}`);if(!Number.isInteger(C)||C<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${C}`);this.top_p=E,this.filter_value=T,this.min_tokens_to_keep=C}}class x extends i{constructor(E,{filter_value:T=-1/0,min_tokens_to_keep:C=1}={}){if(super(),!Number.isInteger(E)||E<0)throw new Error(`\`top_k\` must be a positive integer, but is ${E}`);this.top_k=Math.max(E,C),this.filter_value=T}}},"./src/generation/logits_sampler.js":(e,r,t)=>{t.r(r),t.d(r,{LogitsSampler:()=>i});var s=t("./src/utils/generic.js"),o=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");t("./src/generation/configuration_utils.js");class i extends s.Callable{constructor(d){super(),this.generation_config=d}async _call(d){return this.sample(d)}async sample(d){throw Error("sample should be implemented in subclasses.")}getLogits(d,u){let g=d.dims.at(-1),f=d.data;if(u===-1)f=f.slice(-g);else{let y=u*g;f=f.slice(y,y+g)}return f}randomSelect(d){let u=0;for(let f=0;f<d.length;++f)u+=d[f];let g=Math.random()*u;for(let f=0;f<d.length;++f)if(g-=d[f],g<=0)return f;return 0}static getSampler(d){if(d.do_sample)return new l(d);if(d.num_beams>1)return new c(d);if(d.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${d.num_return_sequences}.`);return new a(d)}}class a extends i{async sample(d){const u=(0,n.max)(d.data)[1];return[[BigInt(u),0]]}}class l extends i{async sample(d){let u=d.dims.at(-1);this.generation_config.top_k>0&&(u=Math.min(this.generation_config.top_k,u));const[g,f]=await(0,o.topk)(d,u),y=(0,n.softmax)(g.data);return Array.from({length:this.generation_config.num_beams},()=>{const I=this.randomSelect(y);return[f.data[I],Math.log(y[I])]})}}class c extends i{async sample(d){let u=d.dims.at(-1);this.generation_config.top_k>0&&(u=Math.min(this.generation_config.top_k,u));const[g,f]=await(0,o.topk)(d,u),y=(0,n.softmax)(g.data);return Array.from({length:this.generation_config.num_beams},(I,w)=>[f.data[w],Math.log(y[w])])}}},"./src/generation/stopping_criteria.js":(e,r,t)=>{t.r(r),t.d(r,{EosTokenCriteria:()=>a,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>i,StoppingCriteria:()=>o,StoppingCriteriaList:()=>n});var s=t("./src/utils/generic.js");class o extends s.Callable{_call(m,d){throw Error("StoppingCriteria needs to be subclassed")}}class n extends s.Callable{constructor(){super(),this.criteria=[]}push(m){this.criteria.push(m)}extend(m){m instanceof n?m=m.criteria:m instanceof o&&(m=[m]),this.criteria.push(...m)}_call(m,d){const u=new Array(m.length).fill(!1);for(const g of this.criteria){const f=g(m,d);for(let y=0;y<u.length;++y)u[y]||(u[y]=f[y])}return u}[Symbol.iterator](){return this.criteria.values()}}class i extends o{constructor(m,d=null){super(),this.max_length=m,this.max_position_embeddings=d}_call(m){return m.map(d=>d.length>=this.max_length)}}class a extends o{constructor(m){super(),Array.isArray(m)||(m=[m]),this.eos_token_id=m}_call(m,d){return m.map(u=>{const g=u.at(-1);return this.eos_token_id.some(f=>g==f)})}}class l extends o{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(m,d){return new Array(m.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(e,r,t)=>{t.r(r),t.d(r,{BaseStreamer:()=>i,TextStreamer:()=>l,WhisperTextStreamer:()=>c});var s=t("./src/utils/core.js"),o=t("./src/tokenizers.js"),n=t("./src/env.js");class i{put(d){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const a=n.apis.IS_PROCESS_AVAILABLE?m=>process.stdout.write(m):m=>console.log(m);class l extends i{constructor(d,{skip_prompt:u=!1,callback_function:g=null,token_callback_function:f=null,skip_special_tokens:y=!0,decode_kwargs:I={},...w}={}){super(),this.tokenizer=d,this.skip_prompt=u,this.callback_function=g??a,this.token_callback_function=f,this.decode_kwargs={skip_special_tokens:y,...I,...w},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(d){var I;if(d.length>1)throw Error("TextStreamer only supports batch size of 1");const u=this.next_tokens_are_prompt;if(u&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const g=d[0];(I=this.token_callback_function)==null||I.call(this,g),this.token_cache=(0,s.mergeArrays)(this.token_cache,g);const f=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let y;u||f.endsWith(`
`)?(y=f.slice(this.print_len),this.token_cache=[],this.print_len=0):f.length>0&&(0,o.is_chinese_char)(f.charCodeAt(f.length-1))?(y=f.slice(this.print_len),this.print_len+=y.length):(y=f.slice(this.print_len,f.lastIndexOf(" ")+1),this.print_len+=y.length),this.on_finalized_text(y,!1)}end(){let d;this.token_cache.length>0?(d=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):d="",this.next_tokens_are_prompt=!0,this.on_finalized_text(d,!0)}on_finalized_text(d,u){var g,f;d.length>0&&((g=this.callback_function)==null||g.call(this,d)),u&&this.callback_function===a&&n.apis.IS_PROCESS_AVAILABLE&&((f=this.callback_function)==null||f.call(this,`
`))}}class c extends l{constructor(d,{skip_prompt:u=!1,callback_function:g=null,token_callback_function:f=null,on_chunk_start:y=null,on_chunk_end:I=null,on_finalize:w=null,time_precision:b=.02,skip_special_tokens:k=!0,decode_kwargs:x={}}={}){super(d,{skip_prompt:u,skip_special_tokens:k,callback_function:g,token_callback_function:f,decode_kwargs:x}),this.timestamp_begin=d.timestamp_begin,this.on_chunk_start=y,this.on_chunk_end=I,this.on_finalize=w,this.time_precision=b,this.waiting_for_timestamp=!1}put(d){var g,f,y;if(d.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const u=d[0];if(u.length===1){const I=Number(u[0])-this.timestamp_begin;if(I>=0){const w=I*this.time_precision;this.waiting_for_timestamp?(g=this.on_chunk_end)==null||g.call(this,w):(f=this.on_chunk_start)==null||f.call(this,w),this.waiting_for_timestamp=!this.waiting_for_timestamp,(y=this.token_callback_function)==null||y.call(this,u);return}}return super.put(d)}end(){var d;super.end(),(d=this.on_finalize)==null||d.call(this)}}},"./src/models.js":(e,r,t)=>{t.r(r),t.d(r,{ASTForAudioClassification:()=>mo,ASTModel:()=>di,ASTPreTrainedModel:()=>po,AlbertForMaskedLM:()=>bt,AlbertForQuestionAnswering:()=>rt,AlbertForSequenceClassification:()=>Ge,AlbertModel:()=>Qe,AlbertPreTrainedModel:()=>Ve,ArceeForCausalLM:()=>Tt,ArceeModel:()=>at,ArceePreTrainedModel:()=>qe,AutoModel:()=>Al,AutoModelForAudioClassification:()=>D_,AutoModelForAudioFrameClassification:()=>z_,AutoModelForAudioTextToText:()=>K_,AutoModelForCTC:()=>O_,AutoModelForCausalLM:()=>x_,AutoModelForDepthEstimation:()=>N_,AutoModelForDocumentQuestionAnswering:()=>B_,AutoModelForImageClassification:()=>C_,AutoModelForImageFeatureExtraction:()=>W_,AutoModelForImageMatting:()=>R_,AutoModelForImageSegmentation:()=>S_,AutoModelForImageTextToText:()=>G_,AutoModelForImageToImage:()=>j_,AutoModelForMaskGeneration:()=>F_,AutoModelForMaskedLM:()=>T_,AutoModelForNormalEstimation:()=>V_,AutoModelForObjectDetection:()=>I_,AutoModelForPoseEstimation:()=>U_,AutoModelForQuestionAnswering:()=>E_,AutoModelForSemanticSegmentation:()=>$_,AutoModelForSeq2SeqLM:()=>M_,AutoModelForSequenceClassification:()=>g_,AutoModelForSpeechSeq2Seq:()=>b_,AutoModelForTextToSpectrogram:()=>y_,AutoModelForTextToWaveform:()=>v_,AutoModelForTokenClassification:()=>w_,AutoModelForUniversalSegmentation:()=>k_,AutoModelForVision2Seq:()=>P_,AutoModelForXVector:()=>L_,AutoModelForZeroShotObjectDetection:()=>A_,BartForConditionalGeneration:()=>wr,BartForSequenceClassification:()=>Kr,BartModel:()=>Zt,BartPretrainedModel:()=>Jr,BaseModelOutput:()=>Ie,BeitForImageClassification:()=>Hd,BeitModel:()=>Kd,BeitPreTrainedModel:()=>Ha,BertForMaskedLM:()=>$e,BertForQuestionAnswering:()=>Re,BertForSequenceClassification:()=>Me,BertForTokenClassification:()=>Fe,BertModel:()=>be,BertPreTrainedModel:()=>Pe,BlenderbotForConditionalGeneration:()=>or,BlenderbotModel:()=>hr,BlenderbotPreTrainedModel:()=>ar,BlenderbotSmallForConditionalGeneration:()=>Bn,BlenderbotSmallModel:()=>Rs,BlenderbotSmallPreTrainedModel:()=>Hr,BloomForCausalLM:()=>_d,BloomModel:()=>hd,BloomPreTrainedModel:()=>Da,CLIPModel:()=>wo,CLIPPreTrainedModel:()=>ws,CLIPSegForImageSegmentation:()=>Wn,CLIPSegModel:()=>fn,CLIPSegPreTrainedModel:()=>ts,CLIPTextModel:()=>vi,CLIPTextModelWithProjection:()=>Mo,CLIPVisionModel:()=>xi,CLIPVisionModelWithProjection:()=>bo,CamembertForMaskedLM:()=>ht,CamembertForQuestionAnswering:()=>Bt,CamembertForSequenceClassification:()=>xt,CamembertForTokenClassification:()=>nt,CamembertModel:()=>gt,CamembertPreTrainedModel:()=>st,CausalLMOutput:()=>bn,CausalLMOutputWithPast:()=>Ov,ChineseCLIPModel:()=>pt,ChineseCLIPPreTrainedModel:()=>hn,ClapAudioModelWithProjection:()=>Zm,ClapModel:()=>Jm,ClapPreTrainedModel:()=>Ai,ClapTextModelWithProjection:()=>Ym,CodeGenForCausalLM:()=>U,CodeGenModel:()=>B,CodeGenPreTrainedModel:()=>F,CohereForCausalLM:()=>Qu,CohereModel:()=>qu,CoherePreTrainedModel:()=>Pa,ConvBertForMaskedLM:()=>Is,ConvBertForQuestionAnswering:()=>$,ConvBertForSequenceClassification:()=>St,ConvBertForTokenClassification:()=>Xt,ConvBertModel:()=>ks,ConvBertPreTrainedModel:()=>mt,ConvNextForImageClassification:()=>Np,ConvNextModel:()=>jp,ConvNextPreTrainedModel:()=>ll,ConvNextV2ForImageClassification:()=>Up,ConvNextV2Model:()=>Vp,ConvNextV2PreTrainedModel:()=>cl,DFineForObjectDetection:()=>ip,DFineModel:()=>op,DFinePreTrainedModel:()=>Za,DINOv3ConvNextModel:()=>Jp,DINOv3ConvNextPreTrainedModel:()=>Xp,DINOv3ViTModel:()=>Qp,DINOv3ViTPreTrainedModel:()=>qp,DPTForDepthEstimation:()=>vp,DPTModel:()=>yp,DPTPreTrainedModel:()=>ol,DacDecoderModel:()=>Nh,DacDecoderOutput:()=>Bh,DacEncoderModel:()=>jh,DacEncoderOutput:()=>zh,DacModel:()=>Rh,DacPreTrainedModel:()=>Ri,DebertaForMaskedLM:()=>Qr,DebertaForQuestionAnswering:()=>$r,DebertaForSequenceClassification:()=>sr,DebertaForTokenClassification:()=>Sr,DebertaModel:()=>Nr,DebertaPreTrainedModel:()=>Vt,DebertaV2ForMaskedLM:()=>kr,DebertaV2ForQuestionAnswering:()=>Ur,DebertaV2ForSequenceClassification:()=>As,DebertaV2ForTokenClassification:()=>Fs,DebertaV2Model:()=>ls,DebertaV2PreTrainedModel:()=>Vr,DecisionTransformerModel:()=>bh,DecisionTransformerPreTrainedModel:()=>Mh,DeiTForImageClassification:()=>dp,DeiTModel:()=>up,DeiTPreTrainedModel:()=>tl,DepthAnythingForDepthEstimation:()=>Tp,DepthAnythingPreTrainedModel:()=>xp,DepthProForDepthEstimation:()=>$p,DepthProPreTrainedModel:()=>Sp,DetrForObjectDetection:()=>Qd,DetrForSegmentation:()=>qa,DetrModel:()=>qd,DetrObjectDetectionOutput:()=>Qa,DetrPreTrainedModel:()=>Pi,DetrSegmentationOutput:()=>Xd,Dinov2ForImageClassification:()=>Gp,Dinov2Model:()=>Wp,Dinov2PreTrainedModel:()=>ul,Dinov2WithRegistersForImageClassification:()=>Hp,Dinov2WithRegistersModel:()=>Kp,Dinov2WithRegistersPreTrainedModel:()=>dl,DistilBertForMaskedLM:()=>_r,DistilBertForQuestionAnswering:()=>mr,DistilBertForSequenceClassification:()=>Dr,DistilBertForTokenClassification:()=>hs,DistilBertModel:()=>es,DistilBertPreTrainedModel:()=>Wr,DonutSwinModel:()=>Rp,DonutSwinPreTrainedModel:()=>Bp,EfficientNetForImageClassification:()=>ih,EfficientNetModel:()=>oh,EfficientNetPreTrainedModel:()=>vl,ElectraForMaskedLM:()=>Q,ElectraForQuestionAnswering:()=>Oe,ElectraForSequenceClassification:()=>se,ElectraForTokenClassification:()=>we,ElectraModel:()=>j,ElectraPreTrainedModel:()=>X,Ernie4_5_ForCausalLM:()=>Km,Ernie4_5_Model:()=>Gm,Ernie4_5_PretrainedModel:()=>gl,EsmForMaskedLM:()=>Gr,EsmForSequenceClassification:()=>je,EsmForTokenClassification:()=>Ne,EsmModel:()=>Ls,EsmPreTrainedModel:()=>Xr,ExaoneForCausalLM:()=>Ru,ExaoneModel:()=>Bu,ExaonePreTrainedModel:()=>ya,FalconForCausalLM:()=>Xm,FalconModel:()=>Qm,FalconPreTrainedModel:()=>Ml,FastViTForImageClassification:()=>Dd,FastViTModel:()=>Od,FastViTPreTrainedModel:()=>Va,Florence2ForConditionalGeneration:()=>fi,Florence2PreTrainedModel:()=>_i,GLPNForDepthEstimation:()=>zp,GLPNModel:()=>Lp,GLPNPreTrainedModel:()=>al,GPT2LMHeadModel:()=>Po,GPT2Model:()=>Eo,GPT2PreTrainedModel:()=>Gn,GPTBigCodeForCausalLM:()=>P,GPTBigCodeModel:()=>h,GPTBigCodePreTrainedModel:()=>Qn,GPTJForCausalLM:()=>Ao,GPTJModel:()=>Io,GPTJPreTrainedModel:()=>qn,GPTNeoForCausalLM:()=>Hn,GPTNeoModel:()=>wn,GPTNeoPreTrainedModel:()=>Kn,GPTNeoXForCausalLM:()=>ko,GPTNeoXModel:()=>$o,GPTNeoXPreTrainedModel:()=>Mn,Gemma2ForCausalLM:()=>Zu,Gemma2Model:()=>Yu,Gemma2PreTrainedModel:()=>Sa,Gemma3ForCausalLM:()=>td,Gemma3Model:()=>ed,Gemma3PreTrainedModel:()=>$a,Gemma3nForConditionalGeneration:()=>Ys,Gemma3nPreTrainedModel:()=>bi,GemmaForCausalLM:()=>Ju,GemmaModel:()=>Xu,GemmaPreTrainedModel:()=>Ca,GlmForCausalLM:()=>zu,GlmModel:()=>Lu,GlmPreTrainedModel:()=>ba,GraniteForCausalLM:()=>Hu,GraniteModel:()=>Ku,GranitePreTrainedModel:()=>Ea,GroundingDinoForObjectDetection:()=>Zp,GroundingDinoPreTrainedModel:()=>Yp,GroupViTModel:()=>Fd,GroupViTPreTrainedModel:()=>Ad,HeliumForCausalLM:()=>Du,HeliumModel:()=>Ou,HeliumPreTrainedModel:()=>Ma,HieraForImageClassification:()=>mp,HieraModel:()=>pp,HieraPreTrainedModel:()=>rl,HubertForCTC:()=>$m,HubertForSequenceClassification:()=>km,HubertModel:()=>Sm,HubertPreTrainedModel:()=>bv,IJepaForImageClassification:()=>xd,IJepaModel:()=>vd,IJepaPreTrainedModel:()=>Ra,Idefics3ForConditionalGeneration:()=>pn,Idefics3PreTrainedModel:()=>Zs,ImageMattingOutput:()=>q_,JAISLMHeadModel:()=>So,JAISModel:()=>Co,JAISPreTrainedModel:()=>gn,JinaCLIPModel:()=>xo,JinaCLIPPreTrainedModel:()=>Un,JinaCLIPTextModel:()=>To,JinaCLIPVisionModel:()=>_n,Lfm2ForCausalLM:()=>vr,Lfm2Model:()=>Kt,Lfm2PreTrainedModel:()=>Dt,LiteWhisperForConditionalGeneration:()=>_o,LlamaForCausalLM:()=>Le,LlamaModel:()=>Ce,LlamaPreTrainedModel:()=>ue,LlavaForConditionalGeneration:()=>Nn,LlavaOnevisionForConditionalGeneration:()=>mi,LlavaPreTrainedModel:()=>jn,LlavaQwen2ForCausalLM:()=>Mi,LongT5ForConditionalGeneration:()=>yr,LongT5Model:()=>fr,LongT5PreTrainedModel:()=>Gt,M2M100ForConditionalGeneration:()=>cm,M2M100Model:()=>lm,M2M100PreTrainedModel:()=>hl,MBartForCausalLM:()=>ur,MBartForConditionalGeneration:()=>Ir,MBartForSequenceClassification:()=>cs,MBartModel:()=>gs,MBartPreTrainedModel:()=>Br,MPNetForMaskedLM:()=>cn,MPNetForQuestionAnswering:()=>A,MPNetForSequenceClassification:()=>un,MPNetForTokenClassification:()=>me,MPNetModel:()=>ln,MPNetPreTrainedModel:()=>fs,MT5ForConditionalGeneration:()=>Lr,MT5Model:()=>gr,MT5PreTrainedModel:()=>ir,MarianMTModel:()=>am,MarianModel:()=>im,MarianPreTrainedModel:()=>ml,MaskFormerForInstanceSegmentation:()=>Dp,MaskFormerModel:()=>Op,MaskFormerPreTrainedModel:()=>il,MaskedLMOutput:()=>Ar,Metric3DForDepthEstimation:()=>Ip,Metric3DPreTrainedModel:()=>kp,Metric3Dv2ForDepthEstimation:()=>Fp,Metric3Dv2PreTrainedModel:()=>Ap,MgpstrForSceneTextRecognition:()=>Eh,MgpstrModelOutput:()=>xh,MgpstrPreTrainedModel:()=>Th,MimiDecoderModel:()=>Lh,MimiDecoderOutput:()=>Fh,MimiEncoderModel:()=>Dh,MimiEncoderOutput:()=>Ah,MimiModel:()=>Oh,MimiPreTrainedModel:()=>Bi,MistralForCausalLM:()=>Wm,MistralModel:()=>Um,MistralPreTrainedModel:()=>fl,MobileBertForMaskedLM:()=>zs,MobileBertForQuestionAnswering:()=>Bs,MobileBertForSequenceClassification:()=>_s,MobileBertModel:()=>Jt,MobileBertPreTrainedModel:()=>tt,MobileLLMForCausalLM:()=>Nu,MobileLLMModel:()=>ju,MobileLLMPreTrainedModel:()=>va,MobileNetV1ForImageClassification:()=>lh,MobileNetV1ForSemanticSegmentation:()=>ch,MobileNetV1Model:()=>ah,MobileNetV1PreTrainedModel:()=>Oi,MobileNetV2ForImageClassification:()=>dh,MobileNetV2ForSemanticSegmentation:()=>ph,MobileNetV2Model:()=>uh,MobileNetV2PreTrainedModel:()=>Di,MobileNetV3ForImageClassification:()=>hh,MobileNetV3ForSemanticSegmentation:()=>_h,MobileNetV3Model:()=>mh,MobileNetV3PreTrainedModel:()=>Li,MobileNetV4ForImageClassification:()=>gh,MobileNetV4ForSemanticSegmentation:()=>wh,MobileNetV4Model:()=>fh,MobileNetV4PreTrainedModel:()=>zi,MobileViTForImageClassification:()=>Rd,MobileViTModel:()=>Bd,MobileViTPreTrainedModel:()=>Ua,MobileViTV2ForImageClassification:()=>Nd,MobileViTV2Model:()=>jd,MobileViTV2PreTrainedModel:()=>Wa,ModelOutput:()=>ye,ModernBertDecoderForCausalLM:()=>Pr,ModernBertDecoderModel:()=>br,ModernBertDecoderPreTrainedModel:()=>Mt,ModernBertForMaskedLM:()=>it,ModernBertForSequenceClassification:()=>At,ModernBertForTokenClassification:()=>$t,ModernBertModel:()=>Ze,ModernBertPreTrainedModel:()=>De,Moondream1ForConditionalGeneration:()=>hi,MoonshineForConditionalGeneration:()=>pi,MoonshineModel:()=>wa,MoonshinePreTrainedModel:()=>fo,MptForCausalLM:()=>gd,MptModel:()=>fd,MptPreTrainedModel:()=>La,MultiModalityCausalLM:()=>vh,MultiModalityPreTrainedModel:()=>yh,MusicgenForCausalLM:()=>Tv,MusicgenForConditionalGeneration:()=>Tl,MusicgenModel:()=>xv,MusicgenPreTrainedModel:()=>xl,NeoBertForMaskedLM:()=>et,NeoBertForQuestionAnswering:()=>Ye,NeoBertForSequenceClassification:()=>He,NeoBertForTokenClassification:()=>ot,NeoBertModel:()=>Te,NeoBertPreTrainedModel:()=>Xe,NomicBertModel:()=>as,NomicBertPreTrainedModel:()=>jr,OPTForCausalLM:()=>Md,OPTModel:()=>wd,OPTPreTrainedModel:()=>za,Olmo2ForCausalLM:()=>Gu,Olmo2Model:()=>Wu,Olmo2PreTrainedModel:()=>Ta,OlmoForCausalLM:()=>Uu,OlmoModel:()=>Vu,OlmoPreTrainedModel:()=>xa,OpenELMForCausalLM:()=>sd,OpenELMModel:()=>rd,OpenELMPreTrainedModel:()=>ka,OwlViTForObjectDetection:()=>Ud,OwlViTModel:()=>Vd,OwlViTPreTrainedModel:()=>Ga,Owlv2ForObjectDetection:()=>Gd,Owlv2Model:()=>Wd,Owlv2PreTrainedModel:()=>Ka,PaliGemmaForConditionalGeneration:()=>wi,PaliGemmaPreTrainedModel:()=>gi,PatchTSMixerForPrediction:()=>$h,PatchTSMixerModel:()=>Sh,PatchTSMixerPreTrainedModel:()=>Pl,PatchTSTForPrediction:()=>Ch,PatchTSTModel:()=>Ph,PatchTSTPreTrainedModel:()=>El,Phi3ForCausalLM:()=>md,Phi3Model:()=>pd,Phi3PreTrainedModel:()=>Oa,Phi3VForCausalLM:()=>mn,Phi3VPreTrainedModel:()=>yi,PhiForCausalLM:()=>dd,PhiModel:()=>ud,PhiPreTrainedModel:()=>Fa,PreTrainedModel:()=>G,PretrainedMixin:()=>jt,PvtForImageClassification:()=>Cd,PvtModel:()=>Pd,PvtPreTrainedModel:()=>ja,PyAnnoteForAudioFrameClassification:()=>_m,PyAnnoteModel:()=>hm,PyAnnotePreTrainedModel:()=>_l,QuestionAnsweringModelOutput:()=>Rr,Qwen2ForCausalLM:()=>od,Qwen2Model:()=>nd,Qwen2PreTrainedModel:()=>Ia,Qwen2VLForConditionalGeneration:()=>cd,Qwen2VLPreTrainedModel:()=>ld,Qwen3ForCausalLM:()=>ad,Qwen3Model:()=>id,Qwen3PreTrainedModel:()=>Aa,RFDetrForObjectDetection:()=>sp,RFDetrModel:()=>rp,RFDetrObjectDetectionOutput:()=>np,RFDetrPreTrainedModel:()=>Ya,RTDetrForObjectDetection:()=>Yd,RTDetrModel:()=>Jd,RTDetrObjectDetectionOutput:()=>Fo,RTDetrPreTrainedModel:()=>Xa,RTDetrV2ForObjectDetection:()=>ep,RTDetrV2Model:()=>Zd,RTDetrV2ObjectDetectionOutput:()=>tp,RTDetrV2PreTrainedModel:()=>Ja,ResNetForImageClassification:()=>_p,ResNetModel:()=>hp,ResNetPreTrainedModel:()=>sl,RoFormerForMaskedLM:()=>Ws,RoFormerForQuestionAnswering:()=>Hs,RoFormerForSequenceClassification:()=>Gs,RoFormerForTokenClassification:()=>Ks,RoFormerModel:()=>Cr,RoFormerPreTrainedModel:()=>Qt,RobertaForMaskedLM:()=>ao,RobertaForQuestionAnswering:()=>si,RobertaForSequenceClassification:()=>ti,RobertaForTokenClassification:()=>ri,RobertaModel:()=>ei,RobertaPreTrainedModel:()=>qs,SamImageSegmentationOutput:()=>om,SamModel:()=>nm,SamPreTrainedModel:()=>sm,SapiensForDepthEstimation:()=>Pp,SapiensForNormalEstimation:()=>Cp,SapiensForSemanticSegmentation:()=>Ep,SapiensPreTrainedModel:()=>Si,SegformerForImageClassification:()=>th,SegformerForSemanticSegmentation:()=>rh,SegformerModel:()=>vv,SegformerPreTrainedModel:()=>Fi,Seq2SeqLMOutput:()=>Fv,SequenceClassifierOutput:()=>Et,SiglipModel:()=>Ti,SiglipPreTrainedModel:()=>Vn,SiglipTextModel:()=>yo,SiglipVisionModel:()=>vo,SmolLM3ForCausalLM:()=>Fu,SmolLM3Model:()=>Ei,SmolLM3PreTrainedModel:()=>Os,SmolVLMForConditionalGeneration:()=>go,SnacDecoderModel:()=>Wh,SnacEncoderModel:()=>Uh,SnacModel:()=>Vh,SnacPreTrainedModel:()=>ji,SpeechT5ForSpeechToText:()=>Bm,SpeechT5ForTextToSpeech:()=>Rm,SpeechT5HifiGan:()=>jm,SpeechT5Model:()=>yv,SpeechT5PreTrainedModel:()=>Ii,SqueezeBertForMaskedLM:()=>ce,SqueezeBertForQuestionAnswering:()=>Ee,SqueezeBertForSequenceClassification:()=>pe,SqueezeBertModel:()=>Z,SqueezeBertPreTrainedModel:()=>V,StableLmForCausalLM:()=>nh,StableLmModel:()=>sh,StableLmPreTrainedModel:()=>yl,Starcoder2ForCausalLM:()=>qm,Starcoder2Model:()=>Hm,Starcoder2PreTrainedModel:()=>wl,StyleTextToSpeech2Model:()=>zm,StyleTextToSpeech2PreTrainedModel:()=>Lm,Swin2SRForImageSuperResolution:()=>bp,Swin2SRModel:()=>Mp,Swin2SRPreTrainedModel:()=>nl,SwinForImageClassification:()=>gp,SwinForSemanticSegmentation:()=>wp,SwinModel:()=>fp,SwinPreTrainedModel:()=>Ci,T5ForConditionalGeneration:()=>nr,T5Model:()=>Lt,T5PreTrainedModel:()=>Rt,TableTransformerForObjectDetection:()=>lp,TableTransformerModel:()=>ap,TableTransformerObjectDetectionOutput:()=>cp,TableTransformerPreTrainedModel:()=>el,TokenClassifierOutput:()=>xr,TrOCRForCausalLM:()=>Vm,TrOCRPreTrainedModel:()=>Nm,UltravoxModel:()=>Cl,UltravoxPreTrainedModel:()=>kh,UniSpeechForCTC:()=>Mm,UniSpeechForSequenceClassification:()=>bm,UniSpeechModel:()=>wm,UniSpeechPreTrainedModel:()=>$i,UniSpeechSatForAudioFrameClassification:()=>Tm,UniSpeechSatForCTC:()=>vm,UniSpeechSatForSequenceClassification:()=>xm,UniSpeechSatModel:()=>ym,UniSpeechSatPreTrainedModel:()=>Oo,ViTForImageClassification:()=>yd,ViTMAEModel:()=>$d,ViTMAEPreTrainedModel:()=>Sd,ViTMSNForImageClassification:()=>Id,ViTMSNModel:()=>kd,ViTMSNPreTrainedModel:()=>Na,ViTModel:()=>bd,ViTPreTrainedModel:()=>Ba,VisionEncoderDecoderModel:()=>dn,VitMatteForImageMatting:()=>zd,VitMattePreTrainedModel:()=>Ld,VitPoseForPoseEstimation:()=>Ed,VitPosePreTrainedModel:()=>Td,VitsModel:()=>bl,VitsModelOutput:()=>Q_,VitsPreTrainedModel:()=>eh,VoxtralForConditionalGeneration:()=>Ih,Wav2Vec2BertForCTC:()=>Pm,Wav2Vec2BertForSequenceClassification:()=>Cm,Wav2Vec2BertModel:()=>Em,Wav2Vec2BertPreTrainedModel:()=>ki,Wav2Vec2ForAudioFrameClassification:()=>mm,Wav2Vec2ForCTC:()=>dm,Wav2Vec2ForSequenceClassification:()=>pm,Wav2Vec2Model:()=>um,Wav2Vec2PreTrainedModel:()=>en,WavLMForAudioFrameClassification:()=>Dm,WavLMForCTC:()=>Am,WavLMForSequenceClassification:()=>Fm,WavLMForXVector:()=>Om,WavLMModel:()=>Im,WavLMPreTrainedModel:()=>Xn,WeSpeakerResNetModel:()=>gm,WeSpeakerResNetPreTrainedModel:()=>fm,WhisperForConditionalGeneration:()=>ho,WhisperModel:()=>Js,WhisperPreTrainedModel:()=>Rn,XLMForQuestionAnswering:()=>li,XLMForSequenceClassification:()=>ii,XLMForTokenClassification:()=>ai,XLMModel:()=>ni,XLMPreTrainedModel:()=>Qs,XLMRobertaForMaskedLM:()=>ui,XLMRobertaForQuestionAnswering:()=>uo,XLMRobertaForSequenceClassification:()=>lo,XLMRobertaForTokenClassification:()=>co,XLMRobertaModel:()=>ci,XLMRobertaPreTrainedModel:()=>Xs,XLMWithLMHeadModel:()=>oi,XVectorOutput:()=>H_,YolosForObjectDetection:()=>tm,YolosModel:()=>em,YolosObjectDetectionOutput:()=>rm,YolosPreTrainedModel:()=>pl});var s=t("./src/configs.js"),o=t("./src/backends/onnx.js"),n=t("./src/utils/dtypes.js"),i=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/hub.js"),c=t("./src/utils/constants.js"),m=t("./src/generation/logits_process.js"),d=t("./src/generation/configuration_utils.js"),u=t("./src/utils/tensor.js"),g=t("./src/utils/image.js"),f=t("./src/utils/maths.js"),y=t("./src/generation/stopping_criteria.js"),I=t("./src/generation/logits_sampler.js"),w=t("./src/env.js"),b=t("./src/models/whisper/generation_whisper.js"),k=t("./src/models/whisper/common_whisper.js");const x={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9,AudioTextToText:10,AutoEncoder:11,ImageAudioTextToText:12},v=new Map,E=new Map,T=new Map;async function C(M,S,L){var Fr;let oe=((Fr=L.config)==null?void 0:Fr["transformers.js_config"])??{},ge=L.device??oe.device;ge&&typeof ge!="string"&&(ge.hasOwnProperty(S)?ge=ge[S]:(console.warn(`device not specified for "${S}". Using the default device.`),ge=null));const _e=ge??(w.apis.IS_NODE_ENV?"cpu":"wasm"),Se=(0,o.deviceToExecutionProviders)(_e),ze=oe.device_config??{};ze.hasOwnProperty(_e)&&(oe={...oe,...ze[_e]});let We=L.dtype??oe.dtype;if(typeof We!="string"&&(We&&We.hasOwnProperty(S)?We=We[S]:(We=n.DEFAULT_DEVICE_DTYPE_MAPPING[_e]??n.DATA_TYPES.fp32,console.warn(`dtype not specified for "${S}". Using the default dtype (${We}) for this device (${_e}).`))),We===n.DATA_TYPES.auto){let It=oe.dtype;typeof It!="string"&&(It=It==null?void 0:It[S]),It&&It!==n.DATA_TYPES.auto&&n.DATA_TYPES.hasOwnProperty(It)?We=It:We=n.DEFAULT_DEVICE_DTYPE_MAPPING[_e]??n.DATA_TYPES.fp32}const Je=We;if(n.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Je)){if(Je===n.DATA_TYPES.fp16&&_e==="webgpu"&&!await(0,n.isWebGpuFp16Supported)())throw new Error(`The device (${_e}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Je}. Should be one of: ${Object.keys(n.DATA_TYPES).join(", ")}`);const _t=oe.kv_cache_dtype,yt=_t?typeof _t=="string"?_t:_t[Je]??"float32":void 0;if(yt&&!["float32","float16"].includes(yt))throw new Error(`Invalid kv_cache_dtype: ${yt}. Should be one of: float32, float16`);const vt={dtype:Je,kv_cache_dtype:yt,device:_e},Ot=n.DEFAULT_DTYPE_SUFFIX_MAPPING[Je],ft=`${S}${Ot}.onnx`,kt=`${L.subfolder??""}/${ft}`,dt={...L.session_options};dt.executionProviders??(dt.executionProviders=Se);const Ft=oe.free_dimension_overrides;Ft?dt.freeDimensionOverrides??(dt.freeDimensionOverrides=Ft):_e.startsWith("webnn")&&!dt.freeDimensionOverrides&&console.warn(`WebNN does not currently support dynamic shapes and requires 'free_dimension_overrides' to be set in config.json, preferably as a field within config["transformers.js_config"]["device_config"]["${_e}"]. When 'free_dimension_overrides' is not set, you may experience significant performance degradation.`);const Ht=w.apis.IS_NODE_ENV&&w.env.useFSCache,tr=(0,l.getModelFile)(M,kt,!0,L,Ht),dr=L.use_external_data_format??oe.use_external_data_format;let lr=[];if(dr){let It;typeof dr=="object"?dr.hasOwnProperty(ft)?It=dr[ft]:dr.hasOwnProperty(S)?It=dr[S]:It=!1:It=dr;const Tr=+It;if(Tr>l.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${Tr}) exceeds the maximum allowed value (${l.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let ss=0;ss<Tr;++ss){const yn=`${ft}_data${ss===0?"":"_"+ss}`,Yr=`${L.subfolder??""}/${yn}`;lr.push(new Promise(async(us,Ni)=>{const vn=await(0,l.getModelFile)(M,Yr,!0,L,Ht);us(vn instanceof Uint8Array?{path:yn,data:vn}:yn)}))}}else dt.externalData!==void 0&&(lr=dt.externalData.map(async It=>{if(typeof It.data=="string"){const Tr=await(0,l.getModelFile)(M,It.data,!0,L);return{...It,data:Tr}}return It}));if(lr.length>0){const It=await Promise.all(lr);w.apis.IS_NODE_ENV||(dt.externalData=It)}if(_e==="webgpu"){const It=(0,s.getCacheShapes)(L.config,{prefix:"present"});if(Object.keys(It).length>0&&!(0,o.isONNXProxy)()){const Tr={};for(const ss in It)Tr[ss]="gpu-buffer";dt.preferredOutputLocation=Tr}}return{buffer_or_path:await tr,session_options:dt,session_config:vt}}async function D(M,S,L){return Object.fromEntries(await Promise.all(Object.keys(S).map(async oe=>{const{buffer_or_path:ge,session_options:_e,session_config:Se}=await C(M,S[oe],L),ze=await(0,o.createInferenceSession)(ge,_e,Se);return[oe,ze]})))}async function z(M,S,L){return Object.fromEntries(await Promise.all(Object.keys(S).map(async oe=>{const ge=await(0,l.getModelJSON)(M,S[oe],!1,L);return[oe,ge]})))}function K(M,S){const L=Object.create(null),oe=[];for(const Se of M.inputNames){const ze=S[Se];if(!(ze instanceof u.Tensor)){oe.push(Se);continue}L[Se]=(0,o.isONNXProxy)()?ze.clone():ze}if(oe.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${oe.join(", ")}.`);const ge=Object.keys(S).length,_e=M.inputNames.length;if(ge>_e){let Se=Object.keys(S).filter(ze=>!M.inputNames.includes(ze));console.warn(`WARNING: Too many inputs were provided (${ge} > ${_e}). The following inputs will be ignored: "${Se.join(", ")}".`)}return L}let H=Promise.resolve();async function R(M,S){const L=K(M,S);try{const oe=Object.fromEntries(Object.entries(L).map(([Se,ze])=>[Se,ze.ort_tensor])),ge=()=>M.run(oe),_e=await(w.apis.IS_BROWSER_ENV||w.apis.IS_WEBWORKER_ENV?H=H.then(ge):ge());return re(_e)}catch(oe){const ge=Object.fromEntries(Object.entries(L).map(([_e,Se])=>{const ze={type:Se.type,dims:Se.dims,location:Se.location};return ze.location!=="gpu-buffer"&&(ze.data=Se.data),[_e,ze]}));throw console.error(`An error occurred during model execution: "${oe}".`),console.error("Inputs given to model:",ge),oe}}function re(M){for(let S in M)(0,o.isONNXTensor)(M[S])?M[S]=new u.Tensor(M[S]):typeof M[S]=="object"&&re(M[S]);return M}function q(M){if(M instanceof u.Tensor)return M;if(M.length===0)throw Error("items must be non-empty");if(Array.isArray(M[0])){if(M.some(S=>S.length!==M[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new u.Tensor("int64",BigInt64Array.from(M.flat().map(S=>BigInt(S))),[M.length,M[0].length])}else return new u.Tensor("int64",BigInt64Array.from(M.map(S=>BigInt(S))),[1,M.length])}function te(M){return new u.Tensor("bool",[M],[1])}async function ee(M,S){let{encoder_outputs:L,input_ids:oe,decoder_input_ids:ge,..._e}=S;if(!L){const ze=(0,a.pick)(S,M.sessions.model.inputNames);L=(await ie(M,ze)).last_hidden_state}return _e.input_ids=ge,_e.encoder_hidden_states=L,M.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(_e.encoder_attention_mask=S.attention_mask),await de(M,_e,!0)}async function ie(M,S){const L=M.sessions.model,oe=(0,a.pick)(S,L.inputNames);if(L.inputNames.includes("inputs_embeds")&&!oe.inputs_embeds){if(!S.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");oe.inputs_embeds=await M.encode_text({input_ids:S.input_ids})}if(L.inputNames.includes("token_type_ids")&&!oe.token_type_ids){if(!oe.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");oe.token_type_ids=(0,u.zeros_like)(oe.input_ids)}if(L.inputNames.includes("pixel_mask")&&!oe.pixel_mask){if(!oe.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const ge=oe.pixel_values.dims;oe.pixel_mask=(0,u.ones)([ge[0],ge[2],ge[3]])}return await R(L,oe)}async function he(M,S){const L=await M.encode(S);return await M.decode(L)}async function de(M,S,L=!1){const oe=M.sessions[L?"decoder_model_merged":"model"],{past_key_values:ge,..._e}=S;if(oe.inputNames.includes("use_cache_branch")&&(_e.use_cache_branch=te(!!ge)),oe.inputNames.includes("position_ids")&&_e.attention_mask&&!_e.position_ids){const ze=["paligemma","gemma3_text","gemma3"].includes(M.config.model_type)?1:0;_e.position_ids=Be(_e,ge,ze)}M.addPastKeyValues(_e,ge);const Se=(0,a.pick)(_e,oe.inputNames);return await R(oe,Se)}function N({modality_token_id:M,inputs_embeds:S,modality_features:L,input_ids:oe,attention_mask:ge}){const _e=oe.tolist().map(Je=>Je.reduce((_t,yt,vt)=>(yt==M&&_t.push(vt),_t),[])),Se=_e.reduce((Je,_t)=>Je+_t.length,0),ze=L.dims[0];if(Se!==ze)throw new Error(`Number of tokens and features do not match: tokens: ${Se}, features ${ze}`);let We=0;for(let Je=0;Je<_e.length;++Je){const _t=_e[Je],yt=S[Je];for(let vt=0;vt<_t.length;++vt)yt[_t[vt]].data.set(L[We++].data)}return{inputs_embeds:S,attention_mask:ge}}function O({image_token_id:M,inputs_embeds:S,image_features:L,input_ids:oe,attention_mask:ge}){return N({modality_token_id:M,inputs_embeds:S,modality_features:L,input_ids:oe,attention_mask:ge})}function W({audio_token_id:M,inputs_embeds:S,audio_features:L,input_ids:oe,attention_mask:ge}){return N({modality_token_id:M,inputs_embeds:S,modality_features:L,input_ids:oe,attention_mask:ge})}async function ne(M,{encode_function:S,merge_function:L,modality_input_name:oe,modality_output_name:ge,input_ids:_e=null,attention_mask:Se=null,position_ids:ze=null,inputs_embeds:We=null,past_key_values:Je=null,generation_config:_t=null,logits_processor:yt=null,...vt}){const Ot=vt[oe];if(!We){if(We=await M.encode_text({input_ids:_e,...vt}),Ot&&_e.dims[1]!==1){const kt=await S({[oe]:Ot,...vt});({inputs_embeds:We,attention_mask:Se}=L({[ge]:kt,inputs_embeds:We,input_ids:_e,attention_mask:Se}))}else if(Je&&Ot&&_e.dims[1]===1){const kt=_e.dims[1],dt=Object.values(Je)[0].dims.at(-2);Se=(0,u.cat)([(0,u.ones)([_e.dims[0],dt]),Se.slice(null,[Se.dims[1]-kt,Se.dims[1]])],1)}}if(!ze&&M.config.model_type==="qwen2_vl"){const{image_grid_thw:kt,video_grid_thw:dt}=vt;[ze]=M.get_rope_index(_e,kt,dt,Se)}return await de(M,{inputs_embeds:We,past_key_values:Je,attention_mask:Se,position_ids:ze,generation_config:_t,logits_processor:yt},!0)}async function fe(M,S){return await ne(M,{...S,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:M.encode_audio.bind(M),merge_function:M._merge_input_ids_with_audio_features.bind(M)})}async function ae(M,S){return await ne(M,{...S,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:M.encode_image.bind(M),merge_function:M._merge_input_ids_with_image_features.bind(M)})}function xe(M,S=0){const[L,oe]=M.dims,ge=M.data,_e=new BigInt64Array(ge.length);for(let Se=0;Se<L;++Se){const ze=Se*oe;let We=BigInt(S);for(let Je=0;Je<oe;++Je){const _t=ze+Je;ge[_t]===0n?_e[_t]=BigInt(1):(_e[_t]=We,We+=ge[_t])}}return{data:_e,dims:M.dims}}function Be(M,S=null,L=0){const{input_ids:oe,inputs_embeds:ge,attention_mask:_e}=M,{data:Se,dims:ze}=xe(_e,L);let We=new u.Tensor("int64",Se,ze);if(S){const Je=-(oe??ge).dims.at(1);We=We.slice(null,[Je,null])}return We}function Ke(M,S,L,oe){const ge=L.past_key_values?Object.values(L.past_key_values)[0].dims.at(-2):0;if(!L.attention_mask){let _e;for(const Se of["input_ids","inputs_embeds","position_ids"])if(L[Se]){_e=L[Se].dims;break}if(!_e)throw new Error("attention_mask is not provided, and unable to infer its shape from model inputs.");L.attention_mask=(0,u.ones)([_e[0],ge+_e[1]])}if(L.past_key_values){const{input_ids:_e,attention_mask:Se}=L;Se&&Se.dims[1]>_e.dims[1]||ge<_e.dims[1]&&(L.input_ids=_e.slice(null,[ge,null]))}return L}function Ae(M,S,L,oe){return L.past_key_values&&(S=S.map(ge=>[ge.at(-1)])),{...L,decoder_input_ids:q(S)}}function J(M,...S){return M.config.is_encoder_decoder?Ae(M,...S):Ke(M,...S)}function le(M,S,L,oe){const ge=!!L.past_key_values;return oe.guidance_scale!==null&&oe.guidance_scale>1&&(ge?L.input_ids=(0,u.cat)([L.input_ids,L.input_ids],0):(L.input_ids=(0,u.cat)([L.input_ids,(0,u.full_like)(L.input_ids,BigInt(oe.pad_token_id))],0),L.attention_mask=(0,u.cat)([L.attention_mask,(0,u.full_like)(L.attention_mask,0n)],0))),(ge||!L.pixel_values)&&(L.pixel_values=(0,u.full)([0,0,3,384,384],1)),ge&&(L.images_seq_mask=new u.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),L.images_emb_mask=new u.Tensor("bool",new Array(0).fill(!1),[1,1,0])),L}class G extends i.Callable{constructor(L,oe,ge){super();Y(this,"main_input_name","input_ids");Y(this,"forward_params",["input_ids","attention_mask"]);this.config=L,this.sessions=oe,this.configs=ge;const _e=T.get(this.constructor),Se=v.get(_e);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,Se){case x.DecoderOnly:this.can_generate=!0,this._forward=de,this._prepare_inputs_for_generation=Ke;break;case x.Seq2Seq:case x.Vision2Seq:case x.Musicgen:this.can_generate=!0,this._forward=ee,this._prepare_inputs_for_generation=Ae;break;case x.EncoderDecoder:this._forward=ee;break;case x.ImageTextToText:this.can_generate=!0,this._forward=ae,this._prepare_inputs_for_generation=J;break;case x.AudioTextToText:this.can_generate=!0,this._forward=fe,this._prepare_inputs_for_generation=J;break;case x.Phi3V:case x.ImageAudioTextToText:this.can_generate=!0,this._prepare_inputs_for_generation=J;break;case x.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=le;break;case x.AutoEncoder:this._forward=he;break;default:this._forward=ie;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var oe;const L=[];for(const ge of Object.values(this.sessions))(oe=ge==null?void 0:ge.handler)!=null&&oe.dispose&&L.push(ge.handler.dispose());return await Promise.all(L)}static async from_pretrained(L,{progress_callback:oe=null,config:ge=null,cache_dir:_e=null,local_files_only:Se=!1,revision:ze="main",model_file_name:We=null,subfolder:Je="onnx",device:_t=null,dtype:yt=null,use_external_data_format:vt=null,session_options:Ot={}}={}){let ft={progress_callback:oe,config:ge,cache_dir:_e,local_files_only:Se,revision:ze,model_file_name:We,subfolder:Je,device:_t,dtype:yt,use_external_data_format:vt,session_options:Ot};const kt=T.get(this),dt=v.get(kt);ge=ft.config=await s.AutoConfig.from_pretrained(L,ft);let Ft;if(dt===x.DecoderOnly)Ft=await Promise.all([D(L,{model:ft.model_file_name??"model"},ft),z(L,{generation_config:"generation_config.json"},ft)]);else if(dt===x.Seq2Seq||dt===x.Vision2Seq)Ft=await Promise.all([D(L,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},ft),z(L,{generation_config:"generation_config.json"},ft)]);else if(dt===x.MaskGeneration)Ft=await Promise.all([D(L,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},ft)]);else if(dt===x.EncoderDecoder)Ft=await Promise.all([D(L,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},ft)]);else if(dt===x.ImageTextToText){const Ht={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};ge.is_encoder_decoder&&(Ht.model="encoder_model"),Ft=await Promise.all([D(L,Ht,ft),z(L,{generation_config:"generation_config.json"},ft)])}else if(dt===x.AudioTextToText){const Ht={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};Ft=await Promise.all([D(L,Ht,ft),z(L,{generation_config:"generation_config.json"},ft)])}else if(dt===x.ImageAudioTextToText){const Ht={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};Ft=await Promise.all([D(L,Ht,ft),z(L,{generation_config:"generation_config.json"},ft)])}else if(dt===x.Musicgen)Ft=await Promise.all([D(L,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},ft),z(L,{generation_config:"generation_config.json"},ft)]);else if(dt===x.MultiModality)Ft=await Promise.all([D(L,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},ft),z(L,{generation_config:"generation_config.json"},ft)]);else if(dt===x.Phi3V)Ft=await Promise.all([D(L,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},ft),z(L,{generation_config:"generation_config.json"},ft)]);else if(dt===x.AutoEncoder)Ft=await Promise.all([D(L,{encoder_model:"encoder_model",decoder_model:"decoder_model"},ft)]);else{if(dt!==x.EncoderOnly){const Ht=kt??(ge==null?void 0:ge.model_type);Ht!=="custom"&&console.warn(`Model type for '${Ht}' not found, assuming encoder-only architecture. Please report this at ${c.GITHUB_ISSUE_URL}.`)}Ft=await Promise.all([D(L,{model:ft.model_file_name??"model"},ft)])}return new this(ge,...Ft)}async _call(L){return await this.forward(L)}async forward(L){return await this._forward(this,L)}get generation_config(){var L;return((L=this.configs)==null?void 0:L.generation_config)??null}_get_logits_warper(L){const oe=new m.LogitsProcessorList;return L.temperature!==null&&L.temperature!==1&&oe.push(new m.TemperatureLogitsWarper(L.temperature)),L.top_k!==null&&L.top_k!==0&&oe.push(new m.TopKLogitsWarper(L.top_k)),L.top_p!==null&&L.top_p<1&&oe.push(new m.TopPLogitsWarper(L.top_p)),oe}_get_logits_processor(L,oe,ge=null){const _e=new m.LogitsProcessorList;if(L.repetition_penalty!==null&&L.repetition_penalty!==1&&_e.push(new m.RepetitionPenaltyLogitsProcessor(L.repetition_penalty)),L.no_repeat_ngram_size!==null&&L.no_repeat_ngram_size>0&&_e.push(new m.NoRepeatNGramLogitsProcessor(L.no_repeat_ngram_size)),L.bad_words_ids!==null&&_e.push(new m.NoBadWordsLogitsProcessor(L.bad_words_ids,L.eos_token_id)),L.min_length!==null&&L.eos_token_id!==null&&L.min_length>0&&_e.push(new m.MinLengthLogitsProcessor(L.min_length,L.eos_token_id)),L.min_new_tokens!==null&&L.eos_token_id!==null&&L.min_new_tokens>0&&_e.push(new m.MinNewTokensLengthLogitsProcessor(oe,L.min_new_tokens,L.eos_token_id)),L.forced_bos_token_id!==null&&_e.push(new m.ForcedBOSTokenLogitsProcessor(L.forced_bos_token_id)),L.forced_eos_token_id!==null&&_e.push(new m.ForcedEOSTokenLogitsProcessor(L.max_length,L.forced_eos_token_id)),L.begin_suppress_tokens!==null){const Se=oe>1||L.forced_bos_token_id===null?oe:oe+1;_e.push(new m.SuppressTokensAtBeginLogitsProcessor(L.begin_suppress_tokens,Se))}return L.guidance_scale!==null&&L.guidance_scale>1&&_e.push(new m.ClassifierFreeGuidanceLogitsProcessor(L.guidance_scale)),ge!==null&&_e.extend(ge),_e}_prepare_generation_config(L,oe,ge=d.GenerationConfig){const _e={...this.config};for(const ze of["decoder","generator","text_config"])ze in _e&&Object.assign(_e,_e[ze]);const Se=new ge(_e);return Object.assign(Se,this.generation_config??{}),L&&Object.assign(Se,L),oe&&Object.assign(Se,(0,a.pick)(oe,Object.getOwnPropertyNames(Se))),Se}_get_stopping_criteria(L,oe=null){const ge=new y.StoppingCriteriaList;return L.max_length!==null&&ge.push(new y.MaxLengthCriteria(L.max_length,this.config.max_position_embeddings??null)),L.eos_token_id!==null&&ge.push(new y.EosTokenCriteria(L.eos_token_id)),oe&&ge.extend(oe),ge}_validate_model_class(){if(!this.can_generate){const L=[kl,Il,$l,Sl],oe=T.get(this.constructor),ge=new Set,_e=this.config.model_type;for(const ze of L){const We=ze.get(_e);We&&ge.add(We[0])}let Se=`The current model class (${oe}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw ge.size>0&&(Se+=` Please use the following class instead: ${[...ge].join(", ")}`),Error(Se)}}prepare_inputs_for_generation(...L){return this._prepare_inputs_for_generation(this,...L)}_update_model_kwargs_for_generation({generated_input_ids:L,outputs:oe,model_inputs:ge,is_encoder_decoder:_e}){return ge.past_key_values=this.getPastKeyValues(oe,ge.past_key_values),ge.input_ids=new u.Tensor("int64",L.flat(),[L.length,1]),_e||(ge.attention_mask=(0,u.cat)([ge.attention_mask,(0,u.ones)([ge.attention_mask.dims[0],1])],1)),ge.position_ids=null,ge}_prepare_model_inputs({inputs:L,bos_token_id:oe,model_kwargs:ge}){const _e=(0,a.pick)(ge,this.forward_params),Se=this.main_input_name;if(Se in _e){if(L)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else _e[Se]=L;return{inputs_tensor:_e[Se],model_inputs:_e,model_input_name:Se}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:L,model_inputs:oe,model_input_name:ge,generation_config:_e}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!oe.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:ze,pixel_values:We,attention_mask:Je,..._t}=oe,yt=await this._prepare_inputs_embeds(oe);oe={..._t,...(0,a.pick)(yt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:Se}=await ie(this,oe);if(_e.guidance_scale!==null&&_e.guidance_scale>1)Se=(0,u.cat)([Se,(0,u.full_like)(Se,0)],0),"attention_mask"in oe&&(oe.attention_mask=(0,u.cat)([oe.attention_mask,(0,u.zeros_like)(oe.attention_mask)],0));else if(oe.decoder_input_ids){const ze=q(oe.decoder_input_ids).dims[0];if(ze!==Se.dims[0]){if(Se.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${Se.dims[0]}) than the decoder inputs (${ze}).`);Se=(0,u.cat)(Array.from({length:ze},()=>Se),0)}}return oe.encoder_outputs=Se,oe}_prepare_decoder_input_ids_for_generation({batch_size:L,model_input_name:oe,model_kwargs:ge,decoder_start_token_id:_e,bos_token_id:Se,generation_config:ze}){let{decoder_input_ids:We,...Je}=ge;if(!(We instanceof u.Tensor)){if(We)Array.isArray(We[0])||(We=Array.from({length:L},()=>We));else if(_e??(_e=Se),this.config.model_type==="musicgen")We=Array.from({length:L*this.config.decoder.num_codebooks},()=>[_e]);else if(Array.isArray(_e)){if(_e.length!==L)throw new Error(`\`decoder_start_token_id\` expcted to have length ${L} but got ${_e.length}`);We=_e}else We=Array.from({length:L},()=>[_e]);We=q(We)}return ge.decoder_attention_mask=(0,u.ones_like)(We),{input_ids:We,model_inputs:Je}}async generate({inputs:L=null,generation_config:oe=null,logits_processor:ge=null,stopping_criteria:_e=null,streamer:Se=null,...ze}){this._validate_model_class(),oe=this._prepare_generation_config(oe,ze);let{inputs_tensor:We,model_inputs:Je,model_input_name:_t}=this._prepare_model_inputs({inputs:L,model_kwargs:ze});const yt=this.config.is_encoder_decoder;yt&&("encoder_outputs"in Je||(Je=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:We,model_inputs:Je,model_input_name:_t,generation_config:oe})));let vt;yt?{input_ids:vt,model_inputs:Je}=this._prepare_decoder_input_ids_for_generation({batch_size:Je[_t].dims.at(0),model_input_name:_t,model_kwargs:Je,decoder_start_token_id:oe.decoder_start_token_id,bos_token_id:oe.bos_token_id,generation_config:oe}):vt=Je[_t];let Ot=vt.dims.at(-1);oe.max_new_tokens!==null&&(oe.max_length=Ot+oe.max_new_tokens);const ft=this._get_logits_processor(oe,Ot,ge),kt=this._get_stopping_criteria(oe,_e),dt=Je[_t].dims.at(0),Ft=I.LogitsSampler.getSampler(oe),Ht=new Array(dt).fill(0),tr=vt.tolist();Se&&Se.put(tr);let dr,lr={};for(;;){if(Je=this.prepare_inputs_for_generation(tr,Je,oe),dr=await this.forward(Je),oe.output_attentions&&oe.return_dict_in_generate){const Yr=this.getAttentions(dr);for(const us in Yr)us in lr||(lr[us]=[]),lr[us].push(Yr[us])}const It=dr.logits.slice(null,-1,null),Tr=ft(tr,It),ss=[];for(let Yr=0;Yr<Tr.dims.at(0);++Yr){const us=Tr[Yr],Ni=await Ft(us);for(const[vn,Vi]of Ni){const Ui=BigInt(vn);Ht[Yr]+=Vi,tr[Yr].push(Ui),ss.push([Ui]);break}}if(Se&&Se.put(ss),kt(tr).every(Yr=>Yr))break;Je=this._update_model_kwargs_for_generation({generated_input_ids:ss,outputs:dr,model_inputs:Je,is_encoder_decoder:yt})}Se&&Se.end();const Mr=this.getPastKeyValues(dr,Je.past_key_values,!0),Fr=new u.Tensor("int64",tr.flat(),[tr.length,tr[0].length]);if(oe.return_dict_in_generate)return{sequences:Fr,past_key_values:Mr,...lr};for(const It of Object.values(dr))It.location==="gpu-buffer"&&It.dispose();return Fr}getPastKeyValues(L,oe,ge=!1){const _e=Object.create(null);for(const Se in L)if(Se.startsWith("present")){const ze=Se.replace("present_conv","past_conv").replace("present","past_key_values"),We=Se.includes("encoder");if(We&&oe?_e[ze]=oe[ze]:_e[ze]=L[Se],oe&&(!We||ge)){const Je=oe[ze];Je.location==="gpu-buffer"&&Je.dispose()}}return _e}getAttentions(L){const oe={};for(const ge of["cross_attentions","encoder_attentions","decoder_attentions"])for(const _e in L)_e.startsWith(ge)&&(ge in oe||(oe[ge]=[]),oe[ge].push(L[_e]));return oe}addPastKeyValues(L,oe){var ge,_e,Se;if(oe)Object.assign(L,oe);else{const ze=this.sessions.decoder_model_merged??this.sessions.model,We=((_e=(ge=L[this.main_input_name]??L.attention_mask)==null?void 0:ge.dims)==null?void 0:_e[0])??1,Je=((Se=ze==null?void 0:ze.config)==null?void 0:Se.kv_cache_dtype)??"float32",_t=Je==="float16"?u.DataTypeMap.float16:u.DataTypeMap.float32,yt=(0,s.getCacheShapes)(this.config,{batch_size:We});for(const vt in yt){const Ot=yt[vt].reduce((ft,kt)=>ft*kt,1);L[vt]=new u.Tensor(Je,new _t(Ot),yt[vt])}}}async encode_image({pixel_values:L}){return(await R(this.sessions.vision_encoder,{pixel_values:L})).image_features}async encode_text({input_ids:L}){return(await R(this.sessions.embed_tokens,{input_ids:L})).inputs_embeds}async encode_audio({audio_values:L}){return(await R(this.sessions.audio_encoder,{audio_values:L})).audio_features}}class ye{}class Ie extends ye{constructor({last_hidden_state:S,hidden_states:L=null,attentions:oe=null}){super(),this.last_hidden_state=S,this.hidden_states=L,this.attentions=oe}}class Pe extends G{}class be extends Pe{}class $e extends Pe{async _call(S){return new Ar(await super._call(S))}}class Me extends Pe{async _call(S){return new Et(await super._call(S))}}class Fe extends Pe{async _call(S){return new xr(await super._call(S))}}class Re extends Pe{async _call(S){return new Rr(await super._call(S))}}class Xe extends G{}class Te extends Xe{}class et extends Xe{async _call(S){return new Ar(await super._call(S))}}class He extends Xe{async _call(S){return new Et(await super._call(S))}}class ot extends Xe{async _call(S){return new xr(await super._call(S))}}class Ye extends Xe{async _call(S){return new Rr(await super._call(S))}}class De extends G{}class Ze extends De{}class it extends De{async _call(S){return new Ar(await super._call(S))}}class At extends De{async _call(S){return new Et(await super._call(S))}}class $t extends De{async _call(S){return new xr(await super._call(S))}}class Mt extends G{}class br extends Mt{}class Pr extends Mt{}class jr extends G{}class as extends jr{}class Qt extends G{}class Cr extends Qt{}class Ws extends Qt{async _call(S){return new Ar(await super._call(S))}}class Gs extends Qt{async _call(S){return new Et(await super._call(S))}}class Ks extends Qt{async _call(S){return new xr(await super._call(S))}}class Hs extends Qt{async _call(S){return new Rr(await super._call(S))}}class mt extends G{}class ks extends mt{}class Is extends mt{async _call(S){return new Ar(await super._call(S))}}class St extends mt{async _call(S){return new Et(await super._call(S))}}class Xt extends mt{async _call(S){return new xr(await super._call(S))}}class $ extends mt{async _call(S){return new Rr(await super._call(S))}}class X extends G{}class j extends X{}class Q extends X{async _call(S){return new Ar(await super._call(S))}}class se extends X{async _call(S){return new Et(await super._call(S))}}class we extends X{async _call(S){return new xr(await super._call(S))}}class Oe extends X{async _call(S){return new Rr(await super._call(S))}}class st extends G{}class gt extends st{}class ht extends st{async _call(S){return new Ar(await super._call(S))}}class xt extends st{async _call(S){return new Et(await super._call(S))}}class nt extends st{async _call(S){return new xr(await super._call(S))}}class Bt extends st{async _call(S){return new Rr(await super._call(S))}}class Vt extends G{}class Nr extends Vt{}class Qr extends Vt{async _call(S){return new Ar(await super._call(S))}}class sr extends Vt{async _call(S){return new Et(await super._call(S))}}class Sr extends Vt{async _call(S){return new xr(await super._call(S))}}class $r extends Vt{async _call(S){return new Rr(await super._call(S))}}class Vr extends G{}class ls extends Vr{}class kr extends Vr{async _call(S){return new Ar(await super._call(S))}}class As extends Vr{async _call(S){return new Et(await super._call(S))}}class Fs extends Vr{async _call(S){return new xr(await super._call(S))}}class Ur extends Vr{async _call(S){return new Rr(await super._call(S))}}class Wr extends G{}class es extends Wr{}class Dr extends Wr{async _call(S){return new Et(await super._call(S))}}class hs extends Wr{async _call(S){return new xr(await super._call(S))}}class mr extends Wr{async _call(S){return new Rr(await super._call(S))}}class _r extends Wr{async _call(S){return new Ar(await super._call(S))}}class Xr extends G{}class Ls extends Xr{}class Gr extends Xr{async _call(S){return new Ar(await super._call(S))}}class je extends Xr{async _call(S){return new Et(await super._call(S))}}class Ne extends Xr{async _call(S){return new xr(await super._call(S))}}class tt extends G{}class Jt extends tt{}class zs extends tt{async _call(S){return new Ar(await super._call(S))}}class _s extends tt{async _call(S){return new Et(await super._call(S))}}class Bs extends tt{async _call(S){return new Rr(await super._call(S))}}class fs extends G{}class ln extends fs{}class cn extends fs{async _call(S){return new Ar(await super._call(S))}}class un extends fs{async _call(S){return new Et(await super._call(S))}}class me extends fs{async _call(S){return new xr(await super._call(S))}}class A extends fs{async _call(S){return new Rr(await super._call(S))}}class V extends G{}class Z extends V{}class ce extends V{async _call(S){return new Ar(await super._call(S))}}class pe extends V{async _call(S){return new Et(await super._call(S))}}class Ee extends V{async _call(S){return new Rr(await super._call(S))}}class Ve extends G{}class Qe extends Ve{}class Ge extends Ve{async _call(S){return new Et(await super._call(S))}}class rt extends Ve{async _call(S){return new Rr(await super._call(S))}}class bt extends Ve{async _call(S){return new Ar(await super._call(S))}}class Rt extends G{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Lt extends Rt{}class nr extends Rt{}class Gt extends G{}class fr extends Gt{}class yr extends Gt{}class ir extends G{}class gr extends ir{}class Lr extends ir{}class Jr extends G{}class Zt extends Jr{}class wr extends Jr{}class Kr extends Jr{async _call(S){return new Et(await super._call(S))}}class Br extends G{}class gs extends Br{}class Ir extends Br{}class cs extends Br{async _call(S){return new Et(await super._call(S))}}class ur extends Br{}class ar extends G{}class hr extends ar{}class or extends ar{}class Hr extends G{}class Rs extends Hr{}class Bn extends Hr{}class qs extends G{}class ei extends qs{}class ao extends qs{async _call(S){return new Ar(await super._call(S))}}class ti extends qs{async _call(S){return new Et(await super._call(S))}}class ri extends qs{async _call(S){return new xr(await super._call(S))}}class si extends qs{async _call(S){return new Rr(await super._call(S))}}class Qs extends G{}class ni extends Qs{}class oi extends Qs{async _call(S){return new Ar(await super._call(S))}}class ii extends Qs{async _call(S){return new Et(await super._call(S))}}class ai extends Qs{async _call(S){return new xr(await super._call(S))}}class li extends Qs{async _call(S){return new Rr(await super._call(S))}}class Xs extends G{}class ci extends Xs{}class ui extends Xs{async _call(S){return new Ar(await super._call(S))}}class lo extends Xs{async _call(S){return new Et(await super._call(S))}}class co extends Xs{async _call(S){return new xr(await super._call(S))}}class uo extends Xs{async _call(S){return new Rr(await super._call(S))}}class po extends G{}class di extends po{}class mo extends po{}class Rn extends G{constructor(){super(...arguments);Y(this,"requires_attention_mask",!1);Y(this,"main_input_name","input_features");Y(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Js extends Rn{}class ho extends Rn{_prepare_generation_config(S,L){return super._prepare_generation_config(S,L,b.WhisperGenerationConfig)}_retrieve_init_tokens(S){const L=[S.decoder_start_token_id];let oe=S.language;const ge=S.task;if(S.is_multilingual){oe||(console.warn("No language specified - defaulting to English (en)."),oe="en");const Se=`<|${(0,k.whisper_language_to_code)(oe)}|>`;L.push(S.lang_to_id[Se]),L.push(S.task_to_id[ge??"transcribe"])}else if(oe||ge)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!S.return_timestamps&&S.no_timestamps_token_id&&L.at(-1)!==S.no_timestamps_token_id?L.push(S.no_timestamps_token_id):S.return_timestamps&&L.at(-1)===S.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),L.pop()),L.filter(_e=>_e!=null)}async generate({inputs:S=null,generation_config:L=null,logits_processor:oe=null,stopping_criteria:ge=null,..._e}){L=this._prepare_generation_config(L,_e);const Se=_e.decoder_input_ids??this._retrieve_init_tokens(L);if(L.return_timestamps&&(oe??(oe=new m.LogitsProcessorList),oe.push(new m.WhisperTimeStampLogitsProcessor(L,Se))),L.begin_suppress_tokens&&(oe??(oe=new m.LogitsProcessorList),oe.push(new m.SuppressTokensAtBeginLogitsProcessor(L.begin_suppress_tokens,Se.length))),L.return_token_timestamps){if(!L.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");L.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),L.output_attentions=!0,L.return_dict_in_generate=!0}const ze=await super.generate({inputs:S,generation_config:L,logits_processor:oe,decoder_input_ids:Se,..._e});return L.return_token_timestamps&&(ze.token_timestamps=this._extract_token_timestamps(ze,L.alignment_heads,L.num_frames)),ze}_extract_token_timestamps(S,L,oe=null,ge=.02){if(!S.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");oe==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let _e=this.config.median_filter_width;_e===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),_e=7);const Se=S.cross_attentions,ze=Array.from({length:this.config.decoder_layers},(kt,dt)=>(0,u.cat)(Se.map(Ft=>Ft[dt]),2)),We=(0,u.stack)(L.map(([kt,dt])=>{if(kt>=ze.length)throw new Error(`Layer index ${kt} is out of bounds for cross attentions (length ${ze.length}).`);return oe?ze[kt].slice(null,dt,null,[0,oe]):ze[kt].slice(null,dt)})).transpose(1,0,2,3),[Je,_t]=(0,u.std_mean)(We,-2,0,!0),yt=We.clone();for(let kt=0;kt<yt.dims[0];++kt){const dt=yt[kt];for(let Ft=0;Ft<dt.dims[0];++Ft){const Ht=dt[Ft],tr=Je[kt][Ft][0].data,dr=_t[kt][Ft][0].data;for(let lr=0;lr<Ht.dims[0];++lr){let Mr=Ht[lr].data;for(let Fr=0;Fr<Mr.length;++Fr)Mr[Fr]=(Mr[Fr]-dr[Fr])/tr[Fr];Mr.set((0,f.medianFilter)(Mr,_e))}}}const vt=[(0,u.mean)(yt,1)],Ot=S.sequences.dims,ft=new u.Tensor("float32",new Float32Array(Ot[0]*Ot[1]),Ot);for(let kt=0;kt<Ot[0];++kt){const dt=vt[kt].neg().squeeze_(0),[Ft,Ht]=(0,f.dynamic_time_warping)(dt.tolist()),tr=Array.from({length:Ft.length-1},(Mr,Fr)=>Ft[Fr+1]-Ft[Fr]),dr=(0,a.mergeArrays)([1],tr).map(Mr=>!!Mr),lr=[];for(let Mr=0;Mr<dr.length;++Mr)dr[Mr]&&lr.push(Ht[Mr]*ge);ft[kt].data.set(lr,1)}return ft}}class _o extends ho{}class fo extends G{constructor(){super(...arguments);Y(this,"requires_attention_mask",!1);Y(this,"main_input_name","input_values");Y(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class wa extends fo{}class pi extends fo{}class dn extends G{constructor(){super(...arguments);Y(this,"main_input_name","pixel_values");Y(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class jn extends G{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class Nn extends jn{_merge_input_ids_with_image_features(S){const L=S.image_features.dims.at(-1),oe=S.image_features.view(-1,L);return O({image_token_id:this.config.image_token_index,...S,image_features:oe})}}class mi extends Nn{}class hi extends Nn{}class _i extends G{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);Y(this,"main_input_name","inputs_embeds")}}class fi extends _i{_merge_input_ids_with_image_features({inputs_embeds:S,image_features:L,input_ids:oe,attention_mask:ge}){return{inputs_embeds:(0,u.cat)([L,S],1),attention_mask:(0,u.cat)([(0,u.ones)(L.dims.slice(0,2)),ge],1)}}async _prepare_inputs_embeds({input_ids:S,pixel_values:L,inputs_embeds:oe,attention_mask:ge}){if(!S&&!L)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let _e,Se;return S&&(_e=await this.encode_text({input_ids:S})),L&&(Se=await this.encode_image({pixel_values:L})),_e&&Se?{inputs_embeds:oe,attention_mask:ge}=this._merge_input_ids_with_image_features({inputs_embeds:_e,image_features:Se,input_ids:S,attention_mask:ge}):oe=_e||Se,{inputs_embeds:oe,attention_mask:ge}}async forward({input_ids:S,pixel_values:L,attention_mask:oe,decoder_input_ids:ge,decoder_attention_mask:_e,encoder_outputs:Se,past_key_values:ze,inputs_embeds:We,decoder_inputs_embeds:Je}){if(We||({inputs_embeds:We,attention_mask:oe}=await this._prepare_inputs_embeds({input_ids:S,pixel_values:L,inputs_embeds:We,attention_mask:oe})),!Se){let{last_hidden_state:vt}=await ie(this,{inputs_embeds:We,attention_mask:oe});Se=vt}if(!Je){if(!ge)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");Je=await this.encode_text({input_ids:ge})}return await de(this,{inputs_embeds:Je,attention_mask:_e,encoder_attention_mask:oe,encoder_hidden_states:Se,past_key_values:ze},!0)}}class gi extends G{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class wi extends gi{_merge_input_ids_with_image_features(S){const L=S.image_features.dims.at(-1),oe=S.image_features.view(-1,L);return O({image_token_id:this.config.image_token_index,...S,image_features:oe})}}class Mi extends jn{_merge_input_ids_with_image_features(S){const L=S.image_features.dims.at(-1),oe=S.image_features.view(-1,L);return O({image_token_id:this.config.image_token_index,...S,image_features:oe})}}class bi extends G{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","attention_mask","inputs_embeds","per_layer_inputs","position_ids","pixel_values","input_features","input_features_mask","past_key_values"])}}class Ys extends bi{async forward({input_ids:S=null,attention_mask:L=null,pixel_values:oe=null,input_features:ge=null,input_features_mask:_e=null,position_ids:Se=null,inputs_embeds:ze=null,per_layer_inputs:We=null,past_key_values:Je=null,generation_config:_t=null,logits_processor:yt=null,...vt}){if((!ze||!We)&&({inputs_embeds:ze,per_layer_inputs:We}=await R(this.sessions.embed_tokens,{input_ids:S}),S.dims[1]!==1)){if(oe){const{image_features:ft}=await R(this.sessions.vision_encoder,{pixel_values:oe});({inputs_embeds:ze,attention_mask:L}=this._merge_input_ids_with_image_features({image_features:ft,inputs_embeds:ze,input_ids:S,attention_mask:L}))}if(ge){const{audio_features:ft}=await R(this.sessions.audio_encoder,{input_features:ge,input_features_mask:_e});({inputs_embeds:ze,attention_mask:L}=this._merge_input_ids_with_audio_features({audio_features:ft,inputs_embeds:ze,input_ids:S,attention_mask:L}))}}return await de(this,{inputs_embeds:ze,per_layer_inputs:We,past_key_values:Je,attention_mask:L,position_ids:Se,generation_config:_t,logits_processor:yt},!0)}_merge_input_ids_with_image_features(S){const L=S.image_features.dims.at(-1),oe=S.image_features.view(-1,L);return O({image_token_id:this.config.image_token_id,...S,image_features:oe})}_merge_input_ids_with_audio_features(S){const L=S.audio_features.dims.at(-1),oe=S.audio_features.view(-1,L);return W({audio_token_id:this.config.audio_token_id,...S,audio_features:oe})}}class Zs extends G{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class pn extends Zs{async encode_image({pixel_values:S,pixel_attention_mask:L}){return(await R(this.sessions.vision_encoder,{pixel_values:S,pixel_attention_mask:L})).image_features}_merge_input_ids_with_image_features(S){const L=S.image_features.dims.at(-1),oe=S.image_features.view(-1,L);return O({image_token_id:this.config.image_token_id,...S,image_features:oe})}}class go extends pn{}class yi extends G{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class mn extends yi{async forward({input_ids:S=null,attention_mask:L=null,pixel_values:oe=null,image_sizes:ge=null,position_ids:_e=null,inputs_embeds:Se=null,past_key_values:ze=null,generation_config:We=null,logits_processor:Je=null,..._t}){if(!Se){let vt;if(oe&&S.dims[1]!==1){if(!ge)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:vt}=await R(this.sessions.vision_encoder,{pixel_values:oe,image_sizes:ge}))}else{const Ot=this.config.normalized_config.hidden_size;vt=new u.Tensor("float32",[],[0,Ot])}({inputs_embeds:Se}=await R(this.sessions.prepare_inputs_embeds,{input_ids:S,image_features:vt}))}return await de(this,{inputs_embeds:Se,past_key_values:ze,attention_mask:L,position_ids:_e,generation_config:We,logits_processor:Je},!1)}}class ws extends G{}class wo extends ws{}class vi extends ws{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"text_model"})}}class Mo extends ws{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"text_model"})}}class xi extends ws{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"vision_model"})}}class bo extends ws{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"vision_model"})}}class Vn extends G{}class Ti extends Vn{}class yo extends Vn{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"text_model"})}}class vo extends ws{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"vision_model"})}}class hn extends G{}class pt extends hn{}class Un extends G{}class xo extends Un{async forward(S){const L=!S.input_ids,oe=!S.pixel_values;if(L&&oe)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(L&&(S.input_ids=(0,u.ones)([S.pixel_values.dims[0],1])),oe){const{image_size:Je}=this.config.vision_config;S.pixel_values=(0,u.full)([0,3,Je,Je],0)}const{text_embeddings:ge,image_embeddings:_e,l2norm_text_embeddings:Se,l2norm_image_embeddings:ze}=await super.forward(S),We={};return L||(We.text_embeddings=ge,We.l2norm_text_embeddings=Se),oe||(We.image_embeddings=_e,We.l2norm_image_embeddings=ze),We}}class To extends Un{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"text_model"})}}class _n extends Un{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"vision_model"})}}class ts extends G{}class fn extends ts{}class Wn extends ts{}class Gn extends G{}class Eo extends Gn{}class Po extends Gn{}class gn extends G{}class Co extends gn{}class So extends gn{}class Kn extends G{}class wn extends Kn{}class Hn extends Kn{}class Mn extends G{}class $o extends Mn{}class ko extends Mn{}class qn extends G{}class Io extends qn{}class Ao extends qn{}class Qn extends G{}class h extends Qn{}class P extends Qn{}class F extends G{}class B extends F{}class U extends F{}class ue extends G{}class Ce extends ue{}class Le extends ue{}class qe extends G{}class at extends qe{}class Tt extends qe{}class Dt extends G{}class Kt extends Dt{}class vr extends Dt{}class Os extends G{}class Ei extends Os{}class Fu extends Os{}class Ma extends G{}class Ou extends Ma{}class Du extends Ma{}class ba extends G{}class Lu extends ba{}class zu extends ba{}class ya extends G{}class Bu extends ya{}class Ru extends ya{}class va extends G{}class ju extends va{}class Nu extends va{}class xa extends G{}class Vu extends xa{}class Uu extends xa{}class Ta extends G{}class Wu extends Ta{}class Gu extends Ta{}class Ea extends G{}class Ku extends Ea{}class Hu extends Ea{}class Pa extends G{}class qu extends Pa{}class Qu extends Pa{}class Ca extends G{}class Xu extends Ca{}class Ju extends Ca{}class Sa extends G{}class Yu extends Sa{}class Zu extends Sa{}class $a extends G{}class ed extends $a{}class td extends $a{}class ka extends G{}class rd extends ka{}class sd extends ka{}class Ia extends G{}class nd extends Ia{}class od extends Ia{}class Aa extends G{}class id extends Aa{}class ad extends Aa{}class ld extends G{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class cd extends ld{get_rope_index(S,L,oe,ge){const{vision_config:_e,image_token_id:Se,video_token_id:ze,vision_start_token_id:We}=this.config,Je=_e.spatial_merge_size??2,_t=[];if(L||oe){let yt=S.tolist();ge||(ge=(0,u.ones_like)(S));const vt=ge.tolist(),Ot=Array.from({length:3},Ht=>Array.from({length:S.dims[0]},tr=>Array.from({length:S.dims[1]},dr=>1))),ft=L?L.tolist():[],kt=oe?oe.tolist():[];let dt=0,Ft=0;for(let Ht=0;Ht<yt.length;++Ht){const tr=yt[Ht].filter((rr,Er)=>vt[Ht][Er]==1),lr=tr.reduce((rr,Er,tn)=>(Er==We&&rr.push(tn),rr),[]).map(rr=>tr[rr+1]),Mr=lr.filter(rr=>rr==Se).length,Fr=lr.filter(rr=>rr==ze).length;let It=[],Tr=0,ss=Mr,yn=Fr;for(let rr=0;rr<lr.length;++rr){const Er=tr.findIndex((Tn,Ms)=>Ms>Tr&&Tn==Se),tn=tr.findIndex((Tn,Ms)=>Ms>Tr&&Tn==ze),xn=ss>0&&Er!==-1?Er:tr.length+1,Yn=yn>0&&tn!==-1?tn:tr.length+1;let Wi,Fl,Ol,Dl;xn<Yn?([Fl,Ol,Dl]=ft[dt],++dt,--ss,Wi=xn):([Fl,Ol,Dl]=kt[Ft],++Ft,--yn,Wi=Yn);const[Dv,Ll,Gi]=[Number(Fl),Math.floor(Number(Ol)/Je),Math.floor(Number(Dl)/Je)],zl=Wi-Tr,X_=It.length>0?(0,f.max)(It.at(-1))[0]+1:0;It.push(Array.from({length:3*zl},(Tn,Ms)=>X_+Ms%zl));const Bl=zl+X_,Ki=Dv*Ll*Gi,Lv=Array.from({length:Ki},(Tn,Ms)=>Bl+Math.floor(Ms/(Ll*Gi))),zv=Array.from({length:Ki},(Tn,Ms)=>Bl+Math.floor(Ms/Gi)%Ll),Bv=Array.from({length:Ki},(Tn,Ms)=>Bl+Ms%Gi);It.push([Lv,zv,Bv].flat()),Tr=Wi+Ki}if(Tr<tr.length){const rr=It.length>0?(0,f.max)(It.at(-1))[0]+1:0,Er=tr.length-Tr;It.push(Array.from({length:3*Er},(tn,xn)=>rr+xn%Er))}const Yr=It.reduce((rr,Er)=>rr+Er.length,0),us=new Array(Yr);let Ni=0;for(let rr=0;rr<3;++rr)for(let Er=0;Er<It.length;++Er){const tn=It[Er],xn=tn.length/3;for(let Yn=rr*xn;Yn<(rr+1)*xn;++Yn)us[Ni++]=tn[Yn]}let vn=0;const Vi=vt[Ht];for(let rr=0;rr<Vi.length;++rr)if(Vi[rr]==1){for(let Er=0;Er<3;++Er)Ot[Er][Ht][rr]=us[Er*Yr/3+vn];++vn}const Ui=(0,f.max)(us)[0];_t.push(Ui+1-yt[Ht].length)}return[new u.Tensor("int64",Ot.flat(1/0),[3,S.dims[0],S.dims[1]]),new u.Tensor("int64",_t,[_t.length,1])]}else if(ge){const{data:yt,dims:vt}=xe(ge),Ot=BigInt64Array.from({length:3*yt.length},(kt,dt)=>yt[dt%yt.length]),ft=Array.from({length:vt[0]},(kt,dt)=>(0,f.max)(yt.subarray(vt[1]*dt,vt[1]*(dt+1)))[0]+1n+BigInt(vt[1]));return[new u.Tensor("int64",Ot,[3,...vt]),new u.Tensor("int64",ft,[ft.length,1])]}else{const[yt,vt]=S.dims,Ot=BigInt64Array.from({length:3*yt*vt},(ft,kt)=>BigInt(Math.floor(kt%vt/yt)));return[new u.Tensor("int64",Ot,[3,...S.dims]),(0,u.zeros)([yt,1])]}}async encode_image({pixel_values:S,image_grid_thw:L}){return(await R(this.sessions.vision_encoder,{pixel_values:S,grid_thw:L})).image_features}_merge_input_ids_with_image_features(S){return O({image_token_id:this.config.image_token_id,...S})}prepare_inputs_for_generation(S,L,oe){if(L.attention_mask&&!L.position_ids)if(!L.past_key_values)[L.position_ids,L.rope_deltas]=this.get_rope_index(L.input_ids,L.image_grid_thw,L.video_grid_thw,L.attention_mask);else{L.pixel_values=null;const ge=BigInt(Object.values(L.past_key_values)[0].dims.at(-2)),_e=L.rope_deltas.map(Se=>ge+Se);L.position_ids=(0,u.stack)([_e,_e,_e],0)}return L}}class Fa extends G{}class ud extends Fa{}class dd extends Fa{}class Oa extends G{}class pd extends Oa{}class md extends Oa{}class Da extends G{}class hd extends Da{}class _d extends Da{}class La extends G{}class fd extends La{}class gd extends La{}class za extends G{}class wd extends za{}class Md extends za{}class Ba extends G{}class bd extends Ba{}class yd extends Ba{async _call(S){return new Et(await super._call(S))}}class Ra extends G{}class vd extends Ra{}class xd extends Ra{async _call(S){return new Et(await super._call(S))}}class Td extends G{}class Ed extends Td{}class ja extends G{}class Pd extends ja{}class Cd extends ja{async _call(S){return new Et(await super._call(S))}}class Sd extends G{}class $d extends Sd{}class Na extends G{}class kd extends Na{}class Id extends Na{async _call(S){return new Et(await super._call(S))}}class Ad extends G{}class Fd extends Ad{}class Va extends G{}class Od extends Va{}class Dd extends Va{async _call(S){return new Et(await super._call(S))}}class Ld extends G{}class zd extends Ld{async _call(S){return new q_(await super._call(S))}}class Ua extends G{}class Bd extends Ua{}class Rd extends Ua{async _call(S){return new Et(await super._call(S))}}class Wa extends G{}class jd extends Wa{}class Nd extends Wa{async _call(S){return new Et(await super._call(S))}}class Ga extends G{}class Vd extends Ga{}class Ud extends Ga{}class Ka extends G{}class Wd extends Ka{}class Gd extends Ka{}class Ha extends G{}class Kd extends Ha{}class Hd extends Ha{async _call(S){return new Et(await super._call(S))}}class Pi extends G{}class qd extends Pi{}class Qd extends Pi{async _call(S){return new Qa(await super._call(S))}}class qa extends Pi{async _call(S){return new Xd(await super._call(S))}}class Qa extends ye{constructor({logits:S,pred_boxes:L}){super(),this.logits=S,this.pred_boxes=L}}class Xd extends ye{constructor({logits:S,pred_boxes:L,pred_masks:oe}){super(),this.logits=S,this.pred_boxes=L,this.pred_masks=oe}}class Xa extends G{}class Jd extends Xa{}class Yd extends Xa{async _call(S){return new Fo(await super._call(S))}}class Fo extends ye{constructor({logits:S,pred_boxes:L}){super(),this.logits=S,this.pred_boxes=L}}class Ja extends G{}class Zd extends Ja{}class ep extends Ja{async _call(S){return new tp(await super._call(S))}}class tp extends Fo{}class Ya extends G{}class rp extends Ya{}class sp extends Ya{async _call(S){return new np(await super._call(S))}}class np extends Fo{}class Za extends G{}class op extends Za{}class ip extends Za{async _call(S){return new Fo(await super._call(S))}}class el extends G{}class ap extends el{}class lp extends el{async _call(S){return new cp(await super._call(S))}}class cp extends Qa{}class tl extends G{}class up extends tl{}class dp extends tl{async _call(S){return new Et(await super._call(S))}}class rl extends G{}class pp extends rl{}class mp extends rl{async _call(S){return new Et(await super._call(S))}}class sl extends G{}class hp extends sl{}class _p extends sl{async _call(S){return new Et(await super._call(S))}}class Ci extends G{}class fp extends Ci{}class gp extends Ci{async _call(S){return new Et(await super._call(S))}}class wp extends Ci{}class nl extends G{}class Mp extends nl{}class bp extends nl{}class ol extends G{}class yp extends ol{}class vp extends ol{}class xp extends G{}class Tp extends xp{}class Si extends G{}class Ep extends Si{}class Pp extends Si{}class Cp extends Si{}class Sp extends G{}class $p extends Sp{}class kp extends G{}class Ip extends kp{}class Ap extends G{}class Fp extends Ap{}class il extends G{}class Op extends il{}class Dp extends il{}class al extends G{}class Lp extends al{}class zp extends al{}class Bp extends G{}class Rp extends Bp{}class ll extends G{}class jp extends ll{}class Np extends ll{async _call(S){return new Et(await super._call(S))}}class cl extends G{}class Vp extends cl{}class Up extends cl{async _call(S){return new Et(await super._call(S))}}class ul extends G{}class Wp extends ul{}class Gp extends ul{async _call(S){return new Et(await super._call(S))}}class dl extends G{}class Kp extends dl{}class Hp extends dl{async _call(S){return new Et(await super._call(S))}}class qp extends G{}class Qp extends qp{}class Xp extends G{}class Jp extends Xp{}class Yp extends G{}class Zp extends Yp{}class pl extends G{}class em extends pl{}class tm extends pl{async _call(S){return new rm(await super._call(S))}}class rm extends ye{constructor({logits:S,pred_boxes:L}){super(),this.logits=S,this.pred_boxes=L}}class sm extends G{}class nm extends sm{async get_image_embeddings({pixel_values:S}){return await ie(this,{pixel_values:S})}async forward(S){if((!S.image_embeddings||!S.image_positional_embeddings)&&(S={...S,...await this.get_image_embeddings(S)}),!S.input_labels&&S.input_points){const oe=S.input_points.dims.slice(0,-1),ge=oe.reduce((_e,Se)=>_e*Se,1);S.input_labels=new u.Tensor("int64",new BigInt64Array(ge).fill(1n),oe)}const L={image_embeddings:S.image_embeddings,image_positional_embeddings:S.image_positional_embeddings};return S.input_points&&(L.input_points=S.input_points),S.input_labels&&(L.input_labels=S.input_labels),S.input_boxes&&(L.input_boxes=S.input_boxes),await R(this.sessions.prompt_encoder_mask_decoder,L)}async _call(S){return new om(await super._call(S))}}class om extends ye{constructor({iou_scores:S,pred_masks:L}){super(),this.iou_scores=S,this.pred_masks=L}}class ml extends G{}class im extends ml{}class am extends ml{}class hl extends G{}class lm extends hl{}class cm extends hl{}class en extends G{}class um extends en{}class dm extends en{async _call(S){return new bn(await super._call(S))}}class pm extends en{async _call(S){return new Et(await super._call(S))}}class mm extends en{async _call(S){return new xr(await super._call(S))}}class _l extends G{}class hm extends _l{}class _m extends _l{async _call(S){return new xr(await super._call(S))}}class fm extends G{}class gm extends fm{}class $i extends G{}class wm extends $i{}class Mm extends $i{async _call(S){return new bn(await super._call(S))}}class bm extends $i{async _call(S){return new Et(await super._call(S))}}class Oo extends G{}class ym extends Oo{}class vm extends Oo{async _call(S){return new bn(await super._call(S))}}class xm extends Oo{async _call(S){return new Et(await super._call(S))}}class Tm extends Oo{async _call(S){return new xr(await super._call(S))}}class ki extends G{}class Em extends ki{}class Pm extends ki{async _call(S){return new bn(await super._call(S))}}class Cm extends ki{async _call(S){return new Et(await super._call(S))}}class bv extends G{}class Sm extends en{}class $m extends en{async _call(S){return new bn(await super._call(S))}}class km extends en{async _call(S){return new Et(await super._call(S))}}class Xn extends G{}class Im extends Xn{}class Am extends Xn{async _call(S){return new bn(await super._call(S))}}class Fm extends Xn{async _call(S){return new Et(await super._call(S))}}class Om extends Xn{async _call(S){return new H_(await super._call(S))}}class Dm extends Xn{async _call(S){return new xr(await super._call(S))}}class Lm extends G{}class zm extends Lm{}class Ii extends G{}class yv extends Ii{}class Bm extends Ii{}class Rm extends Ii{async generate_speech(S,L,{threshold:oe=.5,minlenratio:ge=0,maxlenratio:_e=20,vocoder:Se=null}={}){const ze={input_ids:S},{encoder_outputs:We,encoder_attention_mask:Je}=await ie(this,ze),_t=We.dims[1]/this.config.reduction_factor,yt=Math.floor(_t*_e),vt=Math.floor(_t*ge),Ot=this.config.num_mel_bins;let ft=[],kt=null,dt=null,Ft=0;for(;;){++Ft;const dr=te(!!dt);let lr;dt?lr=dt.output_sequence_out:lr=new u.Tensor("float32",new Float32Array(Ot),[1,1,Ot]);let Mr={use_cache_branch:dr,output_sequence:lr,encoder_attention_mask:Je,speaker_embeddings:L,encoder_hidden_states:We};this.addPastKeyValues(Mr,kt),dt=await R(this.sessions.decoder_model_merged,Mr),kt=this.getPastKeyValues(dt,kt);const{prob:Fr,spectrum:It}=dt;if(ft.push(It),Ft>=vt&&(Array.from(Fr.data).filter(Tr=>Tr>=oe).length>0||Ft>=yt))break}const Ht=(0,u.cat)(ft),{waveform:tr}=await R(Se.sessions.model,{spectrogram:Ht});return{spectrogram:Ht,waveform:tr}}}class jm extends G{constructor(){super(...arguments);Y(this,"main_input_name","spectrogram")}}class Nm extends G{}class Vm extends Nm{}class fl extends G{}class Um extends fl{}class Wm extends fl{}class gl extends G{}class Gm extends gl{}class Km extends gl{}class wl extends G{}class Hm extends wl{}class qm extends wl{}class Ml extends G{}class Qm extends Ml{}class Xm extends Ml{}class Ai extends G{}class Jm extends Ai{}class Ym extends Ai{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"text_model"})}}class Zm extends Ai{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"audio_model"})}}class eh extends G{}class bl extends eh{async _call(S){return new Q_(await super._call(S))}}class Fi extends G{}class vv extends Fi{}class th extends Fi{}class rh extends Fi{}class yl extends G{}class sh extends yl{}class nh extends yl{}class vl extends G{}class oh extends vl{}class ih extends vl{async _call(S){return new Et(await super._call(S))}}class xl extends G{}class xv extends xl{}class Tv extends xl{}class Tl extends G{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(L){const[oe,ge]=L.dims,_e=this.config.decoder.num_codebooks,Se=ge-_e;let ze=0;for(let _t=0;_t<L.size;++_t){if(L.data[_t]===this.config.decoder.pad_token_id)continue;const yt=_t%ge,vt=Math.floor(_t/ge)%_e,Ot=yt-vt;Ot>0&&Ot<=Se&&(L.data[ze++]=L.data[_t])}const We=Math.floor(oe/_e),Je=ze/(We*_e);return new u.Tensor(L.type,L.data.slice(0,ze),[We,_e,Je])}prepare_inputs_for_generation(L,oe,ge){let _e=structuredClone(L);for(let ze=0;ze<_e.length;++ze)for(let We=0;We<_e[ze].length;++We)ze%this.config.decoder.num_codebooks>=We&&(_e[ze][We]=BigInt(this.config.decoder.pad_token_id));return ge.guidance_scale!==null&&ge.guidance_scale>1&&(_e=_e.concat(_e)),super.prepare_inputs_for_generation(_e,oe,ge)}async generate(L){const oe=await super.generate(L),ge=this._apply_and_filter_by_delay_pattern_mask(oe).unsqueeze_(0),{audio_values:_e}=await R(this.sessions.encodec_decode,{audio_codes:ge});return _e}}class Oi extends G{}class ah extends Oi{}class lh extends Oi{async _call(S){return new Et(await super._call(S))}}class ch extends Oi{}class Di extends G{}class uh extends Di{}class dh extends Di{async _call(S){return new Et(await super._call(S))}}class ph extends Di{}class Li extends G{}class mh extends Li{}class hh extends Li{async _call(S){return new Et(await super._call(S))}}class _h extends Li{}class zi extends G{}class fh extends zi{}class gh extends zi{async _call(S){return new Et(await super._call(S))}}class wh extends zi{}class Mh extends G{}class bh extends Mh{}class yh extends G{}class vh extends yh{constructor(...L){super(...L);Y(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(L){const oe=this._generation_mode??"text";let ge;if(oe==="text"||!L.past_key_values){const Je=this.sessions.prepare_inputs_embeds,_t=(0,a.pick)(L,Je.inputNames);ge=await R(Je,_t)}else{const Je=this.sessions.gen_img_embeds,_t=(0,a.pick)({image_ids:L.input_ids},Je.inputNames);ge=await R(Je,_t)}const _e={...L,...ge},Se=await de(this,_e),ze=this.sessions[oe==="text"?"lm_head":"gen_head"];if(!ze)throw new Error(`Unable to find "${ze}" generation head`);const We=await R(ze,(0,a.pick)(Se,ze.inputNames));return{...ge,...Se,...We}}async generate(L){return this._generation_mode="text",super.generate(L)}async generate_images(L){this._generation_mode="image";const oe=(L.inputs??L[this.main_input_name]).dims[1],_e=(await super.generate(L)).slice(null,[oe,null]),Se=this.sessions.image_decode,{decoded_image:ze}=await R(Se,{generated_tokens:_e}),We=ze.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),Je=[];for(const _t of We){const yt=g.RawImage.fromTensor(_t);Je.push(yt)}return Je}}class xh extends ye{constructor({char_logits:S,bpe_logits:L,wp_logits:oe}){super(),this.char_logits=S,this.bpe_logits=L,this.wp_logits=oe}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class Th extends G{}class Eh extends Th{async _call(S){return new xh(await super._call(S))}}class El extends G{}class Ph extends El{}class Ch extends El{}class Pl extends G{}class Sh extends Pl{}class $h extends Pl{}class kh extends G{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","attention_mask","position_ids","audio_values","past_key_values"])}}class Cl extends kh{_merge_input_ids_with_audio_features(S){const L=S.audio_features.dims.at(-1),oe=S.audio_features.view(-1,L);return W({audio_token_id:this.config.ignore_index??this.config.audio_token_id,...S,audio_features:oe})}}class Ih extends Cl{}class Bi extends G{constructor(){super(...arguments);Y(this,"main_input_name","input_values");Y(this,"forward_params",["input_values"])}}class Ah extends ye{constructor({audio_codes:S}){super(),this.audio_codes=S}}class Fh extends ye{constructor({audio_values:S}){super(),this.audio_values=S}}class Oh extends Bi{async encode(S){return new Ah(await R(this.sessions.encoder_model,S))}async decode(S){return new Fh(await R(this.sessions.decoder_model,S))}}class Dh extends Bi{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"encoder_model"})}}class Lh extends Bi{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"decoder_model"})}}class Ri extends G{constructor(){super(...arguments);Y(this,"main_input_name","input_values");Y(this,"forward_params",["input_values"])}}class zh extends ye{constructor({audio_codes:S}){super(),this.audio_codes=S}}class Bh extends ye{constructor({audio_values:S}){super(),this.audio_values=S}}class Rh extends Ri{async encode(S){return new zh(await R(this.sessions.encoder_model,S))}async decode(S){return new Bh(await R(this.sessions.decoder_model,S))}}class jh extends Ri{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"encoder_model"})}}class Nh extends Ri{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"decoder_model"})}}class ji extends G{constructor(){super(...arguments);Y(this,"main_input_name","input_values");Y(this,"forward_params",["input_values"])}}class Vh extends ji{async encode(S){return await R(this.sessions.encoder_model,S)}async decode(S){return await R(this.sessions.decoder_model,S)}}class Uh extends ji{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"encoder_model"})}}class Wh extends ji{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"decoder_model"})}}class jt{static async from_pretrained(S,{progress_callback:L=null,config:oe=null,cache_dir:ge=null,local_files_only:_e=!1,revision:Se="main",model_file_name:ze=null,subfolder:We="onnx",device:Je=null,dtype:_t=null,use_external_data_format:yt=null,session_options:vt={}}={}){const Ot={progress_callback:L,config:oe,cache_dir:ge,local_files_only:_e,revision:Se,model_file_name:ze,subfolder:We,device:Je,dtype:_t,use_external_data_format:yt,session_options:vt};if(Ot.config=await s.AutoConfig.from_pretrained(S,Ot),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const ft=Ot.config.model_type;for(const kt of this.MODEL_CLASS_MAPPINGS){let dt=kt.get(ft);if(!dt){for(const Ft of kt.values())if(Ft[0]===ft){dt=Ft;break}if(!dt)continue}return await dt[1].from_pretrained(S,Ot)}if(this.BASE_IF_FAIL)return f_.has(ft)||console.warn(`Unknown model class "${ft}", attempting to construct from base class.`),await G.from_pretrained(S,Ot);throw Error(`Unsupported model type: ${ft}`)}}Y(jt,"MODEL_CLASS_MAPPINGS",null),Y(jt,"BASE_IF_FAIL",!1);const Ev=new Map([["bert",["BertModel",be]],["neobert",["NeoBertModel",Te]],["modernbert",["ModernBertModel",Ze]],["nomic_bert",["NomicBertModel",as]],["roformer",["RoFormerModel",Cr]],["electra",["ElectraModel",j]],["esm",["EsmModel",Ls]],["convbert",["ConvBertModel",ks]],["camembert",["CamembertModel",gt]],["deberta",["DebertaModel",Nr]],["deberta-v2",["DebertaV2Model",ls]],["mpnet",["MPNetModel",ln]],["albert",["AlbertModel",Qe]],["distilbert",["DistilBertModel",es]],["roberta",["RobertaModel",ei]],["xlm",["XLMModel",ni]],["xlm-roberta",["XLMRobertaModel",ci]],["clap",["ClapModel",Jm]],["clip",["CLIPModel",wo]],["clipseg",["CLIPSegModel",fn]],["chinese_clip",["ChineseCLIPModel",pt]],["siglip",["SiglipModel",Ti]],["jina_clip",["JinaCLIPModel",xo]],["mobilebert",["MobileBertModel",Jt]],["squeezebert",["SqueezeBertModel",Z]],["wav2vec2",["Wav2Vec2Model",um]],["wav2vec2-bert",["Wav2Vec2BertModel",Em]],["unispeech",["UniSpeechModel",wm]],["unispeech-sat",["UniSpeechSatModel",ym]],["hubert",["HubertModel",Sm]],["wavlm",["WavLMModel",Im]],["audio-spectrogram-transformer",["ASTModel",di]],["vits",["VitsModel",bl]],["pyannote",["PyAnnoteModel",hm]],["wespeaker-resnet",["WeSpeakerResNetModel",gm]],["detr",["DetrModel",qd]],["rt_detr",["RTDetrModel",Jd]],["rt_detr_v2",["RTDetrV2Model",Zd]],["rf_detr",["RFDetrModel",rp]],["d_fine",["DFineModel",op]],["table-transformer",["TableTransformerModel",ap]],["vit",["ViTModel",bd]],["ijepa",["IJepaModel",vd]],["pvt",["PvtModel",Pd]],["vit_msn",["ViTMSNModel",kd]],["vit_mae",["ViTMAEModel",$d]],["groupvit",["GroupViTModel",Fd]],["fastvit",["FastViTModel",Od]],["mobilevit",["MobileViTModel",Bd]],["mobilevitv2",["MobileViTV2Model",jd]],["owlvit",["OwlViTModel",Vd]],["owlv2",["Owlv2Model",Wd]],["beit",["BeitModel",Kd]],["deit",["DeiTModel",up]],["hiera",["HieraModel",pp]],["convnext",["ConvNextModel",jp]],["convnextv2",["ConvNextV2Model",Vp]],["dinov2",["Dinov2Model",Wp]],["dinov2_with_registers",["Dinov2WithRegistersModel",Kp]],["dinov3_vit",["DINOv3ViTModel",Qp]],["dinov3_convnext",["DINOv3ConvNextModel",Jp]],["resnet",["ResNetModel",hp]],["swin",["SwinModel",fp]],["swin2sr",["Swin2SRModel",Mp]],["donut-swin",["DonutSwinModel",Rp]],["yolos",["YolosModel",em]],["dpt",["DPTModel",yp]],["glpn",["GLPNModel",Lp]],["hifigan",["SpeechT5HifiGan",jm]],["efficientnet",["EfficientNetModel",oh]],["decision_transformer",["DecisionTransformerModel",bh]],["patchtst",["PatchTSTForPrediction",Ph]],["patchtsmixer",["PatchTSMixerForPrediction",Sh]],["mobilenet_v1",["MobileNetV1Model",ah]],["mobilenet_v2",["MobileNetV2Model",uh]],["mobilenet_v3",["MobileNetV3Model",mh]],["mobilenet_v4",["MobileNetV4Model",fh]],["maskformer",["MaskFormerModel",Op]],["mgp-str",["MgpstrForSceneTextRecognition",Eh]],["style_text_to_speech_2",["StyleTextToSpeech2Model",zm]]]),Pv=new Map([["t5",["T5Model",Lt]],["longt5",["LongT5Model",fr]],["mt5",["MT5Model",gr]],["bart",["BartModel",Zt]],["mbart",["MBartModel",gs]],["marian",["MarianModel",im]],["whisper",["WhisperModel",Js]],["m2m_100",["M2M100Model",lm]],["blenderbot",["BlenderbotModel",hr]],["blenderbot-small",["BlenderbotSmallModel",Rs]]]),Cv=new Map([["mimi",["MimiModel",Oh]],["dac",["DacModel",Rh]],["snac",["SnacModel",Vh]]]),Sv=new Map([["bloom",["BloomModel",hd]],["jais",["JAISModel",Co]],["gpt2",["GPT2Model",Eo]],["gptj",["GPTJModel",Io]],["gpt_bigcode",["GPTBigCodeModel",h]],["gpt_neo",["GPTNeoModel",wn]],["gpt_neox",["GPTNeoXModel",$o]],["codegen",["CodeGenModel",B]],["llama",["LlamaModel",Ce]],["arcee",["ArceeModel",at]],["lfm2",["Lfm2Model",Kt]],["smollm3",["SmolLM3Model",Ei]],["exaone",["ExaoneModel",Bu]],["olmo",["OlmoModel",Vu]],["olmo2",["Olmo2Model",Wu]],["mobilellm",["MobileLLMModel",ju]],["granite",["GraniteModel",Ku]],["cohere",["CohereModel",qu]],["gemma",["GemmaModel",Xu]],["gemma2",["Gemma2Model",Yu]],["gemma3_text",["Gemma3Model",ed]],["helium",["HeliumModel",Ou]],["glm",["GlmModel",Lu]],["openelm",["OpenELMModel",rd]],["qwen2",["Qwen2Model",nd]],["qwen3",["Qwen3Model",id]],["phi",["PhiModel",ud]],["phi3",["Phi3Model",pd]],["mpt",["MptModel",fd]],["opt",["OPTModel",wd]],["mistral",["MistralModel",Um]],["ernie4_5",["Ernie4_5_Model",Gm]],["starcoder2",["Starcoder2Model",Hm]],["falcon",["FalconModel",Qm]],["stablelm",["StableLmModel",sh]],["modernbert-decoder",["ModernBertDecoderModel",br]]]),Sl=new Map([["speecht5",["SpeechT5ForSpeechToText",Bm]],["whisper",["WhisperForConditionalGeneration",ho]],["lite-whisper",["LiteWhisperForConditionalGeneration",_o]],["moonshine",["MoonshineForConditionalGeneration",pi]]]),Gh=new Map([["speecht5",["SpeechT5ForTextToSpeech",Rm]]]),Kh=new Map([["vits",["VitsModel",bl]],["musicgen",["MusicgenForConditionalGeneration",Tl]]]),Hh=new Map([["bert",["BertForSequenceClassification",Me]],["neobert",["NeoBertForSequenceClassification",He]],["modernbert",["ModernBertForSequenceClassification",At]],["roformer",["RoFormerForSequenceClassification",Gs]],["electra",["ElectraForSequenceClassification",se]],["esm",["EsmForSequenceClassification",je]],["convbert",["ConvBertForSequenceClassification",St]],["camembert",["CamembertForSequenceClassification",xt]],["deberta",["DebertaForSequenceClassification",sr]],["deberta-v2",["DebertaV2ForSequenceClassification",As]],["mpnet",["MPNetForSequenceClassification",un]],["albert",["AlbertForSequenceClassification",Ge]],["distilbert",["DistilBertForSequenceClassification",Dr]],["roberta",["RobertaForSequenceClassification",ti]],["xlm",["XLMForSequenceClassification",ii]],["xlm-roberta",["XLMRobertaForSequenceClassification",lo]],["bart",["BartForSequenceClassification",Kr]],["mbart",["MBartForSequenceClassification",cs]],["mobilebert",["MobileBertForSequenceClassification",_s]],["squeezebert",["SqueezeBertForSequenceClassification",pe]]]),qh=new Map([["bert",["BertForTokenClassification",Fe]],["neobert",["NeoBertForTokenClassification",ot]],["modernbert",["ModernBertForTokenClassification",$t]],["roformer",["RoFormerForTokenClassification",Ks]],["electra",["ElectraForTokenClassification",we]],["esm",["EsmForTokenClassification",Ne]],["convbert",["ConvBertForTokenClassification",Xt]],["camembert",["CamembertForTokenClassification",nt]],["deberta",["DebertaForTokenClassification",Sr]],["deberta-v2",["DebertaV2ForTokenClassification",Fs]],["mpnet",["MPNetForTokenClassification",me]],["distilbert",["DistilBertForTokenClassification",hs]],["roberta",["RobertaForTokenClassification",ri]],["xlm",["XLMForTokenClassification",ai]],["xlm-roberta",["XLMRobertaForTokenClassification",co]]]),$l=new Map([["t5",["T5ForConditionalGeneration",nr]],["longt5",["LongT5ForConditionalGeneration",yr]],["mt5",["MT5ForConditionalGeneration",Lr]],["bart",["BartForConditionalGeneration",wr]],["mbart",["MBartForConditionalGeneration",Ir]],["marian",["MarianMTModel",am]],["m2m_100",["M2M100ForConditionalGeneration",cm]],["blenderbot",["BlenderbotForConditionalGeneration",or]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Bn]]]),kl=new Map([["bloom",["BloomForCausalLM",_d]],["gpt2",["GPT2LMHeadModel",Po]],["jais",["JAISLMHeadModel",So]],["gptj",["GPTJForCausalLM",Ao]],["gpt_bigcode",["GPTBigCodeForCausalLM",P]],["gpt_neo",["GPTNeoForCausalLM",Hn]],["gpt_neox",["GPTNeoXForCausalLM",ko]],["codegen",["CodeGenForCausalLM",U]],["llama",["LlamaForCausalLM",Le]],["arcee",["ArceeForCausalLM",Tt]],["lfm2",["Lfm2ForCausalLM",vr]],["smollm3",["SmolLM3ForCausalLM",Fu]],["exaone",["ExaoneForCausalLM",Ru]],["olmo",["OlmoForCausalLM",Uu]],["olmo2",["Olmo2ForCausalLM",Gu]],["mobilellm",["MobileLLMForCausalLM",Nu]],["granite",["GraniteForCausalLM",Hu]],["cohere",["CohereForCausalLM",Qu]],["gemma",["GemmaForCausalLM",Ju]],["gemma2",["Gemma2ForCausalLM",Zu]],["gemma3_text",["Gemma3ForCausalLM",td]],["helium",["HeliumForCausalLM",Du]],["glm",["GlmForCausalLM",zu]],["openelm",["OpenELMForCausalLM",sd]],["qwen2",["Qwen2ForCausalLM",od]],["qwen3",["Qwen3ForCausalLM",ad]],["phi",["PhiForCausalLM",dd]],["phi3",["Phi3ForCausalLM",md]],["mpt",["MptForCausalLM",gd]],["opt",["OPTForCausalLM",Md]],["mbart",["MBartForCausalLM",ur]],["mistral",["MistralForCausalLM",Wm]],["ernie4_5",["Ernie4_5_ForCausalLM",Km]],["starcoder2",["Starcoder2ForCausalLM",qm]],["falcon",["FalconForCausalLM",Xm]],["trocr",["TrOCRForCausalLM",Vm]],["stablelm",["StableLmForCausalLM",nh]],["modernbert-decoder",["ModernBertDecoderForCausalLM",Pr]],["phi3_v",["Phi3VForCausalLM",mn]]]),$v=new Map([["multi_modality",["MultiModalityCausalLM",vh]]]),Qh=new Map([["bert",["BertForMaskedLM",$e]],["neobert",["NeoBertForMaskedLM",et]],["modernbert",["ModernBertForMaskedLM",it]],["roformer",["RoFormerForMaskedLM",Ws]],["electra",["ElectraForMaskedLM",Q]],["esm",["EsmForMaskedLM",Gr]],["convbert",["ConvBertForMaskedLM",Is]],["camembert",["CamembertForMaskedLM",ht]],["deberta",["DebertaForMaskedLM",Qr]],["deberta-v2",["DebertaV2ForMaskedLM",kr]],["mpnet",["MPNetForMaskedLM",cn]],["albert",["AlbertForMaskedLM",bt]],["distilbert",["DistilBertForMaskedLM",_r]],["roberta",["RobertaForMaskedLM",ao]],["xlm",["XLMWithLMHeadModel",oi]],["xlm-roberta",["XLMRobertaForMaskedLM",ui]],["mobilebert",["MobileBertForMaskedLM",zs]],["squeezebert",["SqueezeBertForMaskedLM",ce]]]),Xh=new Map([["bert",["BertForQuestionAnswering",Re]],["neobert",["NeoBertForQuestionAnswering",Ye]],["roformer",["RoFormerForQuestionAnswering",Hs]],["electra",["ElectraForQuestionAnswering",Oe]],["convbert",["ConvBertForQuestionAnswering",$]],["camembert",["CamembertForQuestionAnswering",Bt]],["deberta",["DebertaForQuestionAnswering",$r]],["deberta-v2",["DebertaV2ForQuestionAnswering",Ur]],["mpnet",["MPNetForQuestionAnswering",A]],["albert",["AlbertForQuestionAnswering",rt]],["distilbert",["DistilBertForQuestionAnswering",mr]],["roberta",["RobertaForQuestionAnswering",si]],["xlm",["XLMForQuestionAnswering",li]],["xlm-roberta",["XLMRobertaForQuestionAnswering",uo]],["mobilebert",["MobileBertForQuestionAnswering",Bs]],["squeezebert",["SqueezeBertForQuestionAnswering",Ee]]]),Il=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",dn]],["idefics3",["Idefics3ForConditionalGeneration",pn]],["smolvlm",["SmolVLMForConditionalGeneration",go]]]),Jh=new Map([["llava",["LlavaForConditionalGeneration",Nn]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",mi]],["moondream1",["Moondream1ForConditionalGeneration",hi]],["florence2",["Florence2ForConditionalGeneration",fi]],["qwen2-vl",["Qwen2VLForConditionalGeneration",cd]],["idefics3",["Idefics3ForConditionalGeneration",pn]],["smolvlm",["SmolVLMForConditionalGeneration",go]],["paligemma",["PaliGemmaForConditionalGeneration",wi]],["llava_qwen2",["LlavaQwen2ForCausalLM",Mi]],["gemma3n",["Gemma3nForConditionalGeneration",Ys]]]),Yh=new Map([["ultravox",["UltravoxModel",Cl]],["voxtral",["VoxtralForConditionalGeneration",Ih]]]),kv=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",dn]]]),Zh=new Map([["vit",["ViTForImageClassification",yd]],["ijepa",["IJepaForImageClassification",xd]],["pvt",["PvtForImageClassification",Cd]],["vit_msn",["ViTMSNForImageClassification",Id]],["fastvit",["FastViTForImageClassification",Dd]],["mobilevit",["MobileViTForImageClassification",Rd]],["mobilevitv2",["MobileViTV2ForImageClassification",Nd]],["beit",["BeitForImageClassification",Hd]],["deit",["DeiTForImageClassification",dp]],["hiera",["HieraForImageClassification",mp]],["convnext",["ConvNextForImageClassification",Np]],["convnextv2",["ConvNextV2ForImageClassification",Up]],["dinov2",["Dinov2ForImageClassification",Gp]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",Hp]],["resnet",["ResNetForImageClassification",_p]],["swin",["SwinForImageClassification",gp]],["segformer",["SegformerForImageClassification",th]],["efficientnet",["EfficientNetForImageClassification",ih]],["mobilenet_v1",["MobileNetV1ForImageClassification",lh]],["mobilenet_v2",["MobileNetV2ForImageClassification",dh]],["mobilenet_v3",["MobileNetV3ForImageClassification",hh]],["mobilenet_v4",["MobileNetV4ForImageClassification",gh]]]),e_=new Map([["detr",["DetrForObjectDetection",Qd]],["rt_detr",["RTDetrForObjectDetection",Yd]],["rt_detr_v2",["RTDetrV2ForObjectDetection",ep]],["rf_detr",["RFDetrForObjectDetection",sp]],["d_fine",["DFineForObjectDetection",ip]],["table-transformer",["TableTransformerForObjectDetection",lp]],["yolos",["YolosForObjectDetection",tm]]]),t_=new Map([["owlvit",["OwlViTForObjectDetection",Ud]],["owlv2",["Owlv2ForObjectDetection",Gd]],["grounding-dino",["GroundingDinoForObjectDetection",Zp]]]),Jn=new Map([["detr",["DetrForSegmentation",qa]],["clipseg",["CLIPSegForImageSegmentation",Wn]]]),r_=new Map([["segformer",["SegformerForSemanticSegmentation",rh]],["sapiens",["SapiensForSemanticSegmentation",Ep]],["swin",["SwinForSemanticSegmentation",wp]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",ch]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",ph]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",_h]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",wh]]]),s_=new Map([["detr",["DetrForSegmentation",qa]],["maskformer",["MaskFormerForInstanceSegmentation",Dp]]]),n_=new Map([["sam",["SamModel",nm]]]),o_=new Map([["wav2vec2",["Wav2Vec2ForCTC",dm]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Pm]],["unispeech",["UniSpeechForCTC",Mm]],["unispeech-sat",["UniSpeechSatForCTC",vm]],["wavlm",["WavLMForCTC",Am]],["hubert",["HubertForCTC",$m]]]),i_=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",pm]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Cm]],["unispeech",["UniSpeechForSequenceClassification",bm]],["unispeech-sat",["UniSpeechSatForSequenceClassification",xm]],["wavlm",["WavLMForSequenceClassification",Fm]],["hubert",["HubertForSequenceClassification",km]],["audio-spectrogram-transformer",["ASTForAudioClassification",mo]]]),a_=new Map([["wavlm",["WavLMForXVector",Om]]]),l_=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",Tm]],["wavlm",["WavLMForAudioFrameClassification",Dm]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",mm]],["pyannote",["PyAnnoteForAudioFrameClassification",_m]]]),c_=new Map([["vitmatte",["VitMatteForImageMatting",zd]]]),Iv=new Map([["patchtst",["PatchTSTForPrediction",Ch]],["patchtsmixer",["PatchTSMixerForPrediction",$h]]]),u_=new Map([["swin2sr",["Swin2SRForImageSuperResolution",bp]]]),d_=new Map([["dpt",["DPTForDepthEstimation",vp]],["depth_anything",["DepthAnythingForDepthEstimation",Tp]],["glpn",["GLPNForDepthEstimation",zp]],["sapiens",["SapiensForDepthEstimation",Pp]],["depth_pro",["DepthProForDepthEstimation",$p]],["metric3d",["Metric3DForDepthEstimation",Ip]],["metric3dv2",["Metric3Dv2ForDepthEstimation",Fp]]]),p_=new Map([["sapiens",["SapiensForNormalEstimation",Cp]]]),m_=new Map([["vitpose",["VitPoseForPoseEstimation",Ed]]]),h_=new Map([["clip",["CLIPVisionModelWithProjection",bo]],["siglip",["SiglipVisionModel",vo]],["jina_clip",["JinaCLIPVisionModel",_n]]]),__=[[Ev,x.EncoderOnly],[Pv,x.EncoderDecoder],[Sv,x.DecoderOnly],[Cv,x.AutoEncoder],[Hh,x.EncoderOnly],[qh,x.EncoderOnly],[$l,x.Seq2Seq],[Sl,x.Seq2Seq],[kl,x.DecoderOnly],[$v,x.MultiModality],[Qh,x.EncoderOnly],[Xh,x.EncoderOnly],[Il,x.Vision2Seq],[Jh,x.ImageTextToText],[Yh,x.AudioTextToText],[Zh,x.EncoderOnly],[Jn,x.EncoderOnly],[s_,x.EncoderOnly],[r_,x.EncoderOnly],[c_,x.EncoderOnly],[Iv,x.EncoderOnly],[u_,x.EncoderOnly],[d_,x.EncoderOnly],[p_,x.EncoderOnly],[m_,x.EncoderOnly],[e_,x.EncoderOnly],[t_,x.EncoderOnly],[n_,x.MaskGeneration],[o_,x.EncoderOnly],[i_,x.EncoderOnly],[Gh,x.Seq2Seq],[Kh,x.EncoderOnly],[a_,x.EncoderOnly],[l_,x.EncoderOnly],[h_,x.EncoderOnly]];for(const[M,S]of __)for(const[L,oe]of M.values())v.set(L,S),T.set(oe,L),E.set(L,oe);const Av=[["MusicgenForConditionalGeneration",Tl,x.Musicgen],["Phi3VForCausalLM",mn,x.Phi3V],["CLIPTextModelWithProjection",Mo,x.EncoderOnly],["SiglipTextModel",yo,x.EncoderOnly],["JinaCLIPTextModel",To,x.EncoderOnly],["ClapTextModelWithProjection",Ym,x.EncoderOnly],["ClapAudioModelWithProjection",Zm,x.EncoderOnly],["DacEncoderModel",jh,x.EncoderOnly],["DacDecoderModel",Nh,x.EncoderOnly],["MimiEncoderModel",Dh,x.EncoderOnly],["MimiDecoderModel",Lh,x.EncoderOnly],["SnacEncoderModel",Uh,x.EncoderOnly],["SnacDecoderModel",Wh,x.EncoderOnly],["Gemma3nForConditionalGeneration",Ys,x.ImageAudioTextToText]];for(const[M,S,L]of Av)v.set(M,L),T.set(S,M),E.set(M,S);const f_=new Map([["modnet",Jn],["birefnet",Jn],["isnet",Jn],["ben",Jn]]);for(const[M,S]of f_.entries())S.set(M,["PreTrainedModel",G]),v.set(M,x.EncoderOnly),T.set(G,M),E.set(M,G);class Al extends jt{}Y(Al,"MODEL_CLASS_MAPPINGS",__.map(S=>S[0])),Y(Al,"BASE_IF_FAIL",!0);class g_ extends jt{}Y(g_,"MODEL_CLASS_MAPPINGS",[Hh]);class w_ extends jt{}Y(w_,"MODEL_CLASS_MAPPINGS",[qh]);class M_ extends jt{}Y(M_,"MODEL_CLASS_MAPPINGS",[$l]);class b_ extends jt{}Y(b_,"MODEL_CLASS_MAPPINGS",[Sl]);class y_ extends jt{}Y(y_,"MODEL_CLASS_MAPPINGS",[Gh]);class v_ extends jt{}Y(v_,"MODEL_CLASS_MAPPINGS",[Kh]);class x_ extends jt{}Y(x_,"MODEL_CLASS_MAPPINGS",[kl]);class T_ extends jt{}Y(T_,"MODEL_CLASS_MAPPINGS",[Qh]);class E_ extends jt{}Y(E_,"MODEL_CLASS_MAPPINGS",[Xh]);class P_ extends jt{}Y(P_,"MODEL_CLASS_MAPPINGS",[Il]);class C_ extends jt{}Y(C_,"MODEL_CLASS_MAPPINGS",[Zh]);class S_ extends jt{}Y(S_,"MODEL_CLASS_MAPPINGS",[Jn]);class $_ extends jt{}Y($_,"MODEL_CLASS_MAPPINGS",[r_]);class k_ extends jt{}Y(k_,"MODEL_CLASS_MAPPINGS",[s_]);class I_ extends jt{}Y(I_,"MODEL_CLASS_MAPPINGS",[e_]);class A_ extends jt{}Y(A_,"MODEL_CLASS_MAPPINGS",[t_]);class F_ extends jt{}Y(F_,"MODEL_CLASS_MAPPINGS",[n_]);class O_ extends jt{}Y(O_,"MODEL_CLASS_MAPPINGS",[o_]);class D_ extends jt{}Y(D_,"MODEL_CLASS_MAPPINGS",[i_]);class L_ extends jt{}Y(L_,"MODEL_CLASS_MAPPINGS",[a_]);class z_ extends jt{}Y(z_,"MODEL_CLASS_MAPPINGS",[l_]);class B_ extends jt{}Y(B_,"MODEL_CLASS_MAPPINGS",[kv]);class R_ extends jt{}Y(R_,"MODEL_CLASS_MAPPINGS",[c_]);class j_ extends jt{}Y(j_,"MODEL_CLASS_MAPPINGS",[u_]);class N_ extends jt{}Y(N_,"MODEL_CLASS_MAPPINGS",[d_]);class V_ extends jt{}Y(V_,"MODEL_CLASS_MAPPINGS",[p_]);class U_ extends jt{}Y(U_,"MODEL_CLASS_MAPPINGS",[m_]);class W_ extends jt{}Y(W_,"MODEL_CLASS_MAPPINGS",[h_]);class G_ extends jt{}Y(G_,"MODEL_CLASS_MAPPINGS",[Jh]);class K_ extends jt{}Y(K_,"MODEL_CLASS_MAPPINGS",[Yh]);class Fv extends ye{constructor({logits:S,past_key_values:L,encoder_outputs:oe,decoder_attentions:ge=null,cross_attentions:_e=null}){super(),this.logits=S,this.past_key_values=L,this.encoder_outputs=oe,this.decoder_attentions=ge,this.cross_attentions=_e}}class Et extends ye{constructor({logits:S,...L}){super(),this.logits=S;const oe=Object.values(L);oe.length>0&&(this.attentions=oe)}}class H_ extends ye{constructor({logits:S,embeddings:L}){super(),this.logits=S,this.embeddings=L}}class xr extends ye{constructor({logits:S}){super(),this.logits=S}}class Ar extends ye{constructor({logits:S}){super(),this.logits=S}}class Rr extends ye{constructor({start_logits:S,end_logits:L}){super(),this.start_logits=S,this.end_logits=L}}class bn extends ye{constructor({logits:S}){super(),this.logits=S}}class Ov extends ye{constructor({logits:S,past_key_values:L}){super(),this.logits=S,this.past_key_values=L}}class q_ extends ye{constructor({alphas:S}){super(),this.alphas=S}}class Q_ extends ye{constructor({waveform:S,spectrogram:L}){super(),this.waveform=S,this.spectrogram=L}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var o=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,c=(0,o.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=c,this.window=(0,o.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(a,l){return(0,o.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:l,transpose:!0})}async _call(a){(0,s.validate_audio_inputs)(a,"ASTFeatureExtractor");const l=await this._extract_fbank_features(a,this.config.max_length);if(this.config.do_normalize){const c=this.std*2,m=l.data;for(let d=0;d<m.length;++d)m[d]=(m[d]-this.mean)/c}return{input_values:l.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoFeatureExtractor:()=>i});var s=t("./src/utils/constants.js"),o=t("./src/utils/hub.js");t("./src/base/feature_extraction_utils.js");var n=t("./src/models/feature_extractors.js");class i{static async from_pretrained(l,c={}){const m=await(0,o.getModelJSON)(l,s.FEATURE_EXTRACTOR_NAME,!0,c),d=m.feature_extractor_type,u=n[d];if(!u)throw new Error(`Unknown feature_extractor_type: '${d}'. Please report this at ${s.GITHUB_ISSUE_URL}.`);return new u(m)}}},"./src/models/auto/image_processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoImageProcessor:()=>a});var s=t("./src/utils/constants.js"),o=t("./src/utils/hub.js"),n=t("./src/base/image_processors_utils.js"),i=t("./src/models/image_processors.js");class a{static async from_pretrained(c,m={}){const d=await(0,o.getModelJSON)(c,s.IMAGE_PROCESSOR_NAME,!0,m),u=d.image_processor_type??d.feature_extractor_type;let g=i[u==null?void 0:u.replace(/Fast$/,"")];return g||(u!==void 0&&console.warn(`Image processor type '${u}' not found, assuming base ImageProcessor. Please report this at ${s.GITHUB_ISSUE_URL}.`),g=n.ImageProcessor),new g(d)}}},"./src/models/auto/processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoProcessor:()=>c});var s=t("./src/utils/constants.js"),o=t("./src/utils/hub.js"),n=t("./src/base/processing_utils.js"),i=t("./src/models/processors.js"),a=t("./src/models/image_processors.js"),l=t("./src/models/feature_extractors.js");class c{static async from_pretrained(d,u={}){const g=await(0,o.getModelJSON)(d,s.IMAGE_PROCESSOR_NAME,!0,u),{image_processor_type:f,feature_extractor_type:y,processor_class:I}=g;if(I&&i[I])return i[I].from_pretrained(d,u);if(!f&&!y)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const w={};if(f){const k=a[f.replace(/Fast$/,"")];if(!k)throw new Error(`Unknown image_processor_type: '${f}'.`);w.image_processor=new k(g)}if(y){const k=a[y];if(k)w.image_processor=new k(g);else{const x=l[y];if(!x)throw new Error(`Unknown feature_extractor_type: '${y}'.`);w.feature_extractor=new x(g)}}const b={};return new n.Processor(b,w,null)}}},"./src/models/beit/image_processing_beit.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(e,r,t)=>{t.r(r),t.d(r,{BitImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(e,r,t)=>{t.r(r),t.d(r,{ChineseCLIPFeatureExtractor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(e,r,t)=>{t.r(r),t.d(r,{ClapFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var o=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(a){super(a),this.mel_filters=(0,o.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,o.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,o.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(a,l,c,m){let d;const u=a.length-l;if(u>0)if(c==="rand_trunc"){const g=Math.floor(Math.random()*(u+1));a=a.subarray(g,g+l),d=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${c}" not implemented`);else{if(u<0){let g=new Float64Array(l);if(g.set(a),m==="repeat")for(let f=a.length;f<l;f+=a.length)g.set(a.subarray(0,Math.min(a.length,l-f)),f);else if(m==="repeatpad")for(let f=a.length;f<-u;f+=a.length)g.set(a,f);a=g}if(c==="fusion")throw new Error(`Truncation strategy "${c}" not implemented`);d=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}return d.unsqueeze_(0)}async _extract_fbank_features(a,l,c=null){return(0,o.spectrogram)(a,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:l,log_mel:"dB",max_num_frames:c,do_pad:!1,transpose:!0})}async _call(a,{max_length:l=null}={}){return(0,s.validate_audio_inputs)(a,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(a,l??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(e,r,t)=>{t.r(r),t.d(r,{CLIPFeatureExtractor:()=>n,CLIPImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/convnext/image_processing_convnext.js":(e,r,t)=>{t.r(r),t.d(r,{ConvNextFeatureExtractor:()=>n,ConvNextImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{constructor(a){super(a),this.crop_pct=this.config.crop_pct??224/256}async resize(a){var c;const l=(c=this.size)==null?void 0:c.shortest_edge;if(l===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(l<384){const m=Math.floor(l/this.crop_pct),[d,u]=this.get_resize_output_image_size(a,{shortest_edge:m});a=await a.resize(d,u,{resample:this.resample}),a=await a.center_crop(l,l)}else a=await a.resize(l,l,{resample:this.resample});return a}}class n extends o{}},"./src/models/dac/feature_extraction_dac.js":(e,r,t)=>{t.r(r),t.d(r,{DacFeatureExtractor:()=>o});var s=t("./src/models/encodec/feature_extraction_encodec.js");class o extends s.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":(e,r,t)=>{t.r(r),t.d(r,{DeiTFeatureExtractor:()=>n,DeiTImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/detr/image_processing_detr.js":(e,r,t)=>{t.r(r),t.d(r,{DetrFeatureExtractor:()=>i,DetrImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(l){const c=await super._call(l),m=[c.pixel_values.dims[0],64,64],d=(0,o.full)(m,1n);return{...c,pixel_mask:d}}post_process_object_detection(...l){return(0,s.post_process_object_detection)(...l)}post_process_panoptic_segmentation(...l){return(0,s.post_process_panoptic_segmentation)(...l)}post_process_instance_segmentation(...l){return(0,s.post_process_instance_segmentation)(...l)}}class i extends n{}},"./src/models/dinov3_vit/image_processing_dinov3_vit.js":(e,r,t)=>{t.r(r),t.d(r,{DINOv3ViTImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}},"./src/models/donut/image_processing_donut.js":(e,r,t)=>{t.r(r),t.d(r,{DonutFeatureExtractor:()=>n,DonutImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{pad_image(a,l,c,m={}){const[d,u,g]=l;let f=this.image_mean;Array.isArray(this.image_mean)||(f=new Array(g).fill(f));let y=this.image_std;Array.isArray(y)||(y=new Array(g).fill(f));const I=f.map((w,b)=>-w/y[b]);return super.pad_image(a,l,c,{center:!0,constant_values:I,...m})}}class n extends o{}},"./src/models/dpt/image_processing_dpt.js":(e,r,t)=>{t.r(r),t.d(r,{DPTFeatureExtractor:()=>n,DPTImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/efficientnet/image_processing_efficientnet.js":(e,r,t)=>{t.r(r),t.d(r,{EfficientNetImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{constructor(i){super(i),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(a=>a*a))}}},"./src/models/encodec/feature_extraction_encodec.js":(e,r,t)=>{t.r(r),t.d(r,{EncodecFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),o=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{async _call(a){(0,s.validate_audio_inputs)(a,"EncodecFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=this.config.feature_size;if(a.length%l!==0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${l}).`);const c=[1,l,a.length/l];return{input_values:new o.Tensor("float32",a,c)}}}},"./src/models/feature_extractors.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>s.ASTFeatureExtractor,ClapFeatureExtractor:()=>n.ClapFeatureExtractor,DacFeatureExtractor:()=>i.DacFeatureExtractor,EncodecFeatureExtractor:()=>o.EncodecFeatureExtractor,Gemma3nAudioFeatureExtractor:()=>a.Gemma3nAudioFeatureExtractor,ImageFeatureExtractor:()=>I.ImageProcessor,MoonshineFeatureExtractor:()=>l.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>c.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>m.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>d.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>u.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>g.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>f.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>y.WhisperFeatureExtractor});var s=t("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),o=t("./src/models/encodec/feature_extraction_encodec.js"),n=t("./src/models/clap/feature_extraction_clap.js"),i=t("./src/models/dac/feature_extraction_dac.js"),a=t("./src/models/gemma3n/feature_extraction_gemma3n.js"),l=t("./src/models/moonshine/feature_extraction_moonshine.js"),c=t("./src/models/pyannote/feature_extraction_pyannote.js"),m=t("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),d=t("./src/models/snac/feature_extraction_snac.js"),u=t("./src/models/speecht5/feature_extraction_speecht5.js"),g=t("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),f=t("./src/models/wespeaker/feature_extraction_wespeaker.js"),y=t("./src/models/whisper/feature_extraction_whisper.js"),I=t("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>i});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class i extends s.Processor{constructor(l,c,m){super(l,c,m);const{tasks_answer_post_processing_type:d,task_prompts_without_inputs:u,task_prompts_with_input:g}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(d??{})),this.task_prompts_without_inputs=new Map(Object.entries(u??{})),this.task_prompts_with_input=new Map(Object.entries(g??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(l){typeof l=="string"&&(l=[l]);const c=[];for(const m of l)if(this.task_prompts_without_inputs.has(m))c.push(this.task_prompts_without_inputs.get(m));else{for(const[d,u]of this.task_prompts_with_input)if(m.includes(d)){c.push(u.replaceAll("{input}",m).replaceAll(d,""));break}c.length!==l.length&&c.push(m)}return c}post_process_generation(l,c,m){const d=this.tasks_answer_post_processing_type.get(c)??"pure_text";l=l.replaceAll("<s>","").replaceAll("</s>","");let u;switch(d){case"pure_text":u=l;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const g=d==="ocr"?"quad_boxes":"bboxes",f=l.matchAll(this.regexes[g]),y=[],I=[];for(const[w,b,...k]of f)y.push(b?b.trim():y.at(-1)??""),I.push(k.map((x,v)=>(Number(x)+.5)/this.size_per_bin*m[v%2]));u={labels:y,[g]:I};break;default:throw new Error(`Task "${c}" (of type "${d}") not yet implemented.`)}return{[c]:u}}async _call(l,c=null,m={}){if(!l&&!c)throw new Error("Either text or images must be provided");const d=await this.image_processor(l,m),u=c?this.tokenizer(this.construct_prompts(c),m):{};return{...d,...u}}}Y(i,"tokenizer_class",n.AutoTokenizer),Y(i,"image_processor_class",o.AutoImageProcessor)},"./src/models/gemma3n/feature_extraction_gemma3n.js":(e,r,t)=>{t.r(r),t.d(r,{Gemma3nAudioFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),o=t("./src/utils/tensor.js"),n=t("./src/utils/audio.js");class i extends s.FeatureExtractor{constructor(l){super(l);const{fft_length:c,feature_size:m,min_frequency:d,max_frequency:u,sampling_rate:g,frame_length:f}=this.config,y=(0,n.mel_filter_bank)(Math.floor(1+c/2),m,d,u,g,null,"htk",!1);this.mel_filters=y,this.window=(0,n.window_function)(f,"hann")}async _extract_fbank_features(l,c){return(0,n.spectrogram)(l,this.window,this.config.frame_length,this.config.hop_length,{fft_length:this.config.fft_length,center:!1,onesided:!0,preemphasis:this.config.preemphasis,preemphasis_htk_flavor:this.config.preemphasis_htk_flavor,mel_filters:this.mel_filters,log_mel:"log",mel_floor:this.config.mel_floor,remove_dc_offset:!1,transpose:!0})}async _call(l,{max_length:c=48e4,truncation:m=!0,padding:d=!0,pad_to_multiple_of:u=128}={}){if((0,s.validate_audio_inputs)(l,"Gemma3nAudioFeatureExtractor"),m&&l.length>c&&(l=l.slice(0,c)),d&&l.length%u!==0){const y=u-l.length%u,I=new Float64Array(l.length+y);I.set(l),this.config.padding_value!==0&&I.fill(this.config.padding_value,l.length),l=I}const g=await this._extract_fbank_features(l,this.config.max_length),f=(0,o.full)([1,g.dims[0]],!0);return{input_features:g.unsqueeze_(0),input_features_mask:f}}}},"./src/models/gemma3n/processing_gemma3n.js":(e,r,t)=>{t.r(r),t.d(r,{Gemma3nProcessor:()=>a});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/tokenizers.js");t("./src/utils/image.js"),t("./src/utils/audio.js");class a extends s.Processor{constructor(c,m,d){super(c,m,d),this.audio_seq_length=this.config.audio_seq_length,this.image_seq_length=this.config.image_seq_length;const{audio_token_id:u,boa_token:g,audio_token:f,eoa_token:y,image_token_id:I,boi_token:w,image_token:b,eoi_token:k}=this.tokenizer.config;this.audio_token_id=u,this.boa_token=g,this.audio_token=f;const x=f.repeat(this.audio_seq_length);this.full_audio_sequence=`

${g}${x}${y}

`,this.image_token_id=I,this.boi_token=w,this.image_token=b;const v=b.repeat(this.image_seq_length);this.full_image_sequence=`

${w}${v}${k}

`}async _call(c,m=null,d=null,u={}){typeof c=="string"&&(c=[c]);let g;d&&(g=await this.feature_extractor(d,u),c=c.map(I=>I.replaceAll(this.audio_token,this.full_audio_sequence)));let f;return m&&(f=await this.image_processor(m,u),c=c.map(I=>I.replaceAll(this.image_token,this.full_image_sequence))),{...this.tokenizer(c,u),...f,...g}}}Y(a,"image_processor_class",o.AutoImageProcessor),Y(a,"feature_extractor_class",n.AutoFeatureExtractor),Y(a,"tokenizer_class",i.AutoTokenizer),Y(a,"uses_processor_config",!0),Y(a,"uses_chat_template_file",!0)},"./src/models/glpn/image_processing_glpn.js":(e,r,t)=>{t.r(r),t.d(r,{GLPNFeatureExtractor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(a){const l=await super._call(a),c=l.pixel_values.dims,m=(0,o.ones)([c[0],c[2],c[3]]);return{...l,pixel_mask:m}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoProcessor:()=>l});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/base/image_processors_utils.js");function a(c,m){const u=c.dims.at(-1)-1,g=c.tolist();g.fill(!1,0,1),g.fill(!1,u);const f=m.tolist();return g.map((y,I)=>y?I:null).filter(y=>y!==null).map(y=>f[y])}class l extends s.Processor{async _call(m,d,u={}){const g=m?await this.image_processor(m,u):{};return{...d?this.tokenizer(d,u):{},...g}}post_process_grounded_object_detection(m,d,{box_threshold:u=.25,text_threshold:g=.25,target_sizes:f=null}={}){const{logits:y,pred_boxes:I}=m,w=y.dims[0];if(f!==null&&f.length!==w)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const b=y.dims.at(1),k=y.sigmoid(),x=k.max(-1).tolist(),v=I.tolist().map(T=>T.map(C=>(0,i.center_to_corners_format)(C))),E=[];for(let T=0;T<w;++T){const C=f!==null?f[T]:null;C!==null&&(v[T]=v[T].map(R=>R.map((re,q)=>re*C[(q+1)%2])));const D=x[T],z=[],K=[],H=[];for(let R=0;R<b;++R){const re=D[R];if(re<=u)continue;const q=v[T][R],te=k[T][R];z.push(re),H.push(q);const ee=a(te.gt(g),d[T]);K.push(ee)}E.push({scores:z,boxes:H,labels:this.batch_decode(K)})}return E}}Y(l,"tokenizer_class",n.AutoTokenizer),Y(l,"image_processor_class",o.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");class n extends s.ImageProcessor{constructor(a){super(a),this.do_image_splitting=a.do_image_splitting??!0,this.max_image_size=a.max_image_size}get_resize_for_vision_encoder(a,l){let[c,m]=a.dims.slice(-2);const d=m/c;return m>=c?(m=Math.ceil(m/l)*l,c=Math.floor(m/d),c=Math.ceil(c/l)*l):(c=Math.ceil(c/l)*l,m=Math.floor(c*d),m=Math.ceil(m/l)*l),{height:c,width:m}}async _call(a,{do_image_splitting:l=null,return_row_col_info:c=!1}={}){let m;if(!Array.isArray(a))m=[[a]];else{if(a.length===0||!a[0])throw new Error("No images provided.");Array.isArray(a[0])?m=a:m=[a]}let d=[],u=[],g=[];const f=[],y=[];for(const T of m){let C=await Promise.all(T.map(K=>this.preprocess(K)));f.push(...C.map(K=>K.original_size)),y.push(...C.map(K=>K.reshaped_input_size)),C.forEach(K=>K.pixel_values.unsqueeze_(0));const{longest_edge:D}=this.max_image_size;let z;if(l??this.do_image_splitting){let K=new Array(C.length),H=new Array(C.length);z=await Promise.all(C.map(async(R,re)=>{const q=this.get_resize_for_vision_encoder(R.pixel_values,D),te=await(0,o.interpolate_4d)(R.pixel_values,{size:[q.height,q.width]}),{frames:ee,num_splits_h:ie,num_splits_w:he}=await this.split_image(te,this.max_image_size);return K[re]=ie,H[re]=he,(0,o.cat)(ee,0)})),u.push(K),g.push(H)}else{const K=[D,D];z=await Promise.all(C.map(H=>(0,o.interpolate_4d)(H.pixel_values,{size:K}))),u.push(new Array(C.length).fill(0)),g.push(new Array(C.length).fill(0))}d.push((0,o.cat)(z,0))}const I=d.length,[w,b,k,x]=d[0].dims;let v,E;if(I===1)v=d[0].unsqueeze_(0),E=(0,o.full)([I,w,k,x],!0);else{const T=Math.max(...d.map(z=>z.dims.at(0)));E=(0,o.full)([I,T,k,x],!0);const C=E.data,D=T*k*x;for(let z=0;z<I;++z){const K=d[z].dims[0];if(K<T){d[z]=(0,o.cat)([d[z],(0,o.full)([T-K,b,k,x],0)],0);const H=z*D+K*k*x,R=(z+1)*D;C.fill(!1,H,R)}}v=(0,o.stack)(d,0)}return{pixel_values:v,pixel_attention_mask:E,original_sizes:f,reshaped_input_sizes:y,...c?{rows:u,cols:g}:{}}}async split_image(a,{longest_edge:l}){const c=l,m=l,d=[],[u,g]=a.dims.slice(-2);let f=0,y=0;if(u>c||g>m){f=Math.ceil(u/c),y=Math.ceil(g/m);const I=Math.ceil(u/f),w=Math.ceil(g/y);for(let x=0;x<f;++x)for(let v=0;v<y;++v){let E,T,C,D;x===f-1?(T=u-I,D=u):(T=x*I,D=(x+1)*I),v===y-1?(E=g-w,C=g):(E=v*w,C=(v+1)*w);const z=[T,E],K=[D,C],H=await(0,o.slice)(a,z,K,[2,3]);d.push(H)}const b=c,k=m;(u!==b||g!==k)&&(a=await(0,o.interpolate_4d)(a,{size:[b,k]}))}return d.push(a),{frames:d,num_splits_h:f,num_splits_w:y}}}},"./src/models/idefics3/processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3Processor:()=>m});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");var i=t("./src/utils/core.js");function a(d,u,g,f,y,I){let w="";for(let b=0;b<u;++b){for(let k=0;k<g;++k)w+=f+`<row_${b+1}_col_${k+1}>`+y.repeat(d);w+=`
`}return w+=`
${f}${I}`+y.repeat(d)+`${f}`,w}function l(d,u,g,f){return`${u}${f}`+g.repeat(d)+`${u}`}function c(d,u,g,f,y,I){return d===0&&u===0?l(g,f,y,I):a(g,d,u,f,y,I)}class m extends s.Processor{constructor(){super(...arguments);Y(this,"fake_image_token","<fake_token_around_image>");Y(this,"image_token","<image>");Y(this,"global_img_token","<global-img>")}async _call(g,f=null,y={}){y.return_row_col_info??(y.return_row_col_info=!0);let I;f&&(I=await this.image_processor(f,y)),Array.isArray(g)||(g=[g]);const w=I.rows??[new Array(g.length).fill(0)],b=I.cols??[new Array(g.length).fill(0)],k=this.config.image_seq_len,x=[],v=[];for(let T=0;T<g.length;++T){const C=g[T],D=w[T],z=b[T];x.push((0,i.count)(C,this.image_token));const K=D.map((re,q)=>c(re,z[q],k,this.fake_image_token,this.image_token,this.global_img_token)),H=C.split(this.image_token);if(H.length===0)throw new Error("The image token should be present in the text.");let R=H[0];for(let re=0;re<K.length;++re)R+=K[re]+H[re+1];v.push(R)}return{...this.tokenizer(v),...I}}}Y(m,"image_processor_class",o.AutoImageProcessor),Y(m,"tokenizer_class",n.AutoTokenizer),Y(m,"uses_processor_config",!0)},"./src/models/image_processors.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>s.BeitFeatureExtractor,BitImageProcessor:()=>o.BitImageProcessor,CLIPFeatureExtractor:()=>i.CLIPFeatureExtractor,CLIPImageProcessor:()=>i.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>n.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>a.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>a.ConvNextImageProcessor,DINOv3ViTImageProcessor:()=>m.DINOv3ViTImageProcessor,DPTFeatureExtractor:()=>u.DPTFeatureExtractor,DPTImageProcessor:()=>u.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>c.DetrFeatureExtractor,DetrImageProcessor:()=>c.DetrImageProcessor,DonutFeatureExtractor:()=>d.DonutFeatureExtractor,DonutImageProcessor:()=>d.DonutImageProcessor,EfficientNetImageProcessor:()=>g.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>f.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>y.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>I.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>b.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>k.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>x.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>v.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>v.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>E.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>E.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>T.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>T.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>C.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>C.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>D.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>D.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>z.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>z.MobileViTImageProcessor,NougatImageProcessor:()=>K.NougatImageProcessor,OwlViTFeatureExtractor:()=>R.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>R.OwlViTImageProcessor,Owlv2ImageProcessor:()=>H.Owlv2ImageProcessor,Phi3VImageProcessor:()=>re.Phi3VImageProcessor,PvtImageProcessor:()=>q.PvtImageProcessor,Qwen2VLImageProcessor:()=>te.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>ee.RTDetrImageProcessor,SamImageProcessor:()=>ie.SamImageProcessor,SegformerFeatureExtractor:()=>he.SegformerFeatureExtractor,SegformerImageProcessor:()=>he.SegformerImageProcessor,SiglipImageProcessor:()=>de.SiglipImageProcessor,SmolVLMImageProcessor:()=>N.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>O.Swin2SRImageProcessor,VLMImageProcessor:()=>w.VLMImageProcessor,ViTFeatureExtractor:()=>W.ViTFeatureExtractor,ViTImageProcessor:()=>W.ViTImageProcessor,VitMatteImageProcessor:()=>ne.VitMatteImageProcessor,VitPoseImageProcessor:()=>fe.VitPoseImageProcessor,YolosFeatureExtractor:()=>ae.YolosFeatureExtractor,YolosImageProcessor:()=>ae.YolosImageProcessor});var s=t("./src/models/beit/image_processing_beit.js"),o=t("./src/models/bit/image_processing_bit.js"),n=t("./src/models/chinese_clip/image_processing_chinese_clip.js"),i=t("./src/models/clip/image_processing_clip.js"),a=t("./src/models/convnext/image_processing_convnext.js"),l=t("./src/models/deit/image_processing_deit.js"),c=t("./src/models/detr/image_processing_detr.js"),m=t("./src/models/dinov3_vit/image_processing_dinov3_vit.js"),d=t("./src/models/donut/image_processing_donut.js"),u=t("./src/models/dpt/image_processing_dpt.js"),g=t("./src/models/efficientnet/image_processing_efficientnet.js"),f=t("./src/models/glpn/image_processing_glpn.js"),y=t("./src/models/grounding_dino/image_processing_grounding_dino.js"),I=t("./src/models/idefics3/image_processing_idefics3.js"),w=t("./src/models/janus/image_processing_janus.js"),b=t("./src/models/jina_clip/image_processing_jina_clip.js"),k=t("./src/models/llava_onevision/image_processing_llava_onevision.js"),x=t("./src/models/mask2former/image_processing_mask2former.js"),v=t("./src/models/maskformer/image_processing_maskformer.js"),E=t("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),T=t("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),C=t("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),D=t("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),z=t("./src/models/mobilevit/image_processing_mobilevit.js"),K=t("./src/models/nougat/image_processing_nougat.js"),H=t("./src/models/owlv2/image_processing_owlv2.js"),R=t("./src/models/owlvit/image_processing_owlvit.js"),re=t("./src/models/phi3_v/image_processing_phi3_v.js"),q=t("./src/models/pvt/image_processing_pvt.js"),te=t("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),ee=t("./src/models/rt_detr/image_processing_rt_detr.js"),ie=t("./src/models/sam/image_processing_sam.js"),he=t("./src/models/segformer/image_processing_segformer.js"),de=t("./src/models/siglip/image_processing_siglip.js"),N=t("./src/models/smolvlm/image_processing_smolvlm.js"),O=t("./src/models/swin2sr/image_processing_swin2sr.js"),W=t("./src/models/vit/image_processing_vit.js"),ne=t("./src/models/vitmatte/image_processing_vitmatte.js"),fe=t("./src/models/vitpose/image_processing_vitpose.js"),ae=t("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLMImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{constructor(i){super({do_pad:!0,pad_size:{width:i.image_size,height:i.image_size},...i}),this.constant_values=this.config.background_color.map(a=>a*this.rescale_factor)}pad_image(i,a,l,c){return super.pad_image(i,a,l,{constant_values:this.constant_values,center:!0,...c})}}},"./src/models/janus/processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLChatProcessor:()=>c});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/utils/core.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/image.js");class c extends s.Processor{constructor(d,u,g){super(d,u,g),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(d,{images:u=null,chat_template:g="default"}={}){u?Array.isArray(u)||(u=[u]):u=await Promise.all(d.filter(z=>z.images).flatMap(z=>z.images).map(z=>l.RawImage.read(z)));const f=this.tokenizer,y=f.apply_chat_template(d,{tokenize:!1,add_generation_prompt:!0,chat_template:g}),I=z=>f.encode(z,{add_special_tokens:!1}),w=y.split(this.image_tag),b=w.length-1;if(u.length!==b)throw new Error(`Number of images provided (${u.length}) does not match number of "${this.image_tag}" image tags (${b})`);const[k,x,v]=f.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let E=I(w[0]),T=new Array(E.length).fill(!1);for(let z=1;z<w.length;++z){const K=new Array(this.num_image_tokens).fill(k),H=I(w[z]);E=(0,i.mergeArrays)(E,[x],K,[v],H);const R=new Array(this.num_image_tokens).fill(!0);T=(0,i.mergeArrays)(T,[!1],R,[!1],new Array(H.length).fill(!1))}const C=[1,E.length],D={input_ids:new a.Tensor("int64",E,C),attention_mask:new a.Tensor("int64",new Array(E.length).fill(1),C),images_seq_mask:new a.Tensor("bool",T,C),images_emb_mask:new a.Tensor("bool",new Array(b*this.num_image_tokens).fill(!0),[1,b,this.num_image_tokens])};if(u&&u.length>0){const z=await this.image_processor(u);return z.pixel_values.unsqueeze_(0),{...D,...z}}return D}}Y(c,"image_processor_class",o.AutoImageProcessor),Y(c,"tokenizer_class",n.AutoTokenizer),Y(c,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{constructor(i){const{resize_mode:a,fill_color:l,interpolation:c,size:m,...d}=i,u=a==="squash"?{width:m,height:m}:a==="shortest"?{shortest_edge:m}:{longest_edge:m},g=c==="bicubic"?3:2;super({...d,size:u,resample:g,do_center_crop:!0,crop_size:m,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPProcessor:()=>i});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class i extends s.Processor{async _call(l=null,c=null,m={}){if(!l&&!c)throw new Error("Either text or images must be provided");const d=l?this.tokenizer(l,m):{},u=c?await this.image_processor(c,m):{};return{...d,...u}}}Y(i,"tokenizer_class",n.AutoTokenizer),Y(i,"image_processor_class",o.AutoImageProcessor)},"./src/models/llava/processing_llava.js":(e,r,t)=>{t.r(r),t.d(r,{LlavaProcessor:()=>i});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class i extends s.Processor{async _call(l,c=null,m={}){const d=await this.image_processor(l,m);if(c){const[g,f]=d.pixel_values.dims.slice(-2),{image_token:y,patch_size:I,num_additional_image_tokens:w}=this.config,b=Math.floor(g/I)*Math.floor(f/I)+w;c=structuredClone(c),Array.isArray(c)||(c=[c]);for(let k=0;k<c.length;++k)c[k]=c[k].replace(y,y.repeat(b))}const u=c?this.tokenizer(c,m):{};return{...d,...u}}}Y(i,"tokenizer_class",n.AutoTokenizer),Y(i,"image_processor_class",o.AutoImageProcessor),Y(i,"uses_processor_config",!0)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(e,r,t)=>{t.r(r),t.d(r,{LlavaOnevisionImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(e,r,t)=>{t.r(r),t.d(r,{Mask2FormerImageProcessor:()=>o});var s=t("./src/models/maskformer/image_processing_maskformer.js");class o extends s.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(e,r,t)=>{t.r(r),t.d(r,{MaskFormerFeatureExtractor:()=>n,MaskFormerImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{post_process_panoptic_segmentation(...a){return(0,s.post_process_panoptic_segmentation)(...a)}post_process_instance_segmentation(...a){return(0,s.post_process_instance_segmentation)(...a)}}class n extends o{}},"./src/models/mgp_str/processing_mgp_str.js":(e,r,t)=>{t.r(r),t.d(r,{MgpstrProcessor:()=>l});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/utils/maths.js");const a={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class l extends s.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(m,d){if(!a.hasOwnProperty(d))throw new Error(`Format ${d} is not supported.`);const[u,g]=a[d],f=this[u].bind(this),[y,I]=m.dims,w=[],b=[],k=m.tolist();for(let v=0;v<y;++v){const E=k[v],T=[],C=[];for(let z=1;z<I;++z){const[K,H]=(0,i.max)((0,i.softmax)(E[z]));if(C.push(K),H==g)break;T.push(H)}const D=C.length>0?C.reduce((z,K)=>z*K,1):0;b.push(T),w.push(D)}return[f(b),w]}char_decode(m){return this.char_tokenizer.batch_decode(m).map(d=>d.replaceAll(" ",""))}bpe_decode(m){return this.bpe_tokenizer.batch_decode(m)}wp_decode(m){return this.wp_tokenizer.batch_decode(m).map(d=>d.replaceAll(" ",""))}batch_decode([m,d,u]){const[g,f]=this._decode_helper(m,"char"),[y,I]=this._decode_helper(d,"bpe"),[w,b]=this._decode_helper(u,"wp"),k=[],x=[];for(let v=0;v<g.length;++v){const[E,T]=(0,i.max)([f[v],I[v],b[v]]);k.push([g[v],y[v],w[v]][T]),x.push(E)}return{generated_text:k,scores:x,char_preds:g,bpe_preds:y,wp_preds:w}}static async from_pretrained(...m){const d=await super.from_pretrained(...m),u=await n.AutoTokenizer.from_pretrained("Xenova/gpt2"),g=await n.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return d.components={image_processor:d.image_processor,char_tokenizer:d.tokenizer,bpe_tokenizer:u,wp_tokenizer:g},d}async _call(m,d=null){const u=await this.image_processor(m);return d&&(u.labels=this.tokenizer(d).input_ids),u}}Y(l,"tokenizer_class",n.AutoTokenizer),Y(l,"image_processor_class",o.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV1FeatureExtractor:()=>n,MobileNetV1ImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV2FeatureExtractor:()=>n,MobileNetV2ImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV3FeatureExtractor:()=>n,MobileNetV3ImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV4FeatureExtractor:()=>n,MobileNetV4ImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/mobilevit/image_processing_mobilevit.js":(e,r,t)=>{t.r(r),t.d(r,{MobileViTFeatureExtractor:()=>n,MobileViTImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/moonshine/feature_extraction_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),o=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{async _call(a){(0,s.validate_audio_inputs)(a,"MoonshineFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=[1,a.length];return{input_values:new o.Tensor("float32",a,l)}}}},"./src/models/moonshine/processing_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineProcessor:()=>i});var s=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l){return await this.feature_extractor(l)}}Y(i,"tokenizer_class",o.AutoTokenizer),Y(i,"feature_extractor_class",s.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(e,r,t)=>{t.r(r),t.d(r,{NougatImageProcessor:()=>o});var s=t("./src/models/donut/image_processing_donut.js");class o extends s.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(e,r,t)=>{t.r(r),t.d(r,{Owlv2ImageProcessor:()=>o});var s=t("./src/models/owlvit/image_processing_owlvit.js");class o extends s.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTFeatureExtractor:()=>n,OwlViTImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{post_process_object_detection(...a){return(0,s.post_process_object_detection)(...a)}}class n extends o{}},"./src/models/owlvit/processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTProcessor:()=>i});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class i extends s.Processor{}Y(i,"tokenizer_class",n.AutoTokenizer),Y(i,"image_processor_class",o.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(e,r,t)=>{t.r(r),t.d(r,{PaliGemmaProcessor:()=>l});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");const i="<image>";function a(c,m,d,u,g){return`${u.repeat(d*g)}${m}${c}
`}class l extends s.Processor{async _call(m,d=null,u={}){d||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),d=""),Array.isArray(m)||(m=[m]),Array.isArray(d)||(d=[d]);const g=this.tokenizer.bos_token,f=this.image_processor.config.image_seq_length;let y;d.some(b=>b.includes(i))?y=d.map(b=>{const k=b.replaceAll(i,i.repeat(f)),x=k.lastIndexOf(i),v=x===-1?0:x+i.length;return k.slice(0,v)+g+k.slice(v)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),y=d.map(b=>a(b,g,f,i,m.length)));const I=this.tokenizer(y,u);return{...await this.image_processor(m,u),...I}}}Y(l,"tokenizer_class",n.AutoTokenizer),Y(l,"image_processor_class",o.AutoImageProcessor),Y(l,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VImageProcessor:()=>m});var s=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");const n=336,i=[2,3],{ceil:a,floor:l,sqrt:c}=Math;class m extends s.ImageProcessor{constructor(u){super({...u,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=u.num_crops}calc_num_image_tokens_from_image_size(u,g){const{num_img_tokens:f}=this.config;return l((l(g/n)*l(u/n)+1)*f+1+(l(g/n)+1)*c(f))}get_resize_output_image_size(u,g){const f=this._num_crops,[y,I]=u.size;let w=y/I,b=1;for(;b*Math.ceil(b/w)<=f;)b+=1;b-=1;const k=Math.floor(b*336),x=Math.floor(k/w);return[k,x]}pad_image(u,g,f,y={}){const[I,w]=g,b=n*a(I/n),k=n*a(w/n),x=[1,1,1].map((v,E)=>(v-this.image_mean[E])/this.image_std[E]);return super.pad_image(u,g,{width:k,height:b},{center:!0,constant_values:x,...y})}async _call(u,{num_crops:g=null}={}){if(this._num_crops=g??(g=this.config.num_crops),g<4||c(g)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(u)||(u=[u]);const f=u.length,y=await Promise.all(u.map(T=>this.preprocess(T))),I=y.map(T=>T.original_size),w=y.map(T=>T.reshaped_input_size),b=[];for(const{pixel_values:T}of y){T.unsqueeze_(0);const[C,D]=T.dims.slice(-2),z=await(0,o.interpolate_4d)(T,{size:[n,n],mode:"bicubic"});if(g>0){const K=[],H=c(g),R=l(D/H),re=l(C/H);for(let te=0;te<H;++te)for(let ee=0;ee<H;++ee){let ie,he,de,N;te===H-1?(he=C-re,N=C):(he=te*re,N=(te+1)*re),ee===H-1?(ie=D-R,de=D):(ie=ee*R,de=(ee+1)*R);const O=[he,ie],W=[N,de],ne=await(0,o.slice)(T,O,W,i);K.push(ne)}const q=await(0,o.interpolate_4d)((0,o.cat)(K,0),{size:[n,n],mode:"bicubic"});b.push((0,o.cat)([z,q],0))}else b.push(z)}const k=(0,o.stack)(b,0),x=w.map(T=>T.map(C=>n*a(C/n))),v=new o.Tensor("int64",x.flat(),[f,2]),E=x.map(([T,C])=>this.calc_num_image_tokens_from_image_size(C,T));return{pixel_values:k,original_sizes:I,reshaped_input_sizes:w,image_sizes:v,num_img_tokens:E}}}},"./src/models/phi3_v/processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VProcessor:()=>l});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");const i="<|image|>",a=/<\|image_\d+\|>/g;class l extends s.Processor{async _call(m,d=null,{padding:u=!0,truncation:g=!0,num_crops:f=null}={}){Array.isArray(m)||(m=[m]);let y,I;if(d){I=await this.image_processor(d,{num_crops:f});const{num_img_tokens:w}=I,b=m.map((x,v)=>x.split(a).join(i.repeat(w[v])));y=this.tokenizer(b,{padding:u,truncation:g});const k=this.tokenizer.model.convert_tokens_to_ids([i])[0];y.input_ids.map_(x=>x==k?-x:x)}else y=this.tokenizer(m);return{...y,...I}}}Y(l,"image_processor_class",o.AutoImageProcessor),Y(l,"tokenizer_class",n.AutoTokenizer)},"./src/models/processors.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>s.Florence2Processor,Gemma3nProcessor:()=>o.Gemma3nProcessor,GroundingDinoProcessor:()=>n.GroundingDinoProcessor,Idefics3Processor:()=>i.Idefics3Processor,JinaCLIPProcessor:()=>l.JinaCLIPProcessor,LlavaProcessor:()=>c.LlavaProcessor,MgpstrProcessor:()=>m.MgpstrProcessor,MoonshineProcessor:()=>d.MoonshineProcessor,OwlViTProcessor:()=>u.OwlViTProcessor,PaliGemmaProcessor:()=>f.PaliGemmaProcessor,Phi3VProcessor:()=>g.Phi3VProcessor,PyAnnoteProcessor:()=>y.PyAnnoteProcessor,Qwen2VLProcessor:()=>I.Qwen2VLProcessor,SamProcessor:()=>w.SamProcessor,SmolVLMProcessor:()=>b.SmolVLMProcessor,SpeechT5Processor:()=>k.SpeechT5Processor,UltravoxProcessor:()=>x.UltravoxProcessor,VLChatProcessor:()=>a.VLChatProcessor,VoxtralProcessor:()=>v.VoxtralProcessor,Wav2Vec2Processor:()=>E.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>T.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>C.WhisperProcessor});var s=t("./src/models/florence2/processing_florence2.js"),o=t("./src/models/gemma3n/processing_gemma3n.js"),n=t("./src/models/grounding_dino/processing_grounding_dino.js"),i=t("./src/models/idefics3/processing_idefics3.js"),a=t("./src/models/janus/processing_janus.js"),l=t("./src/models/jina_clip/processing_jina_clip.js"),c=t("./src/models/llava/processing_llava.js"),m=t("./src/models/mgp_str/processing_mgp_str.js"),d=t("./src/models/moonshine/processing_moonshine.js"),u=t("./src/models/owlvit/processing_owlvit.js"),g=t("./src/models/phi3_v/processing_phi3_v.js"),f=t("./src/models/paligemma/processing_paligemma.js"),y=t("./src/models/pyannote/processing_pyannote.js"),I=t("./src/models/qwen2_vl/processing_qwen2_vl.js"),w=t("./src/models/sam/processing_sam.js"),b=t("./src/models/smolvlm/processing_smolvlm.js"),k=t("./src/models/speecht5/processing_speecht5.js"),x=t("./src/models/ultravox/processing_ultravox.js"),v=t("./src/models/voxtral/processing_voxtral.js"),E=t("./src/models/wav2vec2/processing_wav2vec2.js"),T=t("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),C=t("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(e,r,t)=>{t.r(r),t.d(r,{PvtImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),o=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");class i extends s.FeatureExtractor{async _call(l){(0,s.validate_audio_inputs)(l,"PyAnnoteFeatureExtractor"),l instanceof Float64Array&&(l=new Float32Array(l));const c=[1,1,l.length];return{input_values:new o.Tensor("float32",l,c)}}samples_to_frames(l){return(l-this.config.offset)/this.config.step}post_process_speaker_diarization(l,c){const m=c/this.samples_to_frames(c)/this.config.sampling_rate,d=[];for(const u of l.tolist()){const g=[];let f=-1;for(let y=0;y<u.length;++y){const I=(0,n.softmax)(u[y]),[w,b]=(0,n.max)(I),[k,x]=[y,y+1];b!==f?(f=b,g.push({id:b,start:k,end:x,score:w})):(g.at(-1).end=x,g.at(-1).score+=w)}d.push(g.map(({id:y,start:I,end:w,score:b})=>({id:y,start:I*m,end:w*m,confidence:b/(w-I)})))}return d}}},"./src/models/pyannote/processing_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteProcessor:()=>n});var s=t("./src/base/processing_utils.js"),o=t("./src/models/pyannote/feature_extraction_pyannote.js");class n extends s.Processor{async _call(a){return await this.feature_extractor(a)}post_process_speaker_diarization(...a){return this.feature_extractor.post_process_speaker_diarization(...a)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}Y(n,"feature_extractor_class",o.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(a,...l){const{pixel_values:c,original_sizes:m,reshaped_input_sizes:d}=await super._call(a,...l);let u=c;const{temporal_patch_size:g,merge_size:f,patch_size:y}=this.config;u.dims[0]===1&&(u=(0,o.cat)(Array.from({length:g},()=>u),0));const I=u.dims[0]/g,w=u.dims[1],b=Math.floor(u.dims[2]/y),k=Math.floor(u.dims[3]/y),x=u.view(I,g,w,Math.floor(b/f),f,y,Math.floor(k/f),f,y).permute(0,3,6,4,7,2,1,5,8).view(I*b*k,w*g*y*y),v=new o.Tensor("int64",[I,b,k],[1,3]);return{pixel_values:x,image_grid_thw:v,original_sizes:m,reshaped_input_sizes:d}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLProcessor:()=>i});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");class i extends s.Processor{async _call(l,c=null,...m){Array.isArray(l)||(l=[l]);let d,u;if(c&&(d=await this.image_processor(c),u=d.image_grid_thw),u){let f=this.image_processor.config.merge_size**2,y=0;const I=u.tolist();l=l.map(w=>{for(;w.includes("<|image_pad|>");){const b=Number(I[y++].reduce((k,x)=>k*x,1n));w=w.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(b/f)))}return w.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(l),...d}}}Y(i,"image_processor_class",o.AutoImageProcessor),Y(i,"tokenizer_class",n.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(e,r,t)=>{t.r(r),t.d(r,{RTDetrImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{post_process_object_detection(...i){return(0,s.post_process_object_detection)(...i)}}},"./src/models/sam/image_processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js"),o=t("./src/utils/core.js"),n=t("./src/utils/tensor.js");class i extends s.ImageProcessor{reshape_input_points(l,c,m,d=!1){l=structuredClone(l);let u=(0,o.calculateDimensions)(l);if(u.length===3)d||(u=[1,...u]),l=[l];else if(u.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let g=0;g<l.length;++g){let f=c[g],y=m[g],I=[y[0]/f[0],y[1]/f[1]];for(let w=0;w<l[g].length;++w)for(let b=0;b<l[g][w].length;++b)for(let k=0;k<l[g][w][b].length;++k)l[g][w][b][k]*=I[k%2]}return new n.Tensor("float32",Float32Array.from(l.flat(1/0)),u)}add_input_labels(l,c){let m=(0,o.calculateDimensions)(l);if(m.length===2)m=[1,...m],l=[l];else if(m.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(m.some((d,u)=>d!==c.dims[u]))throw Error(`The first ${m.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new n.Tensor("int64",l.flat(1/0).map(BigInt),m)}async _call(l,{input_points:c=null,input_labels:m=null,input_boxes:d=null}={}){const u=await super._call(l);if(c&&(u.input_points=this.reshape_input_points(c,u.original_sizes,u.reshaped_input_sizes)),m){if(!u.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");u.input_labels=this.add_input_labels(m,u.input_points)}return d&&(u.input_boxes=this.reshape_input_points(d,u.original_sizes,u.reshaped_input_sizes,!0)),u}async post_process_masks(l,c,m,{mask_threshold:d=0,binarize:u=!0,pad_size:g=null}={}){const f=[];g=g??this.pad_size;const y=[g.height,g.width];for(let I=0;I<c.length;++I){const w=c[I],b=m[I];let k=await(0,n.interpolate_4d)(l[I],{mode:"bilinear",size:y});if(k=k.slice(null,null,[0,b[0]],[0,b[1]]),k=await(0,n.interpolate_4d)(k,{mode:"bilinear",size:w}),u){const x=k.data,v=new Uint8Array(x.length);for(let E=0;E<x.length;++E)x[E]>d&&(v[E]=1);k=new n.Tensor("bool",v,k.dims)}f.push(k)}return f}generate_crop_boxes(l,c,{crop_n_layers:m=0,overlap_ratio:d=512/1500,points_per_crop:u=32,crop_n_points_downscale_factor:g=1}={}){}}},"./src/models/sam/processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamProcessor:()=>n});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js");class n extends s.Processor{async _call(...a){return await this.image_processor(...a)}post_process_masks(...a){return this.image_processor.post_process_masks(...a)}reshape_input_points(...a){return this.image_processor.reshape_input_points(...a)}}Y(n,"image_processor_class",o.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(e,r,t)=>{t.r(r),t.d(r,{SeamlessM4TFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),o=t("./src/utils/tensor.js"),n=t("./src/utils/audio.js");class i extends s.FeatureExtractor{constructor(l){super(l);const c=this.config.sampling_rate,m=(0,n.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(c/2),c,null,"kaldi",!0);this.mel_filters=m,this.window=(0,n.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(l,c){return l=l.map(m=>m*32768),(0,n.spectrogram)(l,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:c,transpose:!0})}async _call(l,{padding:c=!0,pad_to_multiple_of:m=2,do_normalize_per_mel_bins:d=!0,return_attention_mask:u=!0}={}){(0,s.validate_audio_inputs)(l,"SeamlessM4TFeatureExtractor");let g=await this._extract_fbank_features(l,this.config.max_length);if(d){const[v,E]=g.dims,T=g.data;for(let C=0;C<E;++C){let D=0;for(let R=0;R<v;++R)D+=T[R*E+C];const z=D/v;let K=0;for(let R=0;R<v;++R)K+=(T[R*E+C]-z)**2;K/=v-1;const H=Math.sqrt(K+1e-7);for(let R=0;R<v;++R){const re=R*E+C;T[re]=(T[re]-z)/H}}}let f;if(c){const[v,E]=g.dims,T=g.data,C=v%m;if(C>0){const D=new Float32Array(E*(v+C));D.set(T),D.fill(this.config.padding_value,T.length);const z=v+C;g=new o.Tensor(g.type,D,[z,E]),u&&(f=new o.Tensor("int64",new BigInt64Array(z),[1,z]),f.data.fill(1n,0,v))}}const[y,I]=g.dims,w=this.config.stride;if(y%w!==0)throw new Error(`The number of frames (${y}) must be a multiple of the stride (${w}).`);const k=g.view(1,Math.floor(y/w),I*w),x={input_features:k};if(u){const v=k.dims[1],E=new BigInt64Array(v);if(f){const T=f.data;for(let C=1,D=0;C<y;C+=w,++D)E[D]=T[C]}else E.fill(1n);x.attention_mask=new o.Tensor("int64",E,[1,v])}return x}}},"./src/models/segformer/image_processing_segformer.js":(e,r,t)=>{t.r(r),t.d(r,{SegformerFeatureExtractor:()=>n,SegformerImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{post_process_semantic_segmentation(...a){return(0,s.post_process_semantic_segmentation)(...a)}}class n extends o{}},"./src/models/siglip/image_processing_siglip.js":(e,r,t)=>{t.r(r),t.d(r,{SiglipImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMImageProcessor:()=>s.Idefics3ImageProcessor});var s=t("./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMProcessor:()=>s.Idefics3Processor});var s=t("./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":(e,r,t)=>{t.r(r),t.d(r,{SnacFeatureExtractor:()=>o});var s=t("./src/models/dac/feature_extraction_dac.js");class o extends s.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5FeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js");class o extends s.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5Processor:()=>i});var s=t("./src/base/processing_utils.js"),o=t("./src/tokenizers.js"),n=t("./src/models/auto/feature_extraction_auto.js");class i extends s.Processor{async _call(l){return await this.feature_extractor(l)}}Y(i,"tokenizer_class",o.AutoTokenizer),Y(i,"feature_extractor_class",n.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(e,r,t)=>{t.r(r),t.d(r,{Swin2SRImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{pad_image(i,a,l,c={}){const[m,d,u]=a;return super.pad_image(i,a,{width:d+(l-d%l)%l,height:m+(l-m%l)%l},{mode:"symmetric",center:!1,constant_values:-1,...c})}}},"./src/models/ultravox/processing_ultravox.js":(e,r,t)=>{t.r(r),t.d(r,{UltravoxProcessor:()=>i});var s=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l,c=null,m={}){if(Array.isArray(l))throw new Error("Batched inputs are not supported yet.");let d={};if(c){const g=c.length,{input_features:f}=await this.feature_extractor(c,{...m,max_length:g}),y=Math.round(g/this.config.encoder_ds_factor+1e-4),I=1+Math.ceil(y/this.config.stack_factor);d.audio_token_len=[I],d.audio_values=f;const w=this.config.audio_placeholder;if(!l.includes(w))throw new Error(`The input text does not contain the image token ${w}.`);l=l.replaceAll(w,w.repeat(I))}return{...this.tokenizer(l,{add_special_tokens:!1,...m}),...d}}}Y(i,"tokenizer_class",o.AutoTokenizer),Y(i,"feature_extractor_class",s.AutoFeatureExtractor),Y(i,"uses_processor_config",!0)},"./src/models/vit/image_processing_vit.js":(e,r,t)=>{t.r(r),t.d(r,{ViTFeatureExtractor:()=>n,ViTImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/vitmatte/image_processing_vitmatte.js":(e,r,t)=>{t.r(r),t.d(r,{VitMatteImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(a,l){Array.isArray(a)||(a=[a]),Array.isArray(l)||(l=[l]);const c=await Promise.all(a.map(u=>this.preprocess(u))),m=await Promise.all(l.map(u=>this.preprocess(u,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,o.stack)(c.map((u,g)=>(0,o.cat)([u.pixel_values,m[g].pixel_values],0)),0),original_sizes:c.map(u=>u.original_size),reshaped_input_sizes:c.map(u=>u.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(e,r,t)=>{t.r(r),t.d(r,{VitPoseImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{post_process_pose_estimation(i,a,{threshold:l=null}={}){const c=i.tolist(),[m,d,u,g]=i.dims,f=[];for(let y=0;y<m;++y){const I=c[y],w=a[y],b=[];for(let k=0;k<w.length;++k){const x=w[k],v=[],E=[],T=[],C=x.at(-2)/g,D=x.at(-1)/u;for(let z=0;z<I.length;++z){let[K,H]=[0,0],R=0,re=-1/0;const q=I[z];for(let ee=0;ee<q.length;++ee){const ie=q[ee];for(let he=0;he<ie.length;++he){const de=ie[he];R+=de,re=Math.max(re,de),K+=(he+.5)*de,H+=ee*de}}if(l!=null&&re<l)continue;const te=[C*K/R,D*H/R];v.push(te),T.push(z),E.push(re)}b.push({bbox:x,scores:E,labels:T,keypoints:v})}f.push(b)}return f}}},"./src/models/voxtral/processing_voxtral.js":(e,r,t)=>{t.r(r),t.d(r,{VoxtralProcessor:()=>d});var s=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js"),i=t("./src/utils/tensor.js");const a="[AUDIO]",l="[BEGIN_AUDIO]",c=375;function m(u,g){const f=[];for(let y=0;y<u.length;y+=g)f.push(u.subarray(y,Math.min(y+g,u.length)));return f}class d extends n.Processor{async _call(g,f=null,y={}){if(Array.isArray(g))throw new Error("Batched inputs are not supported yet.");const I={};if(f){if(!g.includes(a))throw new Error(`The input text does not contain the audio token ${a}.`);Array.isArray(f)||(f=[f]);const b=g.split(a),k=b.length-1;if(k!==f.length)throw new Error(`The number of audio inputs (${f.length}) does not match the number of audio tokens in the text (${k}).`);const x=this.feature_extractor.config.n_samples,v=f.map(z=>m(z,x)),E=v.map(z=>z.length),T=v.flat(),C=(await Promise.all(T.map(z=>this.feature_extractor(z,y)))).map(z=>z.input_features);I.audio_values=C.length>1?(0,i.cat)(C,0):C[0];let D=b[0];for(let z=0;z<E.length;++z){D+=l;for(let K=0;K<E[z];++K)D+=a.repeat(c);D+=b[z+1]}g=D}return{...this.tokenizer(g,{add_special_tokens:!1,...y}),...I}}}Y(d,"tokenizer_class",o.AutoTokenizer),Y(d,"feature_extractor_class",s.AutoFeatureExtractor),Y(d,"uses_processor_config",!1)},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2FeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),o=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{_zero_mean_unit_var_norm(a){const c=a.reduce((d,u)=>d+u,0)/a.length,m=a.reduce((d,u)=>d+(u-c)**2,0)/a.length;return a.map(d=>(d-c)/Math.sqrt(m+1e-7))}async _call(a){(0,s.validate_audio_inputs)(a,"Wav2Vec2FeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));let l=a;this.config.do_normalize&&(l=this._zero_mean_unit_var_norm(l));const c=[1,l.length];return{input_values:new o.Tensor("float32",l,c),attention_mask:new o.Tensor("int64",new BigInt64Array(l.length).fill(1n),c)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2Processor:()=>i});var s=t("./src/tokenizers.js"),o=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l){return await this.feature_extractor(l)}}Y(i,"tokenizer_class",s.AutoTokenizer),Y(i,"feature_extractor_class",o.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2ProcessorWithLM:()=>i});var s=t("./src/tokenizers.js"),o=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l){return await this.feature_extractor(l)}}Y(i,"tokenizer_class",s.AutoTokenizer),Y(i,"feature_extractor_class",o.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(e,r,t)=>{t.r(r),t.d(r,{WeSpeakerFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var o=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,c=(0,o.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=c,this.window=(0,o.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(a){return a=a.map(l=>l*32768),(0,o.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(a){(0,s.validate_audio_inputs)(a,"WeSpeakerFeatureExtractor");const l=(await this._extract_fbank_features(a)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const c=l.mean(1).data,m=l.data,[d,u,g]=l.dims;for(let f=0;f<d;++f){const y=f*u*g,I=f*g;for(let w=0;w<u;++w){const b=y+w*g;for(let k=0;k<g;++k)m[b+k]-=c[I+k]}}}return{input_features:l}}}},"./src/models/whisper/common_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WHISPER_LANGUAGE_MAPPING:()=>o,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>n,whisper_language_to_code:()=>i});const s=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],o=new Map(s),n=new Map([...s.map(([a,l])=>[l,a]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function i(a){a=a.toLowerCase();let l=n.get(a);if(l===void 0){const c=a.match(/^<\|([a-z]{2})\|>$/);if(c&&(a=c[1]),o.has(a))l=a;else{const d=a.length===2?o.keys():o.values();throw new Error(`Language "${a}" is not supported. Must be one of: ${JSON.stringify(Array.from(d))}`)}}return l}},"./src/models/whisper/feature_extraction_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var o=t("./src/utils/audio.js"),n=t("./src/utils/maths.js");class i extends s.FeatureExtractor{constructor(l){var c;super(l),(c=this.config).mel_filters??(c.mel_filters=(0,o.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,o.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(l){const c=await(0,o.spectrogram)(l,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(l.length/this.config.hop_length),this.config.nb_max_frames)}),m=c.data,d=(0,n.max)(m)[0];for(let u=0;u<m.length;++u)m[u]=(Math.max(m[u],d-8)+4)/4;return c}async _call(l,{max_length:c=null}={}){(0,s.validate_audio_inputs)(l,"WhisperFeatureExtractor");let m;const d=c??this.config.n_samples;return l.length>d?(l.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),m=l.slice(0,d)):(m=new Float32Array(d),m.set(l)),{input_features:(await this._extract_fbank_features(m)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperGenerationConfig:()=>o});var s=t("./src/generation/configuration_utils.js");class o extends s.GenerationConfig{constructor(){super(...arguments);Y(this,"return_timestamps",null);Y(this,"return_token_timestamps",null);Y(this,"num_frames",null);Y(this,"alignment_heads",null);Y(this,"task",null);Y(this,"language",null);Y(this,"no_timestamps_token_id",null);Y(this,"prompt_ids",null);Y(this,"is_multilingual",null);Y(this,"lang_to_id",null);Y(this,"task_to_id",null);Y(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperProcessor:()=>i});var s=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l){return await this.feature_extractor(l)}}Y(i,"tokenizer_class",o.AutoTokenizer),Y(i,"feature_extractor_class",s.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(e,r,t)=>{t.r(r),t.d(r,{YolosFeatureExtractor:()=>n,YolosImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{post_process_object_detection(...a){return(0,s.post_process_object_detection)(...a)}}class n extends o{}},"./src/ops/registry.js":(e,r,t)=>{t.r(r),t.d(r,{TensorOpRegistry:()=>l});var s=t("./src/backends/onnx.js"),o=t("./src/utils/tensor.js"),n=t("./src/env.js");const i=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV,a=async(c,m,d)=>{const u=await(0,s.createInferenceSession)(new Uint8Array(c),m);let g=Promise.resolve();return async f=>{const y=(0,s.isONNXProxy)(),I=Object.fromEntries(Object.entries(f).map(([b,k])=>[b,(y?k.clone():k).ort_tensor])),w=await(g=i?g.then(()=>u.run(I)):u.run(I));return Array.isArray(d)?d.map(b=>new o.Tensor(w[b])):new o.Tensor(w[d])}};class l{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=a([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=a([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=a([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=a([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=a([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=a([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=a([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=a([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}Y(l,"session_options",{})},"./src/pipelines.js":(e,r,t)=>{t.r(r),t.d(r,{AudioClassificationPipeline:()=>H,AutomaticSpeechRecognitionPipeline:()=>re,BackgroundRemovalPipeline:()=>ie,DepthEstimationPipeline:()=>fe,DocumentQuestionAnsweringPipeline:()=>O,FeatureExtractionPipeline:()=>z,FillMaskPipeline:()=>k,ImageClassificationPipeline:()=>te,ImageFeatureExtractionPipeline:()=>K,ImageSegmentationPipeline:()=>ee,ImageToImagePipeline:()=>ne,ImageToTextPipeline:()=>q,ObjectDetectionPipeline:()=>de,Pipeline:()=>y,QuestionAnsweringPipeline:()=>b,SummarizationPipeline:()=>v,Text2TextGenerationPipeline:()=>x,TextClassificationPipeline:()=>I,TextGenerationPipeline:()=>C,TextToAudioPipeline:()=>W,TokenClassificationPipeline:()=>w,TranslationPipeline:()=>E,ZeroShotAudioClassificationPipeline:()=>R,ZeroShotClassificationPipeline:()=>D,ZeroShotImageClassificationPipeline:()=>he,ZeroShotObjectDetectionPipeline:()=>N,pipeline:()=>Be});var s=t("./src/tokenizers.js"),o=t("./src/models.js"),n=t("./src/models/auto/processing_auto.js");t("./src/base/processing_utils.js");var i=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/maths.js"),c=t("./src/utils/audio.js"),m=t("./src/utils/tensor.js"),d=t("./src/utils/image.js");async function u(Ae){return Array.isArray(Ae)||(Ae=[Ae]),await Promise.all(Ae.map(J=>d.RawImage.read(J)))}async function g(Ae,J){return Array.isArray(Ae)||(Ae=[Ae]),await Promise.all(Ae.map(le=>typeof le=="string"||le instanceof URL?(0,c.read_audio)(le,J):le instanceof Float64Array?new Float32Array(le):le))}function f(Ae,J){J&&(Ae=Ae.map(Pe=>Pe|0));const[le,G,ye,Ie]=Ae;return{xmin:le,ymin:G,xmax:ye,ymax:Ie}}class y extends i.Callable{constructor({task:J,model:le,tokenizer:G=null,processor:ye=null}){super(),this.task=J,this.model=le,this.tokenizer=G,this.processor=ye}async dispose(){await this.model.dispose()}}class I extends y{constructor(J){super(J)}async _call(J,{top_k:le=1}={}){const G=this.tokenizer(J,{padding:!0,truncation:!0}),ye=await this.model(G),Ie=this.model.config.problem_type==="multi_label_classification"?$e=>$e.sigmoid():$e=>new m.Tensor("float32",(0,l.softmax)($e.data),$e.dims),Pe=this.model.config.id2label,be=[];for(const $e of ye.logits){const Me=Ie($e),Fe=await(0,m.topk)(Me,le),Re=Fe[0].tolist(),Te=Fe[1].tolist().map((et,He)=>({label:Pe?Pe[et]:`LABEL_${et}`,score:Re[He]}));le===1?be.push(...Te):be.push(Te)}return Array.isArray(J)||le===1?be:be[0]}}class w extends y{constructor(J){super(J)}async _call(J,{ignore_labels:le=["O"]}={}){const G=Array.isArray(J),ye=this.tokenizer(G?J:[J],{padding:!0,truncation:!0}),Pe=(await this.model(ye)).logits,be=this.model.config.id2label,$e=[];for(let Me=0;Me<Pe.dims[0];++Me){const Fe=ye.input_ids[Me],Re=Pe[Me],Xe=[];for(let Te=0;Te<Re.dims[0];++Te){const et=Re[Te],He=(0,l.max)(et.data)[1],ot=be?be[He]:`LABEL_${He}`;if(le.includes(ot))continue;const Ye=this.tokenizer.decode([Fe[Te].item()],{skip_special_tokens:!0});if(Ye==="")continue;const De=(0,l.softmax)(et.data);Xe.push({entity:ot,score:De[He],index:Te,word:Ye})}$e.push(Xe)}return G?$e:$e[0]}}class b extends y{constructor(J){super(J)}async _call(J,le,{top_k:G=1}={}){const ye=this.tokenizer(J,{text_pair:le,padding:!0,truncation:!0}),{start_logits:Ie,end_logits:Pe}=await this.model(ye),be=ye.input_ids.tolist(),$e=ye.attention_mask.tolist(),Me=this.tokenizer.all_special_ids,Fe=[];for(let Re=0;Re<Ie.dims[0];++Re){const Xe=be[Re],Te=Xe.findIndex(Ze=>Ze==this.tokenizer.sep_token_id);$e[Re].map((Ze,it)=>Ze==1&&(it===0||it>Te&&Me.findIndex(At=>At==Xe[it])===-1));const et=Ie[Re].tolist(),He=Pe[Re].tolist();for(let Ze=1;Ze<et.length;++Ze)($e[Re]==0||Ze<=Te||Me.findIndex(it=>it==Xe[Ze])!==-1)&&(et[Ze]=-1/0,He[Ze]=-1/0);const ot=(0,l.softmax)(et).map((Ze,it)=>[Ze,it]),Ye=(0,l.softmax)(He).map((Ze,it)=>[Ze,it]);ot[0][0]=0,Ye[0][0]=0;const De=(0,a.product)(ot,Ye).filter(Ze=>Ze[0][1]<=Ze[1][1]).map(Ze=>[Ze[0][1],Ze[1][1],Ze[0][0]*Ze[1][0]]).sort((Ze,it)=>it[2]-Ze[2]);for(let Ze=0;Ze<Math.min(De.length,G);++Ze){const[it,At,$t]=De[Ze],Mt=Xe.slice(it,At+1),br=this.tokenizer.decode(Mt,{skip_special_tokens:!0});Fe.push({answer:br,score:$t})}}return G===1?Fe[0]:Fe}}class k extends y{constructor(J){super(J)}async _call(J,{top_k:le=5}={}){const G=this.tokenizer(J,{padding:!0,truncation:!0}),{logits:ye}=await this.model(G),Ie=[],Pe=G.input_ids.tolist();for(let be=0;be<Pe.length;++be){const $e=Pe[be],Me=$e.findIndex(et=>et==this.tokenizer.mask_token_id);if(Me===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const Fe=ye[be][Me],Re=await(0,m.topk)(new m.Tensor("float32",(0,l.softmax)(Fe.data),Fe.dims),le),Xe=Re[0].tolist(),Te=Re[1].tolist();Ie.push(Te.map((et,He)=>{const ot=$e.slice();return ot[Me]=et,{score:Xe[He],token:Number(et),token_str:this.tokenizer.decode([et]),sequence:this.tokenizer.decode(ot,{skip_special_tokens:!0})}}))}return Array.isArray(J)?Ie:Ie[0]}}class x extends y{constructor(le){super(le);Y(this,"_key","generated_text")}async _call(le,G={}){Array.isArray(le)||(le=[le]),this.model.config.prefix&&(le=le.map(Me=>this.model.config.prefix+Me));const ye=this.model.config.task_specific_params;ye&&ye[this.task]&&ye[this.task].prefix&&(le=le.map(Me=>ye[this.task].prefix+Me));const Ie=this.tokenizer,Pe={padding:!0,truncation:!0};let be;this instanceof E&&"_build_translation_inputs"in Ie?be=Ie._build_translation_inputs(le,Pe,G):be=Ie(le,Pe);const $e=await this.model.generate({...be,...G});return Ie.batch_decode($e,{skip_special_tokens:!0}).map(Me=>({[this._key]:Me}))}}class v extends x{constructor(le){super(le);Y(this,"_key","summary_text")}}class E extends x{constructor(le){super(le);Y(this,"_key","translation_text")}}function T(Ae){return Array.isArray(Ae)&&Ae.every(J=>"role"in J&&"content"in J)}class C extends y{constructor(J){super(J)}async _call(J,le={}){let G=!1,ye=!1,Ie=le.add_special_tokens??(this.tokenizer.add_bos_token||this.tokenizer.add_eos_token)??!1,Pe;if(typeof J=="string")Pe=J=[J];else if(Array.isArray(J)&&J.every(Te=>typeof Te=="string"))G=!0,Pe=J;else{if(T(J))J=[J];else if(Array.isArray(J)&&J.every(T))G=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");ye=!0,Pe=J.map(Te=>this.tokenizer.apply_chat_template(Te,{tokenize:!1,add_generation_prompt:!0})),Ie=!1}const be=ye?!1:le.return_full_text??!0;this.tokenizer.padding_side="left";const $e=this.tokenizer(Pe,{add_special_tokens:Ie,padding:!0,truncation:!0}),Me=await this.model.generate({...$e,...le}),Fe=this.tokenizer.batch_decode(Me,{skip_special_tokens:!0});let Re;!be&&$e.input_ids.dims.at(-1)>0&&(Re=this.tokenizer.batch_decode($e.input_ids,{skip_special_tokens:!0}).map(Te=>Te.length));const Xe=Array.from({length:J.length},Te=>[]);for(let Te=0;Te<Fe.length;++Te){const et=Math.floor(Te/Me.dims[0]*J.length);Re&&(Fe[Te]=Fe[Te].slice(Re[et])),Xe[et].push({generated_text:ye?[...J[et],{role:"assistant",content:Fe[Te]}]:Fe[Te]})}return!G&&Xe.length===1?Xe[0]:Xe}}class D extends y{constructor(J){super(J),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([le,G])=>[le.toLowerCase(),G])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(J,le,{hypothesis_template:G="This example is {}.",multi_label:ye=!1}={}){const Ie=Array.isArray(J);Ie||(J=[J]),Array.isArray(le)||(le=[le]);const Pe=le.map(Me=>G.replace("{}",Me)),be=ye||le.length===1,$e=[];for(const Me of J){const Fe=[];for(const Te of Pe){const et=this.tokenizer(Me,{text_pair:Te,padding:!0,truncation:!0}),He=await this.model(et);be?Fe.push([He.logits.data[this.contradiction_id],He.logits.data[this.entailment_id]]):Fe.push(He.logits.data[this.entailment_id])}const Xe=(be?Fe.map(Te=>(0,l.softmax)(Te)[1]):(0,l.softmax)(Fe)).map((Te,et)=>[Te,et]).sort((Te,et)=>et[0]-Te[0]);$e.push({sequence:Me,labels:Xe.map(Te=>le[Te[1]]),scores:Xe.map(Te=>Te[0])})}return Ie?$e:$e[0]}}class z extends y{constructor(J){super(J)}async _call(J,{pooling:le="none",normalize:G=!1,quantize:ye=!1,precision:Ie="binary"}={}){const Pe=this.tokenizer(J,{padding:!0,truncation:!0}),be=await this.model(Pe);let $e=be.last_hidden_state??be.logits??be.token_embeddings;switch(le){case"none":break;case"mean":$e=(0,m.mean_pooling)($e,Pe.attention_mask);break;case"first_token":case"cls":$e=$e.slice(null,0);break;case"last_token":case"eos":$e=$e.slice(null,-1);break;default:throw Error(`Pooling method '${le}' not supported.`)}return G&&($e=$e.normalize(2,-1)),ye&&($e=(0,m.quantize_embeddings)($e,Ie)),$e}}class K extends y{constructor(J){super(J)}async _call(J,{pool:le=null}={}){const G=await u(J),{pixel_values:ye}=await this.processor(G),Ie=await this.model({pixel_values:ye});let Pe;if(le){if(!("pooler_output"in Ie))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Pe=Ie.pooler_output}else Pe=Ie.last_hidden_state??Ie.logits??Ie.image_embeds;return Pe}}class H extends y{constructor(J){super(J)}async _call(J,{top_k:le=5}={}){const G=this.processor.feature_extractor.config.sampling_rate,ye=await g(J,G),Ie=this.model.config.id2label,Pe=[];for(const be of ye){const $e=await this.processor(be),Fe=(await this.model($e)).logits[0],Re=await(0,m.topk)(new m.Tensor("float32",(0,l.softmax)(Fe.data),Fe.dims),le),Xe=Re[0].tolist(),et=Re[1].tolist().map((He,ot)=>({label:Ie?Ie[He]:`LABEL_${He}`,score:Xe[ot]}));Pe.push(et)}return Array.isArray(J)?Pe:Pe[0]}}class R extends y{constructor(J){super(J)}async _call(J,le,{hypothesis_template:G="This is a sound of {}."}={}){const ye=!Array.isArray(J);ye&&(J=[J]);const Ie=le.map(Fe=>G.replace("{}",Fe)),Pe=this.tokenizer(Ie,{padding:!0,truncation:!0}),be=this.processor.feature_extractor.config.sampling_rate,$e=await g(J,be),Me=[];for(const Fe of $e){const Re=await this.processor(Fe),Xe=await this.model({...Pe,...Re}),Te=(0,l.softmax)(Xe.logits_per_audio.data);Me.push([...Te].map((et,He)=>({score:et,label:le[He]})))}return ye?Me[0]:Me}}class re extends y{constructor(J){super(J)}async _call(J,le={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(J,le);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(J,le);case"moonshine":return this._call_moonshine(J,le);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(J,le){le.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),le.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const G=!Array.isArray(J);G&&(J=[J]);const ye=this.processor.feature_extractor.config.sampling_rate,Ie=await g(J,ye),Pe=[];for(const be of Ie){const $e=await this.processor(be),Fe=(await this.model($e)).logits[0],Re=[];for(const Te of Fe)Re.push((0,l.max)(Te.data)[1]);const Xe=this.tokenizer.decode(Re);Pe.push({text:Xe})}return G?Pe[0]:Pe}async _call_whisper(J,le){const G=le.return_timestamps??!1,ye=le.chunk_length_s??0,Ie=le.force_full_sequences??!1;let Pe=le.stride_length_s??null;const be={...le};G==="word"&&(be.return_token_timestamps=!0,be.return_timestamps=!1);const $e=!Array.isArray(J);$e&&(J=[J]);const Me=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,Fe=this.processor.feature_extractor.config.hop_length,Re=this.processor.feature_extractor.config.sampling_rate,Xe=await g(J,Re),Te=[];for(const et of Xe){let He=[];if(ye>0){if(Pe===null)Pe=ye/6;else if(ye<=Pe)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const De=Re*ye,Ze=Re*Pe,it=De-2*Ze;let At=0;for(;;){const $t=At+De,Mt=et.subarray(At,$t),br=await this.processor(Mt),Pr=At===0,jr=$t>=et.length;if(He.push({stride:[Mt.length,Pr?0:Ze,jr?0:Ze],input_features:br.input_features,is_last:jr}),jr)break;At+=it}}else He=[{stride:[et.length,0,0],input_features:(await this.processor(et)).input_features,is_last:!0}];for(const De of He){be.num_frames=Math.floor(De.stride[0]/Fe);const Ze=await this.model.generate({inputs:De.input_features,...be});G==="word"?(De.tokens=Ze.sequences.tolist()[0],De.token_timestamps=Ze.token_timestamps.tolist()[0].map(it=>(0,l.round)(it,2))):De.tokens=Ze[0].tolist(),De.stride=De.stride.map(it=>it/Re)}const[ot,Ye]=this.tokenizer._decode_asr(He,{time_precision:Me,return_timestamps:G,force_full_sequences:Ie});Te.push({text:ot,...Ye})}return $e?Te[0]:Te}async _call_moonshine(J,le){const G=!Array.isArray(J);G&&(J=[J]);const ye=this.processor.feature_extractor.config.sampling_rate,Ie=await g(J,ye),Pe=[];for(const be of Ie){const $e=await this.processor(be),Me=Math.floor(be.length/ye)*6,Fe=await this.model.generate({max_new_tokens:Me,...le,...$e}),Re=this.processor.batch_decode(Fe,{skip_special_tokens:!0})[0];Pe.push({text:Re})}return G?Pe[0]:Pe}}class q extends y{constructor(J){super(J)}async _call(J,le={}){const G=Array.isArray(J),ye=await u(J),{pixel_values:Ie}=await this.processor(ye),Pe=[];for(const be of Ie){be.dims=[1,...be.dims];const $e=await this.model.generate({inputs:be,...le}),Me=this.tokenizer.batch_decode($e,{skip_special_tokens:!0}).map(Fe=>({generated_text:Fe.trim()}));Pe.push(Me)}return G?Pe:Pe[0]}}class te extends y{constructor(J){super(J)}async _call(J,{top_k:le=5}={}){const G=await u(J),{pixel_values:ye}=await this.processor(G),Ie=await this.model({pixel_values:ye}),Pe=this.model.config.id2label,be=[];for(const $e of Ie.logits){const Me=await(0,m.topk)(new m.Tensor("float32",(0,l.softmax)($e.data),$e.dims),le),Fe=Me[0].tolist(),Xe=Me[1].tolist().map((Te,et)=>({label:Pe?Pe[Te]:`LABEL_${Te}`,score:Fe[et]}));be.push(Xe)}return Array.isArray(J)?be:be[0]}}class ee extends y{constructor(J){super(J),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(J,{threshold:le=.5,mask_threshold:G=.5,overlap_mask_area_threshold:ye=.8,label_ids_to_fuse:Ie=null,target_sizes:Pe=null,subtask:be=null}={}){if(Array.isArray(J)&&J.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const Me=await u(J),Fe=Me.map(De=>[De.height,De.width]),Re=await this.processor(Me),{inputNames:Xe,outputNames:Te}=this.model.sessions.model;if(!Xe.includes("pixel_values")){if(Xe.length!==1)throw Error(`Expected a single input name, but got ${Xe.length} inputs: ${Xe}.`);const De=Xe[0];if(De in Re)throw Error(`Input name ${De} already exists in the inputs.`);Re[De]=Re.pixel_values}const et=await this.model(Re);let He=null;if(be!==null)He=this.subtasks_mapping[be];else if(this.processor.image_processor){for(const[De,Ze]of Object.entries(this.subtasks_mapping))if(Ze in this.processor.image_processor){He=this.processor.image_processor[Ze].bind(this.processor.image_processor),be=De;break}}const ot=this.model.config.id2label,Ye=[];if(be)if(be==="panoptic"||be==="instance"){const De=He(et,le,G,ye,Ie,Pe??Fe)[0],Ze=De.segmentation;for(const it of De.segments_info){const At=new Uint8ClampedArray(Ze.data.length);for(let Mt=0;Mt<Ze.data.length;++Mt)Ze.data[Mt]===it.id&&(At[Mt]=255);const $t=new d.RawImage(At,Ze.dims[1],Ze.dims[0],1);Ye.push({score:it.score,label:ot[it.label_id],mask:$t})}}else if(be==="semantic"){const{segmentation:De,labels:Ze}=He(et,Pe??Fe)[0];for(const it of Ze){const At=new Uint8ClampedArray(De.data.length);for(let Mt=0;Mt<De.data.length;++Mt)De.data[Mt]===it&&(At[Mt]=255);const $t=new d.RawImage(At,De.dims[1],De.dims[0],1);Ye.push({score:null,label:ot[it],mask:$t})}}else throw Error(`Subtask ${be} not supported.`);else{const Ze=et[Te[0]];for(let it=0;it<Fe.length;++it){const At=Fe[it],$t=Ze[it];$t.data.some(br=>br<-1e-5||br>1+1e-5)&&$t.sigmoid_();const Mt=await d.RawImage.fromTensor($t.mul_(255).to("uint8")).resize(At[1],At[0]);Ye.push({label:null,score:null,mask:Mt})}}return Ye}}class ie extends ee{constructor(J){super(J)}async _call(J,le={}){if(Array.isArray(J)&&J.length!==1)throw Error("Background removal pipeline currently only supports a batch size of 1.");const ye=await u(J),Ie=await super._call(J,le);return ye.map((be,$e)=>{const Me=be.clone();return Me.putAlpha(Ie[$e].mask),Me})}}class he extends y{constructor(J){super(J)}async _call(J,le,{hypothesis_template:G="This is a photo of {}"}={}){const ye=Array.isArray(J),Ie=await u(J),Pe=le.map(Xe=>G.replace("{}",Xe)),be=this.tokenizer(Pe,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:$e}=await this.processor(Ie),Me=await this.model({...be,pixel_values:$e}),Fe=this.model.config.model_type==="siglip"?Xe=>Xe.sigmoid().data:Xe=>(0,l.softmax)(Xe.data),Re=[];for(const Xe of Me.logits_per_image){const et=[...Fe(Xe)].map((He,ot)=>({score:He,label:le[ot]}));et.sort((He,ot)=>ot.score-He.score),Re.push(et)}return ye?Re:Re[0]}}class de extends y{constructor(J){super(J)}async _call(J,{threshold:le=.9,percentage:G=!1}={}){const ye=Array.isArray(J);if(ye&&J.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Ie=await u(J),Pe=G?null:Ie.map(Te=>[Te.height,Te.width]),{pixel_values:be,pixel_mask:$e}=await this.processor(Ie),Me=await this.model({pixel_values:be,pixel_mask:$e}),Fe=this.processor.image_processor.post_process_object_detection(Me,le,Pe),Re=this.model.config.id2label,Xe=Fe.map(Te=>Te.boxes.map((et,He)=>({score:Te.scores[He],label:Re[Te.classes[He]],box:f(et,!G)})));return ye?Xe:Xe[0]}}class N extends y{constructor(J){super(J)}async _call(J,le,{threshold:G=.1,top_k:ye=null,percentage:Ie=!1}={}){const Pe=Array.isArray(J),be=await u(J),$e=this.tokenizer(le,{padding:!0,truncation:!0}),Me=await this.processor(be),Fe=[];for(let Re=0;Re<be.length;++Re){const Xe=be[Re],Te=Ie?null:[[Xe.height,Xe.width]],et=Me.pixel_values[Re].unsqueeze_(0),He=await this.model({...$e,pixel_values:et});let ot;if("post_process_grounded_object_detection"in this.processor){const Ye=this.processor.post_process_grounded_object_detection(He,$e.input_ids,{box_threshold:G,text_threshold:G,target_sizes:Te})[0];ot=Ye.boxes.map((De,Ze)=>({score:Ye.scores[Ze],label:Ye.labels[Ze],box:f(De,!Ie)}))}else{const Ye=this.processor.image_processor.post_process_object_detection(He,G,Te,!0)[0];ot=Ye.boxes.map((De,Ze)=>({score:Ye.scores[Ze],label:le[Ye.classes[Ze]],box:f(De,!Ie)}))}ot.sort((Ye,De)=>De.score-Ye.score),ye!==null&&(ot=ot.slice(0,ye)),Fe.push(ot)}return Pe?Fe:Fe[0]}}class O extends y{constructor(J){super(J)}async _call(J,le,G={}){const ye=(await u(J))[0],{pixel_values:Ie}=await this.processor(ye),Pe=`<s_docvqa><s_question>${le}</s_question><s_answer>`,be=this.tokenizer(Pe,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,$e=await this.model.generate({inputs:Ie,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:be,...G}),Fe=this.tokenizer.batch_decode($e)[0].match(/<s_answer>(.*?)<\/s_answer>/);let Re=null;return Fe&&Fe.length>=2&&(Re=Fe[1].trim()),[{answer:Re}]}}class W extends y{constructor(le){super(le);Y(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=le.vocoder??null}async _call(le,{speaker_embeddings:G=null}={}){return this.processor?this._call_text_to_spectrogram(le,{speaker_embeddings:G}):this._call_text_to_waveform(le)}async _call_text_to_waveform(le){const G=this.tokenizer(le,{padding:!0,truncation:!0}),{waveform:ye}=await this.model(G),Ie=this.model.config.sampling_rate;return new c.RawAudio(ye.data,Ie)}async _call_text_to_spectrogram(le,{speaker_embeddings:G}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await o.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof G=="string"||G instanceof URL)&&(G=new Float32Array(await(await fetch(G)).arrayBuffer())),G instanceof Float32Array)G=new m.Tensor("float32",G,[1,G.length]);else if(!(G instanceof m.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:ye}=this.tokenizer(le,{padding:!0,truncation:!0}),{waveform:Ie}=await this.model.generate_speech(ye,G,{vocoder:this.vocoder}),Pe=this.processor.feature_extractor.config.sampling_rate;return new c.RawAudio(Ie.data,Pe)}}class ne extends y{constructor(J){super(J)}async _call(J){const le=await u(J),G=await this.processor(le),ye=await this.model(G),Ie=[];for(const Pe of ye.reconstruction){const be=Pe.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Ie.push(d.RawImage.fromTensor(be))}return Ie.length>1?Ie:Ie[0]}}class fe extends y{constructor(J){super(J)}async _call(J){const le=await u(J),G=await this.processor(le),{predicted_depth:ye}=await this.model(G),Ie=[];for(let Pe=0;Pe<le.length;++Pe){const be=ye[Pe],[$e,Me]=be.dims.slice(-2),[Fe,Re]=le[Pe].size,Xe=(await(0,m.interpolate_4d)(be.view(1,1,$e,Me),{size:[Re,Fe],mode:"bilinear"})).view(Re,Fe),Te=Xe.min().item(),et=Xe.max().item(),He=Xe.sub(Te).div_(et-Te).mul_(255).to("uint8").unsqueeze(0),ot=d.RawImage.fromTensor(He);Ie.push({predicted_depth:Xe,depth:ot})}return Ie.length>1?Ie:Ie[0]}}const ae=Object.freeze({"text-classification":{tokenizer:s.AutoTokenizer,pipeline:I,model:o.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:s.AutoTokenizer,pipeline:w,model:o.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:s.AutoTokenizer,pipeline:b,model:o.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:s.AutoTokenizer,pipeline:k,model:o.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:s.AutoTokenizer,pipeline:v,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:s.AutoTokenizer,pipeline:E,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:s.AutoTokenizer,pipeline:x,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:s.AutoTokenizer,pipeline:C,model:o.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:s.AutoTokenizer,pipeline:D,model:o.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:H,model:o.AutoModelForAudioClassification,processor:n.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:s.AutoTokenizer,pipeline:R,model:o.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:s.AutoTokenizer,pipeline:re,model:[o.AutoModelForSpeechSeq2Seq,o.AutoModelForCTC],processor:n.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:s.AutoTokenizer,pipeline:W,model:[o.AutoModelForTextToWaveform,o.AutoModelForTextToSpectrogram],processor:[n.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:s.AutoTokenizer,pipeline:q,model:o.AutoModelForVision2Seq,processor:n.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:te,model:o.AutoModelForImageClassification,processor:n.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:ee,model:[o.AutoModelForImageSegmentation,o.AutoModelForSemanticSegmentation,o.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:ie,model:[o.AutoModelForImageSegmentation,o.AutoModelForSemanticSegmentation,o.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:s.AutoTokenizer,pipeline:he,model:o.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:de,model:o.AutoModelForObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:s.AutoTokenizer,pipeline:N,model:o.AutoModelForZeroShotObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:s.AutoTokenizer,pipeline:O,model:o.AutoModelForDocumentQuestionAnswering,processor:n.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:ne,model:o.AutoModelForImageToImage,processor:n.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:fe,model:o.AutoModelForDepthEstimation,processor:n.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:s.AutoTokenizer,pipeline:z,model:o.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:n.AutoProcessor,pipeline:K,model:[o.AutoModelForImageFeatureExtraction,o.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),xe=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function Be(Ae,J=null,{progress_callback:le=null,config:G=null,cache_dir:ye=null,local_files_only:Ie=!1,revision:Pe="main",device:be=null,dtype:$e=null,subfolder:Me="onnx",use_external_data_format:Fe=null,model_file_name:Re=null,session_options:Xe={}}={}){Ae=xe[Ae]??Ae;const Te=ae[Ae.split("_",1)[0]];if(!Te)throw Error(`Unsupported pipeline: ${Ae}. Must be one of [${Object.keys(ae)}]`);J||(J=Te.default.model,console.log(`No model specified. Using default model: "${J}".`));const et={progress_callback:le,config:G,cache_dir:ye,local_files_only:Ie,revision:Pe,device:be,dtype:$e,subfolder:Me,use_external_data_format:Fe,model_file_name:Re,session_options:Xe},He=new Map([["tokenizer",Te.tokenizer],["model",Te.model],["processor",Te.processor]]),ot=await Ke(He,J,et);ot.task=Ae,(0,a.dispatchCallback)(le,{status:"ready",task:Ae,model:J});const Ye=Te.pipeline;return new Ye(ot)}async function Ke(Ae,J,le){const G=Object.create(null),ye=[];for(const[Ie,Pe]of Ae.entries()){if(!Pe)continue;let be;Array.isArray(Pe)?be=new Promise(async($e,Me)=>{var Re,Xe;let Fe;for(const Te of Pe){if(Te===null){$e(null);return}try{$e(await Te.from_pretrained(J,le));return}catch(et){if((Re=et.message)!=null&&Re.includes("Unsupported model type"))Fe=et;else if((Xe=et.message)!=null&&Xe.includes("Could not locate file"))Fe=et;else{Me(et);return}}}Me(Fe)}):be=Pe.from_pretrained(J,le),G[Ie]=be,ye.push(be)}await Promise.all(ye);for(const[Ie,Pe]of Object.entries(G))G[Ie]=await Pe;return G}},"./src/tokenizers.js":(e,r,t)=>{t.r(r),t.d(r,{AlbertTokenizer:()=>Is,AutoTokenizer:()=>un,BartTokenizer:()=>nt,BertTokenizer:()=>ks,BlenderbotSmallTokenizer:()=>Jt,BlenderbotTokenizer:()=>tt,BloomTokenizer:()=>Qr,CLIPTokenizer:()=>Ls,CamembertTokenizer:()=>Oe,CodeGenTokenizer:()=>Xr,CodeLlamaTokenizer:()=>$r,CohereTokenizer:()=>fs,ConvBertTokenizer:()=>Q,DebertaTokenizer:()=>$,DebertaV2Tokenizer:()=>X,DistilBertTokenizer:()=>we,ElectraTokenizer:()=>gt,Ernie4_5_Tokenizer:()=>cn,EsmTokenizer:()=>Fs,FalconTokenizer:()=>kr,GPT2Tokenizer:()=>xt,GPTNeoXTokenizer:()=>As,GemmaTokenizer:()=>Wr,Grok1Tokenizer:()=>es,HerbertTokenizer:()=>j,LlamaTokenizer:()=>Sr,M2M100Tokenizer:()=>mr,MBart50Tokenizer:()=>Vt,MBartTokenizer:()=>Bt,MPNetTokenizer:()=>ls,MarianTokenizer:()=>je,MgpstrTokenizer:()=>ln,MobileBertTokenizer:()=>St,NllbTokenizer:()=>hs,NougatTokenizer:()=>_s,PreTrainedTokenizer:()=>mt,Qwen2Tokenizer:()=>Ur,RoFormerTokenizer:()=>se,RobertaTokenizer:()=>Nr,SiglipTokenizer:()=>Gr,SpeechT5Tokenizer:()=>zs,SqueezeBertTokenizer:()=>Xt,T5Tokenizer:()=>ht,TokenizerModel:()=>K,VitsTokenizer:()=>Bs,Wav2Vec2CTCTokenizer:()=>Ne,WhisperTokenizer:()=>_r,XLMRobertaTokenizer:()=>Vr,XLMTokenizer:()=>st,is_chinese_char:()=>k});var s=t("./src/utils/generic.js"),o=t("./src/utils/core.js"),n=t("./src/utils/hub.js"),i=t("./src/utils/maths.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/data-structures.js"),c=t("./node_modules/@huggingface/jinja/dist/index.js"),m=t("./src/models/whisper/common_whisper.js");async function d(me,A){const V=await Promise.all([(0,n.getModelJSON)(me,"tokenizer.json",!0,A),(0,n.getModelJSON)(me,"tokenizer_config.json",!0,A)]);return A.legacy!==null&&(V[1].legacy=A.legacy),V}function u(me,A){const V=[];let Z=0;for(const ce of me.matchAll(A)){const pe=ce[0];Z<ce.index&&V.push(me.slice(Z,ce.index)),pe.length>0&&V.push(pe),Z=ce.index+pe.length}return Z<me.length&&V.push(me.slice(Z)),V}function g(me,A=!0){if(me.Regex!==void 0){let V=me.Regex.replace(/\\([#&~])/g,"$1");for(const[Z,ce]of D)V=V.replaceAll(Z,ce);return new RegExp(V,"gu")}else if(me.String!==void 0){const V=(0,o.escapeRegExp)(me.String);return new RegExp(A?V:`(${V})`,"gu")}else return console.warn("Unknown pattern type:",me),null}function f(me){return new Map(Object.entries(me))}function y(me){const A=me.dims;switch(A.length){case 1:return me.tolist();case 2:if(A[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return me.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${A.length}.`)}}function I(me){return me.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function w(me){return me.replace(new RegExp("\\p{M}","gu"),"")}function b(me){return w(me.toLowerCase())}function k(me){return me>=19968&&me<=40959||me>=13312&&me<=19903||me>=131072&&me<=173791||me>=173824&&me<=177983||me>=177984&&me<=178207||me>=178208&&me<=183983||me>=63744&&me<=64255||me>=194560&&me<=195103}function x(me,A,V){const Z=[];let ce=0;for(;ce<me.length;){if(Z.push(me[ce]),(A.get(me[ce])??V)!==V){++ce;continue}for(;++ce<me.length&&(A.get(me[ce])??V)===V;)A.get(Z.at(-1))!==V&&(Z[Z.length-1]+=me[ce])}return Z}function v(me){return me.match(/\S+/g)||[]}const E="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",T=new RegExp(`^[${E}]+$`,"gu"),C=".,!?…。，、।۔،",D=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${C}])]+`,` ?[^\\s${C}]+`]]);class z{constructor(A){this.content=A.content,this.id=A.id,this.single_word=A.single_word??!1,this.lstrip=A.lstrip??!1,this.rstrip=A.rstrip??!1,this.special=A.special??!1,this.normalized=A.normalized??null}}class K extends s.Callable{constructor(A){super(),this.config=A,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(A,...V){switch(A.type){case"WordPiece":return new H(A);case"Unigram":return new R(A,...V);case"BPE":return new te(A);default:if(A.vocab)return Array.isArray(A.vocab)?new R(A,...V):Object.hasOwn(A,"continuing_subword_prefix")&&Object.hasOwn(A,"unk_token")?Object.hasOwn(A,"merges")?new te(A):new H(A):new ee(A,...V);throw new Error(`Unknown TokenizerModel type: ${A.type}`)}}_call(A){return A=this.encode(A),this.fuse_unk&&(A=x(A,this.tokens_to_ids,this.unk_token_id)),A}encode(A){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(A){return A.map(V=>this.tokens_to_ids.get(V)??this.unk_token_id)}convert_ids_to_tokens(A){return A.map(V=>this.vocab[V]??this.unk_token)}}class H extends K{constructor(A){super(A),this.tokens_to_ids=f(A.vocab),this.unk_token_id=this.tokens_to_ids.get(A.unk_token),this.unk_token=A.unk_token,this.max_input_chars_per_word=A.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[V,Z]of this.tokens_to_ids)this.vocab[Z]=V}encode(A){const V=[];for(const Z of A){const ce=[...Z];if(ce.length>this.max_input_chars_per_word){V.push(this.unk_token);continue}let pe=!1,Ee=0;const Ve=[];for(;Ee<ce.length;){let Qe=ce.length,Ge=null;for(;Ee<Qe;){let rt=ce.slice(Ee,Qe).join("");if(Ee>0&&(rt=this.config.continuing_subword_prefix+rt),this.tokens_to_ids.has(rt)){Ge=rt;break}--Qe}if(Ge===null){pe=!0;break}Ve.push(Ge),Ee=Qe}pe?V.push(this.unk_token):V.push(...Ve)}return V}}class R extends K{constructor(A,V){super(A);const Z=A.vocab.length;this.vocab=new Array(Z),this.scores=new Array(Z);for(let ce=0;ce<Z;++ce)[this.vocab[ce],this.scores[ce]]=A.vocab[ce];this.unk_token_id=A.unk_id,this.unk_token=this.vocab[A.unk_id],this.tokens_to_ids=new Map(this.vocab.map((ce,pe)=>[ce,pe])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=V.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,i.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(A){const V=A.chars,Z=1;let ce=0;for(;ce<V.length;){let pe=!1;const Ee=V.slice(ce).join(""),Ve=this.trie.commonPrefixSearch(Ee);for(const Qe of Ve){const Ge=this.tokens_to_ids.get(Qe),rt=this.scores[Ge],bt=(0,o.len)(Qe);A.insert(ce,bt,rt,Ge),!pe&&bt===Z&&(pe=!0)}pe||A.insert(ce,Z,this.unk_score,this.unk_token_id),ce+=Z}}tokenize(A){const V=new l.TokenLattice(A,this.bos_token_id,this.eos_token_id);return this.populateNodes(V),V.tokens()}encode(A){const V=[];for(const Z of A){const ce=this.tokenize(Z);V.push(...ce)}return V}}const re=(()=>{const me=[...Array.from({length:94},(ce,pe)=>pe+33),...Array.from({length:12},(ce,pe)=>pe+161),...Array.from({length:82},(ce,pe)=>pe+174)],A=me.slice();let V=0;for(let ce=0;ce<256;++ce)me.includes(ce)||(me.push(ce),A.push(256+V),V+=1);const Z=A.map(ce=>String.fromCharCode(ce));return Object.fromEntries(me.map((ce,pe)=>[ce,Z[pe]]))})(),q=(0,o.reverseDictionary)(re);class te extends K{constructor(A){super(A),this.tokens_to_ids=f(A.vocab),this.unk_token_id=this.tokens_to_ids.get(A.unk_token),this.unk_token=A.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[Z,ce]of this.tokens_to_ids)this.vocab[ce]=Z;const V=Array.isArray(A.merges[0]);this.merges=V?A.merges:A.merges.map(Z=>Z.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((Z,ce)=>[JSON.stringify(Z),ce])),this.end_of_word_suffix=A.end_of_word_suffix,this.continuing_subword_suffix=A.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.max_length_to_cache=256,this.cache_capacity=1e4,this.cache=new l.LRUCache(this.cache_capacity)}clear_cache(){this.cache.clear()}bpe(A){if(A.length===0)return[];const V=this.cache.get(A);if(V!==void 0)return V;const Z=Array.from(A);this.end_of_word_suffix&&(Z[Z.length-1]+=this.end_of_word_suffix);let ce=[];if(Z.length>1){const pe=new l.PriorityQueue((Qe,Ge)=>Qe.score<Ge.score);let Ee={token:Z[0],bias:0,prev:null,next:null},Ve=Ee;for(let Qe=1;Qe<Z.length;++Qe){const Ge={bias:Qe/Z.length,token:Z[Qe],prev:Ve,next:null};Ve.next=Ge,this._add_node(pe,Ve),Ve=Ge}for(;!pe.isEmpty();){const Qe=pe.pop();if(Qe.deleted||!Qe.next||Qe.next.deleted)continue;if(Qe.deleted=!0,Qe.next.deleted=!0,Qe.prev){const rt={...Qe.prev};Qe.prev.deleted=!0,Qe.prev=rt,rt.prev?rt.prev.next=rt:Ee=rt}const Ge={token:Qe.token+Qe.next.token,bias:Qe.bias,prev:Qe.prev,next:Qe.next.next};Ge.prev?(Ge.prev.next=Ge,this._add_node(pe,Ge.prev)):Ee=Ge,Ge.next&&(Ge.next.prev=Ge,this._add_node(pe,Ge))}for(let Qe=Ee;Qe!==null;Qe=Qe.next)ce.push(Qe.token)}else ce=Z;if(this.continuing_subword_suffix)for(let pe=0;pe<ce.length-1;++pe)ce[pe]+=this.continuing_subword_suffix;return A.length<this.max_length_to_cache&&this.cache.put(A,ce),ce}_add_node(A,V){const Z=this.bpe_ranks.get(JSON.stringify([V.token,V.next.token]));Z!==void 0&&(V.score=Z+V.bias,A.push(V))}encode(A){const V=[];for(const Z of A){if(this.ignore_merges&&this.tokens_to_ids.has(Z)){V.push(Z);continue}const ce=this.bpe(Z);for(const pe of ce)if(this.tokens_to_ids.has(pe))V.push(pe);else if(this.byte_fallback){const Ee=Array.from(this.text_encoder.encode(pe)).map(Ve=>`<0x${Ve.toString(16).toUpperCase().padStart(2,"0")}>`);Ee.every(Ve=>this.tokens_to_ids.has(Ve))?V.push(...Ee):V.push(this.unk_token)}else V.push(this.unk_token)}return V}}class ee extends K{constructor(A,V){super(A),this.tokens_to_ids=f(V.target_lang?A.vocab[V.target_lang]:A.vocab),this.bos_token=V.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=V.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=V.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=V.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[Z,ce]of this.tokens_to_ids)this.vocab[ce]=Z}encode(A){return A}}class ie extends s.Callable{constructor(A){super(),this.config=A}static fromConfig(A){if(A===null)return null;switch(A.type){case"BertNormalizer":return new Ae(A);case"Precompiled":return new jr(A);case"Sequence":return new Ke(A);case"Replace":return new he(A);case"NFC":return new N(A);case"NFD":return new O(A);case"NFKC":return new W(A);case"NFKD":return new ne(A);case"Strip":return new fe(A);case"StripAccents":return new ae(A);case"Lowercase":return new xe(A);case"Prepend":return new Be(A);default:throw new Error(`Unknown Normalizer type: ${A.type}`)}}normalize(A){throw Error("normalize should be implemented in subclass.")}_call(A){return this.normalize(A)}}class he extends ie{normalize(A){const V=g(this.config.pattern);return V===null?A:A.replaceAll(V,this.config.content)}}class de extends ie{constructor(){super(...arguments);Y(this,"form")}normalize(V){return V=V.normalize(this.form),V}}class N extends de{constructor(){super(...arguments);Y(this,"form","NFC")}}class O extends de{constructor(){super(...arguments);Y(this,"form","NFD")}}class W extends de{constructor(){super(...arguments);Y(this,"form","NFKC")}}class ne extends de{constructor(){super(...arguments);Y(this,"form","NFKD")}}class fe extends ie{normalize(A){return this.config.strip_left&&this.config.strip_right?A=A.trim():(this.config.strip_left&&(A=A.trimStart()),this.config.strip_right&&(A=A.trimEnd())),A}}class ae extends ie{normalize(A){return A=w(A),A}}class xe extends ie{normalize(A){return A=A.toLowerCase(),A}}class Be extends ie{normalize(A){return A=this.config.prepend+A,A}}class Ke extends ie{constructor(A){super(A),this.normalizers=A.normalizers.map(V=>ie.fromConfig(V))}normalize(A){return this.normalizers.reduce((V,Z)=>Z.normalize(V),A)}}class Ae extends ie{_tokenize_chinese_chars(A){const V=[];for(let Z=0;Z<A.length;++Z){const ce=A[Z],pe=ce.charCodeAt(0);k(pe)?(V.push(" "),V.push(ce),V.push(" ")):V.push(ce)}return V.join("")}stripAccents(A){return A.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(A){switch(A){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(A)}}_clean_text(A){const V=[];for(const Z of A){const ce=Z.charCodeAt(0);ce===0||ce===65533||this._is_control(Z)||(/^\s$/.test(Z)?V.push(" "):V.push(Z))}return V.join("")}normalize(A){return this.config.clean_text&&(A=this._clean_text(A)),this.config.handle_chinese_chars&&(A=this._tokenize_chinese_chars(A)),this.config.lowercase?(A=A.toLowerCase(),this.config.strip_accents!==!1&&(A=this.stripAccents(A))):this.config.strip_accents&&(A=this.stripAccents(A)),A}}class J extends s.Callable{static fromConfig(A){if(A===null)return null;switch(A.type){case"BertPreTokenizer":return new le(A);case"Sequence":return new as(A);case"Whitespace":return new Qt(A);case"WhitespaceSplit":return new Cr(A);case"Metaspace":return new br(A);case"ByteLevel":return new G(A);case"Split":return new ye(A);case"Punctuation":return new Ie(A);case"Digits":return new Pe(A);case"Replace":return new Ws(A);default:throw new Error(`Unknown PreTokenizer type: ${A.type}`)}}pre_tokenize_text(A,V){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(A,V){return(Array.isArray(A)?A.map(Z=>this.pre_tokenize_text(Z,V)):this.pre_tokenize_text(A,V)).flat()}_call(A,V){return this.pre_tokenize(A,V)}}class le extends J{constructor(A){super(),this.pattern=new RegExp(`[^\\s${E}]+|[${E}]`,"gu")}pre_tokenize_text(A,V){return A.trim().match(this.pattern)||[]}}class G extends J{constructor(A){super(),this.config=A,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=re,this.text_encoder=new TextEncoder}pre_tokenize_text(A,V){return this.add_prefix_space&&!A.startsWith(" ")&&(A=" "+A),(this.use_regex?A.match(this.pattern)||[]:[A]).map(ce=>Array.from(this.text_encoder.encode(ce),pe=>this.byte_encoder[pe]).join(""))}}class ye extends J{constructor(A){super(),this.config=A,this.pattern=g(this.config.pattern,this.config.invert)}pre_tokenize_text(A,V){var Z;return this.pattern===null?[]:this.config.invert?A.match(this.pattern)||[]:((Z=this.config.behavior)==null?void 0:Z.toLowerCase())==="removed"?A.split(this.pattern).filter(ce=>ce):u(A,this.pattern)}}class Ie extends J{constructor(A){super(),this.config=A,this.pattern=new RegExp(`[^${E}]+|[${E}]+`,"gu")}pre_tokenize_text(A,V){return A.match(this.pattern)||[]}}class Pe extends J{constructor(A){super(),this.config=A;const V=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(V,"gu")}pre_tokenize_text(A,V){return A.match(this.pattern)||[]}}class be extends s.Callable{constructor(A){super(),this.config=A}static fromConfig(A){if(A===null)return null;switch(A.type){case"TemplateProcessing":return new Fe(A);case"ByteLevel":return new Re(A);case"RobertaProcessing":return new Me(A);case"BertProcessing":return new $e(A);case"Sequence":return new Xe(A);default:throw new Error(`Unknown PostProcessor type: ${A.type}`)}}post_process(A,...V){throw Error("post_process should be implemented in subclass.")}_call(A,...V){return this.post_process(A,...V)}}class $e extends be{constructor(A){super(A),this.cls=A.cls[0],this.sep=A.sep[0]}post_process(A,V=null,{add_special_tokens:Z=!0}={}){Z&&(A=(0,o.mergeArrays)([this.cls],A,[this.sep]));let ce=new Array(A.length).fill(0);if(V!==null){const pe=Z&&this instanceof Me?[this.sep]:[],Ee=Z?[this.sep]:[];A=(0,o.mergeArrays)(A,pe,V,Ee),ce=(0,o.mergeArrays)(ce,new Array(V.length+pe.length+Ee.length).fill(1))}return{tokens:A,token_type_ids:ce}}}class Me extends $e{}class Fe extends be{constructor(A){super(A),this.single=A.single,this.pair=A.pair}post_process(A,V=null,{add_special_tokens:Z=!0}={}){const ce=V===null?this.single:this.pair;let pe=[],Ee=[];for(const Ve of ce)"SpecialToken"in Ve?Z&&(pe.push(Ve.SpecialToken.id),Ee.push(Ve.SpecialToken.type_id)):"Sequence"in Ve&&(Ve.Sequence.id==="A"?(pe=(0,o.mergeArrays)(pe,A),Ee=(0,o.mergeArrays)(Ee,new Array(A.length).fill(Ve.Sequence.type_id))):Ve.Sequence.id==="B"&&(pe=(0,o.mergeArrays)(pe,V),Ee=(0,o.mergeArrays)(Ee,new Array(V.length).fill(Ve.Sequence.type_id))));return{tokens:pe,token_type_ids:Ee}}}class Re extends be{post_process(A,V=null){return V&&(A=(0,o.mergeArrays)(A,V)),{tokens:A}}}class Xe extends be{constructor(A){super(A),this.processors=A.processors.map(V=>be.fromConfig(V))}post_process(A,V=null,Z={}){let ce;for(const pe of this.processors)if(pe instanceof Re)A=pe.post_process(A).tokens,V&&(V=pe.post_process(V).tokens);else{const Ee=pe.post_process(A,V,Z);A=Ee.tokens,ce=Ee.token_type_ids}return{tokens:A,token_type_ids:ce}}}class Te extends s.Callable{constructor(A){super(),this.config=A,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=A.trim_offsets}static fromConfig(A){if(A===null)return null;switch(A.type){case"WordPiece":return new De(A);case"Metaspace":return new Pr(A);case"ByteLevel":return new Ze(A);case"Replace":return new et(A);case"ByteFallback":return new He(A);case"Fuse":return new ot(A);case"Strip":return new Ye(A);case"Sequence":return new At(A);case"CTC":return new it(A);case"BPEDecoder":return new $t(A);default:throw new Error(`Unknown Decoder type: ${A.type}`)}}_call(A){return this.decode(A)}decode(A){return this.decode_chain(A).join("")}decode_chain(A){throw Error("`decode_chain` should be implemented in subclass.")}}class et extends Te{decode_chain(A){const V=g(this.config.pattern);return V===null?A:A.map(Z=>Z.replaceAll(V,this.config.content))}}class He extends Te{constructor(A){super(A),this.text_decoder=new TextDecoder}decode_chain(A){const V=[];let Z=[];for(const ce of A){let pe=null;if(ce.length===6&&ce.startsWith("<0x")&&ce.endsWith(">")){const Ee=parseInt(ce.slice(3,5),16);isNaN(Ee)||(pe=Ee)}if(pe!==null)Z.push(pe);else{if(Z.length>0){const Ee=this.text_decoder.decode(Uint8Array.from(Z));V.push(Ee),Z=[]}V.push(ce)}}if(Z.length>0){const ce=this.text_decoder.decode(Uint8Array.from(Z));V.push(ce),Z=[]}return V}}class ot extends Te{decode_chain(A){return[A.join("")]}}class Ye extends Te{constructor(A){super(A),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(A){return A.map(V=>{let Z=0;for(let pe=0;pe<this.start&&V[pe]===this.content;++pe){Z=pe+1;continue}let ce=V.length;for(let pe=0;pe<this.stop;++pe){const Ee=V.length-pe-1;if(V[Ee]===this.content){ce=Ee;continue}else break}return V.slice(Z,ce)})}}class De extends Te{constructor(A){super(A),this.cleanup=A.cleanup}decode_chain(A){return A.map((V,Z)=>(Z!==0&&(V.startsWith(this.config.prefix)?V=V.replace(this.config.prefix,""):V=" "+V),this.cleanup&&(V=I(V)),V))}}class Ze extends Te{constructor(A){super(A),this.byte_decoder=q,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(A){const V=A.join(""),Z=new Uint8Array([...V].map(pe=>this.byte_decoder[pe]));return this.text_decoder.decode(Z)}decode_chain(A){const V=[];let Z=[];for(const ce of A)this.added_tokens.find(pe=>pe.content===ce)!==void 0?(Z.length>0&&(V.push(this.convert_tokens_to_string(Z)),Z=[]),V.push(ce)):Z.push(ce);return Z.length>0&&V.push(this.convert_tokens_to_string(Z)),V}}class it extends Te{constructor(A){super(A),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(A){if(A.length===0)return"";const V=[A[0]];for(let pe=1;pe<A.length;++pe)A[pe]!==V.at(-1)&&V.push(A[pe]);let ce=V.filter(pe=>pe!==this.pad_token).join("");return this.cleanup&&(ce=I(ce).replaceAll(this.word_delimiter_token," ").trim()),ce}decode_chain(A){return[this.convert_tokens_to_string(A)]}}class At extends Te{constructor(A){super(A),this.decoders=A.decoders.map(V=>Te.fromConfig(V))}decode_chain(A){return this.decoders.reduce((V,Z)=>Z.decode_chain(V),A)}}class $t extends Te{constructor(A){super(A),this.suffix=this.config.suffix}decode_chain(A){return A.map((V,Z)=>V.replaceAll(this.suffix,Z===A.length-1?"":" "))}}class Mt extends Te{decode_chain(A){let V="";for(let Z=1;Z<A.length;Z+=2)V+=A[Z];return[V]}}class br extends J{constructor(A){super(),this.addPrefixSpace=A.add_prefix_space,this.replacement=A.replacement,this.strRep=A.str_rep||this.replacement,this.prepend_scheme=A.prepend_scheme??"always"}pre_tokenize_text(A,{section_index:V=void 0}={}){let Z=A.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!Z.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&V===0)&&(Z=this.strRep+Z),[Z]}}class Pr extends Te{constructor(A){super(A),this.addPrefixSpace=A.add_prefix_space,this.replacement=A.replacement}decode_chain(A){const V=[];for(let Z=0;Z<A.length;++Z){let ce=A[Z].replaceAll(this.replacement," ");this.addPrefixSpace&&Z==0&&ce.startsWith(" ")&&(ce=ce.substring(1)),V.push(ce)}return V}}class jr extends ie{constructor(A){super(A),this.charsmap=A.precompiled_charsmap}normalize(A){return A=A.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),A=A.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),A.includes("～")?A=A.split("～").map(Z=>Z.normalize("NFKC")).join("～"):A=A.normalize("NFKC"),A}}class as extends J{constructor(A){super(),this.tokenizers=A.pretokenizers.map(V=>J.fromConfig(V))}pre_tokenize_text(A,V){return this.tokenizers.reduce((Z,ce)=>ce.pre_tokenize(Z,V),[A])}}class Qt extends J{constructor(A){super()}pre_tokenize_text(A,V){return A.match(/\w+|[^\w\s]+/g)||[]}}class Cr extends J{constructor(A){super()}pre_tokenize_text(A,V){return v(A)}}class Ws extends J{constructor(A){super(),this.config=A,this.pattern=g(this.config.pattern),this.content=this.config.content}pre_tokenize_text(A,V){return this.pattern===null?[A]:[A.replaceAll(this.pattern,this.config.content)]}}const Gs=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Ks(me,A,V,Z){for(const ce of Object.keys(me)){const pe=A-me[ce].length,Ee=V(ce),Ve=new Array(pe).fill(Ee);me[ce]=Z==="right"?(0,o.mergeArrays)(me[ce],Ve):(0,o.mergeArrays)(Ve,me[ce])}}function Hs(me,A){for(const V of Object.keys(me))me[V].length=A}class mt extends s.Callable{constructor(V,Z){super();Y(this,"return_token_type_ids",!1);Y(this,"padding_side","right");this.config=Z,this.normalizer=ie.fromConfig(V.normalizer),this.pre_tokenizer=J.fromConfig(V.pre_tokenizer),this.model=K.fromConfig(V.model,Z),this.post_processor=be.fromConfig(V.post_processor),this.decoder=Te.fromConfig(V.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const ce of V.added_tokens){const pe=new z(ce);this.added_tokens.push(pe),this.model.tokens_to_ids.set(pe.content,pe.id),this.model.vocab[pe.id]=pe.content,pe.special&&(this.special_tokens.push(pe.content),this.all_special_ids.push(pe.id))}if(this.additional_special_tokens=Z.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new l.DictionarySplitter(this.added_tokens.map(ce=>ce.content)),this.added_tokens_map=new Map(this.added_tokens.map(ce=>[ce.content,ce])),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=Z.model_max_length,this.remove_space=Z.remove_space,this.clean_up_tokenization_spaces=Z.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=Z.do_lowercase_and_remove_accent??!1,Z.padding_side&&(this.padding_side=Z.padding_side),this.add_bos_token=Z.add_bos_token,this.add_eos_token=Z.add_eos_token,this.legacy=!1,this.chat_template=Z.chat_template??null,Array.isArray(this.chat_template)){const ce=Object.create(null);for(const{name:pe,template:Ee}of this.chat_template){if(typeof pe!="string"||typeof Ee!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');ce[pe]=Ee}this.chat_template=ce}this._compiled_template_cache=new Map}getToken(...V){for(const Z of V){const ce=this.config[Z];if(ce)if(typeof ce=="object"){if(ce.__type==="AddedToken")return ce.content;throw Error(`Unknown token: ${ce}`)}else return ce}return null}static async from_pretrained(V,{progress_callback:Z=null,config:ce=null,cache_dir:pe=null,local_files_only:Ee=!1,revision:Ve="main",legacy:Qe=null}={}){const Ge=await d(V,{progress_callback:Z,config:ce,cache_dir:pe,local_files_only:Ee,revision:Ve,legacy:Qe});return new this(...Ge)}_call(V,{text_pair:Z=null,add_special_tokens:ce=!0,padding:pe=!1,truncation:Ee=null,max_length:Ve=null,return_tensor:Qe=!0,return_token_type_ids:Ge=null}={}){const rt=Array.isArray(V);let bt;if(rt){if(V.length===0)throw Error("text array must be non-empty");if(Z!==null){if(Array.isArray(Z)){if(V.length!==Z.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");bt=V.map((Lt,nr)=>this._encode_plus(Lt,{text_pair:Z[nr],add_special_tokens:ce,return_token_type_ids:Ge}))}else bt=V.map(Lt=>this._encode_plus(Lt,{add_special_tokens:ce,return_token_type_ids:Ge}))}else{if(V==null)throw Error("text may not be null or undefined");if(Array.isArray(Z))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");bt=[this._encode_plus(V,{text_pair:Z,add_special_tokens:ce,return_token_type_ids:Ge})]}if(Ve===null?Ve=this.model_max_length:Ee===null&&(pe===!0?(console.warn("`max_length` is ignored when `padding: true` and there is no truncation strategy. To pad to max length, use `padding: 'max_length'`."),Ve=this.model_max_length):pe===!1&&(console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation: true` to explicitly truncate examples to max length."),Ee=!0)),pe===!0&&(Ve=Math.min((0,i.max)(bt.map(Lt=>Lt.input_ids.length))[0],Ve??1/0)),Ve=Math.min(Ve,this.model_max_length??1/0),pe||Ee)for(let Lt=0;Lt<bt.length;++Lt)bt[Lt].input_ids.length!==Ve&&(bt[Lt].input_ids.length>Ve?Ee&&Hs(bt[Lt],Ve):pe&&Ks(bt[Lt],Ve,nr=>nr==="input_ids"?this.pad_token_id:0,this.padding_side));const Rt={};if(Qe){if(!(pe&&Ee)&&bt.some(nr=>{var Gt;for(const fr of Object.keys(nr))if(nr[fr].length!==((Gt=bt[0][fr])==null?void 0:Gt.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const Lt=[bt.length,bt[0].input_ids.length];for(const nr of Object.keys(bt[0]))Rt[nr]=new a.Tensor("int64",BigInt64Array.from(bt.flatMap(Gt=>Gt[nr]).map(BigInt)),Lt)}else{for(const Lt of Object.keys(bt[0]))Rt[Lt]=bt.map(nr=>nr[Lt]);if(!rt)for(const Lt of Object.keys(Rt))Rt[Lt]=Rt[Lt][0]}return Rt}_encode_text(V){if(V===null)return null;const Z=this.added_tokens_splitter.split(V);for(let pe=0;pe<Z.length;++pe){const Ee=this.added_tokens_map.get(Z[pe]);Ee&&(Ee.lstrip&&pe>0&&(Z[pe-1]=Z[pe-1].trimEnd()),Ee.rstrip&&pe<Z.length-1&&(Z[pe+1]=Z[pe+1].trimStart()))}return Z.flatMap((pe,Ee)=>{if(pe.length===0)return[];if(this.added_tokens_map.has(pe))return[pe];if(this.remove_space===!0&&(pe=pe.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(pe=b(pe)),this.normalizer!==null&&(pe=this.normalizer(pe)),pe.length===0)return[];const Ve=this.pre_tokenizer!==null?this.pre_tokenizer(pe,{section_index:Ee}):[pe];return this.model(Ve)})}_encode_plus(V,{text_pair:Z=null,add_special_tokens:ce=!0,return_token_type_ids:pe=null}={}){const{tokens:Ee,token_type_ids:Ve}=this._tokenize_helper(V,{pair:Z,add_special_tokens:ce}),Qe=this.model.convert_tokens_to_ids(Ee),Ge={input_ids:Qe,attention_mask:new Array(Qe.length).fill(1)};return(pe??this.return_token_type_ids)&&Ve&&(Ge.token_type_ids=Ve),Ge}_tokenize_helper(V,{pair:Z=null,add_special_tokens:ce=!1}={}){const pe=this._encode_text(V),Ee=this._encode_text(Z);return this.post_processor?this.post_processor(pe,Ee,{add_special_tokens:ce}):{tokens:(0,o.mergeArrays)(pe??[],Ee??[])}}tokenize(V,{pair:Z=null,add_special_tokens:ce=!1}={}){return this._tokenize_helper(V,{pair:Z,add_special_tokens:ce}).tokens}encode(V,{text_pair:Z=null,add_special_tokens:ce=!0,return_token_type_ids:pe=null}={}){return this._encode_plus(V,{text_pair:Z,add_special_tokens:ce,return_token_type_ids:pe}).input_ids}batch_decode(V,Z={}){return V instanceof a.Tensor&&(V=V.tolist()),V.map(ce=>this.decode(ce,Z))}decode(V,Z={}){if(V instanceof a.Tensor&&(V=y(V)),!Array.isArray(V)||V.length===0||!(0,o.isIntegralNumber)(V[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(V,Z)}decode_single(V,{skip_special_tokens:Z=!1,clean_up_tokenization_spaces:ce=null}){let pe=this.model.convert_ids_to_tokens(V);Z&&(pe=pe.filter(Ve=>!this.special_tokens.includes(Ve)));let Ee=this.decoder?this.decoder(pe):pe.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(Ee=Ee.replaceAll(this.decoder.end_of_word_suffix," "),Z&&(Ee=Ee.trim())),(ce??this.clean_up_tokenization_spaces)&&(Ee=I(Ee)),Ee}get_chat_template({chat_template:V=null,tools:Z=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const ce=this.chat_template;if(V!==null&&Object.hasOwn(ce,V))V=ce[V];else if(V===null)if(Z!==null&&"tool_use"in ce)V=ce.tool_use;else if("default"in ce)V=ce.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(ce).sort()}.`)}else if(V===null)if(this.chat_template)V=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return V}apply_chat_template(V,{tools:Z=null,documents:ce=null,chat_template:pe=null,add_generation_prompt:Ee=!1,tokenize:Ve=!0,padding:Qe=!1,truncation:Ge=!1,max_length:rt=null,return_tensor:bt=!0,return_dict:Rt=!1,tokenizer_kwargs:Lt={},...nr}={}){if(pe=this.get_chat_template({chat_template:pe,tools:Z}),typeof pe!="string")throw Error(`chat_template must be a string, but got ${typeof pe}`);let Gt=this._compiled_template_cache.get(pe);Gt===void 0&&(Gt=new c.Template(pe),this._compiled_template_cache.set(pe,Gt));const fr=Object.create(null);for(const ir of Gs){const gr=this.getToken(ir);gr&&(fr[ir]=gr)}const yr=Gt.render({messages:V,add_generation_prompt:Ee,tools:Z,documents:ce,...fr,...nr});if(Ve){const ir=this._call(yr,{add_special_tokens:!1,padding:Qe,truncation:Ge,max_length:rt,return_tensor:bt,...Lt});return Rt?ir:ir.input_ids}return yr}}class ks extends mt{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class Is extends mt{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class St extends mt{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class Xt extends mt{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class $ extends mt{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class X extends mt{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class j extends mt{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class Q extends mt{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class se extends mt{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class we extends mt{}class Oe extends mt{}class st extends mt{constructor(V,Z){super(V,Z);Y(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class gt extends mt{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class ht extends mt{}class xt extends mt{}class nt extends mt{}class Bt extends mt{constructor(A,V){super(A,V),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(Z=>this.languageRegex.test(Z)),this.lang_to_token=Z=>Z}_build_translation_inputs(A,V,Z){return Dr(this,A,V,Z)}}class Vt extends Bt{}class Nr extends mt{}class Qr extends mt{}const sr="▁";class Sr extends mt{constructor(V,Z){super(V,Z);Y(this,"padding_side","left");this.legacy=Z.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new br({replacement:sr,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(V){if(V===null)return null;if(this.legacy||V.length===0)return super._encode_text(V);let Z=super._encode_text(sr+V.replaceAll(sr," "));return Z.length>1&&Z[0]===sr&&this.special_tokens.includes(Z[1])&&(Z=Z.slice(1)),Z}}class $r extends mt{}class Vr extends mt{}class ls extends mt{}class kr extends mt{}class As extends mt{}class Fs extends mt{}class Ur extends mt{}class Wr extends mt{}class es extends mt{}function Dr(me,A,V,Z){if(!("language_codes"in me)||!Array.isArray(me.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in me)||!(me.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in me)||typeof me.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const ce=Z.src_lang,pe=Z.tgt_lang;if(!me.language_codes.includes(pe))throw new Error(`Target language code "${pe}" is not valid. Must be one of: {${me.language_codes.join(", ")}}`);if(ce!==void 0){if(!me.language_codes.includes(ce))throw new Error(`Source language code "${ce}" is not valid. Must be one of: {${me.language_codes.join(", ")}}`);for(const Ee of me.post_processor.config.single)if("SpecialToken"in Ee&&me.languageRegex.test(Ee.SpecialToken.id)){Ee.SpecialToken.id=me.lang_to_token(ce);break}}return Z.forced_bos_token_id=me.model.convert_tokens_to_ids([me.lang_to_token(pe)])[0],me._call(A,V)}class hs extends mt{constructor(A,V){super(A,V),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(Z=>this.languageRegex.test(Z)),this.lang_to_token=Z=>Z}_build_translation_inputs(A,V,Z){return Dr(this,A,V,Z)}}class mr extends mt{constructor(A,V){super(A,V),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(Z=>this.languageRegex.test(Z)).map(Z=>Z.slice(2,-2)),this.lang_to_token=Z=>`__${Z}__`}_build_translation_inputs(A,V,Z){return Dr(this,A,V,Z)}}class _r extends mt{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(A,{return_timestamps:V=!1,return_language:Z=!1,time_precision:ce=null,force_full_sequences:pe=!0}={}){if(ce===null)throw Error("Must specify time_precision");let Ee=null;const Ve=V==="word";function Qe(){return{language:Ee,timestamp:[null,null],text:""}}const Ge=[];let rt=Qe(),bt=0;const Rt=this.timestamp_begin,nr=Rt+1500;let Gt=[],fr=[],yr=!1,ir=null;const gr=new Set(this.all_special_ids);for(const Zt of A){const wr=Zt.tokens,Kr=Ve?Zt.token_timestamps:null;let Br=null,gs=Rt;if("stride"in Zt){const[ur,ar,hr]=Zt.stride;if(bt-=ar,ir=ur-hr,ar&&(gs=ar/ce+Rt),hr)for(let or=wr.length-1;or>=0;--or){const Hr=Number(wr[or]);if(Hr>=Rt){if(Br!==null&&(Hr-Rt)*ce<ir)break;Br=Hr}}}let Ir=[],cs=[];for(let ur=0;ur<wr.length;++ur){const ar=Number(wr[ur]);if(gr.has(ar)){const hr=this.decode([ar]),or=m.WHISPER_LANGUAGE_MAPPING.get(hr.slice(2,-2));if(or!==void 0){if(Ee!==null&&or!==Ee&&!V){Gt.push(Ir);const Hr=this.findLongestCommonSequence(Gt)[0],Rs=this.decode(Hr);rt.text=Rs,Ge.push(rt),Gt=[],Ir=[],rt=Qe()}Ee=rt.language=or}}else if(ar>=Rt&&ar<=nr){const hr=(ar-Rt)*ce+bt,or=(0,i.round)(hr,2);if(Br!==null&&ar>=Br)yr=!0;else if(yr||Gt.length>0&&ar<gs)yr=!1;else if(rt.timestamp[0]===null)rt.timestamp[0]=or;else if(or!==rt.timestamp[0]){rt.timestamp[1]=or,Gt.push(Ir),Ve&&fr.push(cs);const[Hr,Rs]=this.findLongestCommonSequence(Gt,fr),Bn=this.decode(Hr);rt.text=Bn,Ve&&(rt.words=this.collateWordTimestamps(Hr,Rs,Ee)),Ge.push(rt),Gt=[],Ir=[],fr=[],cs=[],rt=Qe()}}else if(Ir.push(ar),Ve){let hr=(0,i.round)(Kr[ur]+bt,2),or;if(ur+1<Kr.length){or=(0,i.round)(Kr[ur+1]+bt,2);const Hr=this.decode([ar]);T.test(Hr)&&(or=(0,i.round)(Math.min(hr+ce,or),2))}else or=null;cs.push([hr,or])}}if("stride"in Zt){const[ur,ar,hr]=Zt.stride;bt+=ur-hr}Ir.length>0?(Gt.push(Ir),Ve&&fr.push(cs)):Gt.every(ur=>ur.length===0)&&(rt=Qe(),Gt=[],Ir=[],fr=[],cs=[])}if(Gt.length>0){if(pe&&V)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Zt,wr]=this.findLongestCommonSequence(Gt,fr),Kr=this.decode(Zt);rt.text=Kr,Ve&&(rt.words=this.collateWordTimestamps(Zt,wr,Ee)),Ge.push(rt)}let Lr=Object.create(null);const Jr=Ge.map(Zt=>Zt.text).join("");if(V||Z){for(let Zt=0;Zt<Ge.length;++Zt){const wr=Ge[Zt];V||delete wr.timestamp,Z||delete wr.language}if(Ve){const Zt=[];for(const wr of Ge)for(const Kr of wr.words)Zt.push(Kr);Lr={chunks:Zt}}else Lr={chunks:Ge}}return[Jr,Lr]}findLongestCommonSequence(A,V=null){let Z=A[0],ce=Z.length,pe=[];const Ee=Array.isArray(V)&&V.length>0;let Ve=Ee?[]:null,Qe=Ee?V[0]:null;for(let Ge=1;Ge<A.length;++Ge){const rt=A[Ge];let bt=0,Rt=[ce,ce,0,0];const Lt=rt.length;for(let Lr=1;Lr<ce+Lt;++Lr){const Jr=Math.max(0,ce-Lr),Zt=Math.min(ce,ce+Lt-Lr),wr=Z.slice(Jr,Zt),Kr=Math.max(0,Lr-ce),Br=Math.min(Lt,Lr),gs=rt.slice(Kr,Br);if(wr.length!==gs.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Ir;Ee?Ir=wr.filter((ar,hr)=>ar===gs[hr]&&Qe[Jr+hr]<=V[Ge][Kr+hr]).length:Ir=wr.filter((ar,hr)=>ar===gs[hr]).length;const cs=Lr/1e4,ur=Ir/Lr+cs;Ir>1&&ur>bt&&(bt=ur,Rt=[Jr,Zt,Kr,Br])}const[nr,Gt,fr,yr]=Rt,ir=Math.floor((Gt+nr)/2),gr=Math.floor((yr+fr)/2);pe.push(...Z.slice(0,ir)),Z=rt.slice(gr),ce=Z.length,Ee&&(Ve.push(...Qe.slice(0,ir)),Qe=V[Ge].slice(gr))}return pe.push(...Z),Ee?(Ve.push(...Qe),[pe,Ve]):[pe,[]]}collateWordTimestamps(A,V,Z){const[ce,pe,Ee]=this.combineTokensIntoWords(A,Z),Ve=[];for(let Qe=0;Qe<ce.length;++Qe){const Ge=Ee[Qe];Ve.push({text:ce[Qe],timestamp:[V[Ge.at(0)][0],V[Ge.at(-1)][1]]})}return Ve}combineTokensIntoWords(A,V,Z=`"'“¡¿([{-`,ce=`"'.。,，!！?？:：”)]}、`){V=V??"english";let pe,Ee,Ve;return["chinese","japanese","thai","lao","myanmar"].includes(V)?[pe,Ee,Ve]=this.splitTokensOnUnicode(A):[pe,Ee,Ve]=this.splitTokensOnSpaces(A),this.mergePunctuations(pe,Ee,Ve,Z,ce)}decode(A,V){let Z;return V!=null&&V.decode_with_timestamps?(A instanceof a.Tensor&&(A=y(A)),Z=this.decodeWithTimestamps(A,V)):Z=super.decode(A,V),Z}decodeWithTimestamps(A,V){const Z=(V==null?void 0:V.time_precision)??.02,ce=Array.from(this.all_special_ids).at(-1)+1;let pe=[[]];for(let Ee of A)if(Ee=Number(Ee),Ee>=ce){const Ve=((Ee-ce)*Z).toFixed(2);pe.push(`<|${Ve}|>`),pe.push([])}else pe[pe.length-1].push(Ee);return pe=pe.map(Ee=>typeof Ee=="string"?Ee:super.decode(Ee,V)),pe.join("")}splitTokensOnUnicode(A){const V=this.decode(A,{decode_with_timestamps:!0}),Z="�",ce=[],pe=[],Ee=[];let Ve=[],Qe=[],Ge=0;for(let rt=0;rt<A.length;++rt){const bt=A[rt];Ve.push(bt),Qe.push(rt);const Rt=this.decode(Ve,{decode_with_timestamps:!0});(!Rt.includes(Z)||V[Ge+Rt.indexOf(Z)]===Z)&&(ce.push(Rt),pe.push(Ve),Ee.push(Qe),Ve=[],Qe=[],Ge+=Rt.length)}return[ce,pe,Ee]}splitTokensOnSpaces(A){const[V,Z,ce]=this.splitTokensOnUnicode(A),pe=[],Ee=[],Ve=[],Qe=new RegExp(`^[${E}]$`,"gu");for(let Ge=0;Ge<V.length;++Ge){const rt=V[Ge],bt=Z[Ge],Rt=ce[Ge],Lt=bt[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),nr=rt.startsWith(" "),Gt=rt.trim(),fr=Qe.test(Gt);if(Lt||nr||fr||pe.length===0)pe.push(rt),Ee.push(bt),Ve.push(Rt);else{const yr=pe.length-1;pe[yr]+=rt,Ee[yr].push(...bt),Ve[yr].push(...Rt)}}return[pe,Ee,Ve]}mergePunctuations(A,V,Z,ce,pe){const Ee=structuredClone(A),Ve=structuredClone(V),Qe=structuredClone(Z);let Ge=Ee.length-2,rt=Ee.length-1;for(;Ge>=0;)Ee[Ge].startsWith(" ")&&ce.includes(Ee[Ge].trim())?(Ee[rt]=Ee[Ge]+Ee[rt],Ve[rt]=(0,o.mergeArrays)(Ve[Ge],Ve[rt]),Qe[rt]=(0,o.mergeArrays)(Qe[Ge],Qe[rt]),Ee[Ge]="",Ve[Ge]=[],Qe[Ge]=[]):rt=Ge,--Ge;for(Ge=0,rt=1;rt<Ee.length;)!Ee[Ge].endsWith(" ")&&pe.includes(Ee[rt])?(Ee[Ge]+=Ee[rt],Ve[Ge]=(0,o.mergeArrays)(Ve[Ge],Ve[rt]),Qe[Ge]=(0,o.mergeArrays)(Qe[Ge],Qe[rt]),Ee[rt]="",Ve[rt]=[],Qe[rt]=[]):Ge=rt,++rt;return[Ee.filter(bt=>bt),Ve.filter(bt=>bt.length>0),Qe.filter(bt=>bt.length>0)]}}class Xr extends mt{}class Ls extends mt{}class Gr extends mt{}class je extends mt{constructor(A,V){super(A,V),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(Z=>this.languageRegex.test(Z)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(A){if(A===null)return null;const[V,...Z]=A.trim().split(this.languageRegex);if(Z.length===0)return super._encode_text(V);if(Z.length===2){const[ce,pe]=Z;return this.supported_language_codes.includes(ce)||console.warn(`Unsupported language code "${ce}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,o.mergeArrays)([ce],super._encode_text(pe))}}}class Ne extends mt{}class tt extends mt{}class Jt extends mt{}class zs extends mt{}class _s extends mt{}class Bs extends mt{constructor(A,V){super(A,V),this.decoder=new Mt({})}}class fs extends mt{}class ln extends mt{}class cn extends mt{}class un{static async from_pretrained(A,{progress_callback:V=null,config:Z=null,cache_dir:ce=null,local_files_only:pe=!1,revision:Ee="main",legacy:Ve=null}={}){var Rt;const[Qe,Ge]=await d(A,{progress_callback:V,config:Z,cache_dir:ce,local_files_only:pe,revision:Ee,legacy:Ve}),rt=((Rt=Ge.tokenizer_class)==null?void 0:Rt.replace(/Fast$/,""))??"PreTrainedTokenizer";let bt=this.TOKENIZER_CLASS_MAPPING[rt];return bt||(console.warn(`Unknown tokenizer class "${rt}", attempting to construct from base class.`),bt=mt),new bt(Qe,Ge)}}Y(un,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:ht,DistilBertTokenizer:we,CamembertTokenizer:Oe,DebertaTokenizer:$,DebertaV2Tokenizer:X,BertTokenizer:ks,HerbertTokenizer:j,ConvBertTokenizer:Q,RoFormerTokenizer:se,XLMTokenizer:st,ElectraTokenizer:gt,MobileBertTokenizer:St,SqueezeBertTokenizer:Xt,AlbertTokenizer:Is,GPT2Tokenizer:xt,BartTokenizer:nt,MBartTokenizer:Bt,MBart50Tokenizer:Vt,RobertaTokenizer:Nr,WhisperTokenizer:_r,CodeGenTokenizer:Xr,CLIPTokenizer:Ls,SiglipTokenizer:Gr,MarianTokenizer:je,BloomTokenizer:Qr,NllbTokenizer:hs,M2M100Tokenizer:mr,LlamaTokenizer:Sr,CodeLlamaTokenizer:$r,XLMRobertaTokenizer:Vr,MPNetTokenizer:ls,FalconTokenizer:kr,GPTNeoXTokenizer:As,EsmTokenizer:Fs,Wav2Vec2CTCTokenizer:Ne,BlenderbotTokenizer:tt,BlenderbotSmallTokenizer:Jt,SpeechT5Tokenizer:zs,NougatTokenizer:_s,VitsTokenizer:Bs,Qwen2Tokenizer:Ur,GemmaTokenizer:Wr,Grok1Tokenizer:es,CohereTokenizer:fs,MgpstrTokenizer:ln,Ernie4_5_Tokenizer:cn,PreTrainedTokenizer:mt})},"./src/utils/audio.js":(e,r,t)=>{t.r(r),t.d(r,{RawAudio:()=>H,hamming:()=>u,hanning:()=>d,mel_filter_bank:()=>k,read_audio:()=>c,spectrogram:()=>C,window_function:()=>D});var s=t("./src/utils/hub.js"),o=t("./src/utils/maths.js"),n=t("./src/utils/core.js"),i=t("./src/env.js"),a=t("./src/utils/tensor.js"),l=t("?7992");async function c(R,re){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const q=await(await(0,s.getFile)(R)).arrayBuffer(),te=new AudioContext({sampleRate:re});typeof re>"u"&&console.warn(`No sampling rate provided, using default of ${te.sampleRate}Hz.`);const ee=await te.decodeAudioData(q);let ie;if(ee.numberOfChannels===2){const he=Math.sqrt(2),de=ee.getChannelData(0),N=ee.getChannelData(1);ie=new Float32Array(de.length);for(let O=0;O<ee.length;++O)ie[O]=he*(de[O]+N[O])/2}else ie=ee.getChannelData(0);return ie}function m(R,re){if(R<1)return new Float64Array;if(R===1)return new Float64Array([1]);const q=1-re,te=2*Math.PI/(R-1),ee=new Float64Array(R);for(let ie=0;ie<R;++ie)ee[ie]=re-q*Math.cos(ie*te);return ee}function d(R){return m(R,.5)}function u(R){return m(R,.54)}const g={htk:R=>2595*Math.log10(1+R/700),kaldi:R=>1127*Math.log(1+R/700),slaney:(R,re=1e3,q=15,te=27/Math.log(6.4))=>R>=re?q+Math.log(R/re)*te:3*R/200};function f(R,re="htk"){const q=g[re];if(!q)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof R=="number"?q(R):R.map(te=>q(te))}const y={htk:R=>700*(10**(R/2595)-1),kaldi:R=>700*(Math.exp(R/1127)-1),slaney:(R,re=1e3,q=15,te=Math.log(6.4)/27)=>R>=q?re*Math.exp(te*(R-q)):200*R/3};function I(R,re="htk"){const q=y[re];if(!q)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof R=="number"?q(R):R.map(te=>q(te))}function w(R,re){const q=Float64Array.from({length:re.length-1},(he,de)=>re[de+1]-re[de]),te=Array.from({length:R.length},()=>new Array(re.length));for(let he=0;he<R.length;++he){const de=te[he];for(let N=0;N<re.length;++N)de[N]=re[N]-R[he]}const ee=re.length-2,ie=Array.from({length:ee},()=>new Array(R.length));for(let he=0;he<R.length;++he){const de=te[he];for(let N=0;N<ee;++N){const O=-de[N]/q[N],W=de[N+2]/q[N+1];ie[N][he]=Math.max(0,Math.min(O,W))}}return ie}function b(R,re,q){const te=(re-R)/(q-1);return Float64Array.from({length:q},(ee,ie)=>R+te*ie)}function k(R,re,q,te,ee,ie=null,he="htk",de=!1){if(ie!==null&&ie!=="slaney")throw new Error('norm must be one of null or "slaney"');if(R<2)throw new Error(`Require num_frequency_bins: ${R} >= 2`);if(q>te)throw new Error(`Require min_frequency: ${q} <= max_frequency: ${te}`);const N=f(q,he),O=f(te,he),W=b(N,O,re+2);let ne=I(W,he),fe;if(de){const xe=ee/((R-1)*2);fe=f(Float64Array.from({length:R},(Be,Ke)=>Ke*xe),he),ne=W}else fe=b(0,Math.floor(ee/2),R);const ae=w(fe,ne);if(ie!==null&&ie==="slaney")for(let xe=0;xe<re;++xe){const Be=ae[xe],Ke=2/(ne[xe+2]-ne[xe]);for(let Ae=0;Ae<R;++Ae)Be[Ae]*=Ke}return ae}function x(R,re,q){const te=new R.constructor(R.length+re+q),ee=R.length-1;for(let ie=0;ie<R.length;++ie)te[re+ie]=R[ie];for(let ie=1;ie<=re;++ie)te[re-ie]=R[(0,n.calculateReflectOffset)(ie,ee)];for(let ie=1;ie<=q;++ie)te[ee+re+ie]=R[(0,n.calculateReflectOffset)(ee-ie,ee)];return te}function v(R,re,q,te,ee){if(q<=0)throw new Error("reference must be greater than zero");if(te<=0)throw new Error("min_value must be greater than zero");q=Math.max(te,q);const ie=Math.log10(q);for(let he=0;he<R.length;++he)R[he]=re*Math.log10(Math.max(te,R[he])-ie);if(ee!==null){if(ee<=0)throw new Error("db_range must be greater than zero");const he=(0,o.max)(R)[0]-ee;for(let de=0;de<R.length;++de)R[de]=Math.max(R[de],he)}return R}function E(R,re=1,q=1e-5,te=null){return v(R,20,re,q,te)}function T(R,re=1,q=1e-10,te=null){return v(R,10,re,q,te)}async function C(R,re,q,te,{fft_length:ee=null,power:ie=1,center:he=!0,pad_mode:de="reflect",onesided:N=!0,preemphasis:O=null,preemphasis_htk_flavor:W=!0,mel_filters:ne=null,mel_floor:fe=1e-10,log_mel:ae=null,reference:xe=1,min_value:Be=1e-10,db_range:Ke=null,remove_dc_offset:Ae=null,min_num_frames:J=null,max_num_frames:le=null,do_pad:G=!0,transpose:ye=!1}={}){const Ie=re.length;if(ee===null&&(ee=q),q>ee)throw Error(`frame_length (${q}) may not be larger than fft_length (${ee})`);if(Ie!==q)throw new Error(`Length of the window (${Ie}) must equal frame_length (${q})`);if(te<=0)throw new Error("hop_length must be greater than zero");if(ie===null&&ne!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(!W)throw new Error("`preemphasis_htk_flavor=false` is not currently supported.");if(he){if(de!=="reflect")throw new Error(`pad_mode="${de}" not implemented yet.`);const Ye=Math.floor((ee-1)/2)+1;R=x(R,Ye,Ye)}let Pe=Math.floor(1+Math.floor((R.length-q)/te));J!==null&&Pe<J&&(Pe=J);const be=N?Math.floor(ee/2)+1:ee;let $e=Pe,Me=Pe;le!==null&&(le>Pe?G&&(Me=le):Me=$e=le);const Fe=new o.FFT(ee),Re=new Float64Array(ee),Xe=new Float64Array(Fe.outputBufferSize),Te=new Float32Array(be*Me);for(let Ye=0;Ye<$e;++Ye){const De=Ye*te,Ze=Math.min(R.length-De,q);Ze!==q&&Re.fill(0,0,q);for(let it=0;it<Ze;++it)Re[it]=R[De+it];if(Ae){let it=0;for(let $t=0;$t<Ze;++$t)it+=Re[$t];const At=it/Ze;for(let $t=0;$t<Ze;++$t)Re[$t]-=At}if(O!==null){for(let it=Ze-1;it>=1;--it)Re[it]-=O*Re[it-1];Re[0]*=1-O}for(let it=0;it<re.length;++it)Re[it]*=re[it];Fe.realTransform(Xe,Re);for(let it=0;it<be;++it){const At=it<<1;Te[it*Me+Ye]=Xe[At]**2+Xe[At+1]**2}}if(ie!==null&&ie!==2){const Ye=ie/2;for(let De=0;De<Te.length;++De)Te[De]**=Ye}const et=ne.length;let He=await(0,a.matmul)(new a.Tensor("float32",ne.flat(),[et,be]),new a.Tensor("float32",Te,[be,Me]));ye&&(He=He.transpose(1,0));const ot=He.data;for(let Ye=0;Ye<ot.length;++Ye)ot[Ye]=Math.max(fe,ot[Ye]);if(ie!==null&&ae!==null){const Ye=Math.min(ot.length,$e*et);switch(ae){case"log":for(let De=0;De<Ye;++De)ot[De]=Math.log(ot[De]);break;case"log10":for(let De=0;De<Ye;++De)ot[De]=Math.log10(ot[De]);break;case"dB":if(ie===1)E(ot,xe,Be,Ke);else if(ie===2)T(ot,xe,Be,Ke);else throw new Error(`Cannot use log_mel option '${ae}' with power ${ie}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${ae}'`)}}return He}function D(R,re,{periodic:q=!0,frame_length:te=null,center:ee=!0}={}){const ie=q?R+1:R;let he;switch(re){case"boxcar":he=new Float64Array(ie).fill(1);break;case"hann":case"hann_window":he=d(ie);break;case"hamming":he=u(ie);break;case"povey":he=d(ie).map(de=>Math.pow(de,.85));break;default:throw new Error(`Unknown window type ${re}.`)}if(q&&(he=he.subarray(0,R)),te===null)return he;if(R>te)throw new Error(`Length of the window (${R}) may not be larger than frame_length (${te})`);return he}function z(R,re){let q=44;const te=new ArrayBuffer(q+R.length*4),ee=new DataView(te);K(ee,0,"RIFF"),ee.setUint32(4,36+R.length*4,!0),K(ee,8,"WAVE"),K(ee,12,"fmt "),ee.setUint32(16,16,!0),ee.setUint16(20,3,!0),ee.setUint16(22,1,!0),ee.setUint32(24,re,!0),ee.setUint32(28,re*4,!0),ee.setUint16(32,4,!0),ee.setUint16(34,32,!0),K(ee,36,"data"),ee.setUint32(40,R.length*4,!0);for(let ie=0;ie<R.length;++ie,q+=4)ee.setFloat32(q,R[ie],!0);return te}function K(R,re,q){for(let te=0;te<q.length;++te)R.setUint8(re+te,q.charCodeAt(te))}class H{constructor(re,q){this.audio=re,this.sampling_rate=q}toWav(){return z(this.audio,this.sampling_rate)}toBlob(){const re=this.toWav();return new Blob([re],{type:"audio/wav"})}async save(re){let q;if(i.apis.IS_BROWSER_ENV){if(i.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");q=n.saveBlob}else if(i.apis.IS_FS_AVAILABLE)q=async(te,ee)=>{let ie=await ee.arrayBuffer();l.writeFileSync(te,Buffer.from(ie))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await q(re,this.toBlob())}}},"./src/utils/constants.js":(e,r,t)=>{t.r(r),t.d(r,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>o,FEATURE_EXTRACTOR_NAME:()=>n,GENERATION_CONFIG_NAME:()=>c,GITHUB_ISSUE_URL:()=>s,IMAGE_PROCESSOR_NAME:()=>i,PROCESSOR_NAME:()=>a});const s="https://github.com/huggingface/transformers.js/issues/new/choose",o="config.json",n="preprocessor_config.json",i=n,a="processor_config.json",l="chat_template.jinja",c="generation_config.json"},"./src/utils/core.js":(e,r,t)=>{t.r(r),t.d(r,{calculateDimensions:()=>c,calculateReflectOffset:()=>g,count:()=>w,dispatchCallback:()=>s,escapeRegExp:()=>n,isIntegralNumber:()=>a,isNullishDimension:()=>l,isTypedArray:()=>i,len:()=>I,mergeArrays:()=>d,pick:()=>y,pop:()=>m,product:()=>u,reverseDictionary:()=>o,saveBlob:()=>f});function s(b,k){b&&b(k)}function o(b){return Object.fromEntries(Object.entries(b).map(([k,x])=>[x,k]))}function n(b){return b.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function i(b){var k,x,v;return((v=(x=(k=b==null?void 0:b.prototype)==null?void 0:k.__proto__)==null?void 0:x.constructor)==null?void 0:v.name)==="TypedArray"}function a(b){return Number.isInteger(b)||typeof b=="bigint"}function l(b){return b==null||b===-1}function c(b){const k=[];let x=b;for(;Array.isArray(x);)k.push(x.length),x=x[0];return k}function m(b,k,x=void 0){const v=b[k];if(v!==void 0)return delete b[k],v;if(x===void 0)throw Error(`Key ${k} does not exist in object.`);return x}function d(...b){return Array.prototype.concat.apply([],b)}function u(...b){return b.reduce((k,x)=>k.flatMap(v=>x.map(E=>[v,E])))}function g(b,k){return Math.abs((b+k)%(2*k)-k)}function f(b,k){const x=URL.createObjectURL(k),v=document.createElement("a");v.href=x,v.download=b,v.click(),v.remove(),URL.revokeObjectURL(x)}function y(b,k){return Object.assign({},...k.map(x=>{if(b[x]!==void 0)return{[x]:b[x]}}))}function I(b){let k=0;for(const x of b)++k;return k}function w(b,k){let x=0;for(const v of b)v===k&&++x;return x}},"./src/utils/data-structures.js":(e,r,t)=>{t.r(r),t.d(r,{CharTrie:()=>o,DictionarySplitter:()=>l,LRUCache:()=>c,PriorityQueue:()=>s,TokenLattice:()=>i});class s{constructor(d=(g,f)=>g>f,u=1/0){this._heap=[],this._comparator=d,this._maxSize=u}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...d){return this.extend(d)}extend(d){for(const u of d)if(this.size<this._maxSize)this._heap.push(u),this._siftUp();else{const g=this._smallest();this._comparator(u,this._heap[g])&&(this._heap[g]=u,this._siftUpFrom(g))}return this.size}pop(){const d=this.peek(),u=this.size-1;return u>0&&this._swap(0,u),this._heap.pop(),this._siftDown(),d}replace(d){const u=this.peek();return this._heap[0]=d,this._siftDown(),u}_parent(d){return(d+1>>>1)-1}_left(d){return(d<<1)+1}_right(d){return d+1<<1}_greater(d,u){return this._comparator(this._heap[d],this._heap[u])}_swap(d,u){const g=this._heap[d];this._heap[d]=this._heap[u],this._heap[u]=g}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(d){for(;d>0&&this._greater(d,this._parent(d));)this._swap(d,this._parent(d)),d=this._parent(d)}_siftDown(){let d=0;for(;this._left(d)<this.size&&this._greater(this._left(d),d)||this._right(d)<this.size&&this._greater(this._right(d),d);){const u=this._right(d)<this.size&&this._greater(this._right(d),this._left(d))?this._right(d):this._left(d);this._swap(d,u),d=u}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class o{constructor(){this.root=n.default()}extend(d){for(const u of d)this.push(u)}push(d){let u=this.root;for(const g of d){let f=u.children.get(g);f===void 0&&(f=n.default(),u.children.set(g,f)),u=f}u.isLeaf=!0}*commonPrefixSearch(d){let u=this.root;if(u===void 0)return;let g="";for(const f of d){if(g+=f,u=u.children.get(f),u===void 0)return;u.isLeaf&&(yield g)}}}class n{constructor(d,u){this.isLeaf=d,this.children=u}static default(){return new n(!1,new Map)}}class i{constructor(d,u,g){this.chars=Array.from(d),this.len=this.chars.length,this.bosTokenId=u,this.eosTokenId=g,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const f=new a(this.bosTokenId,0,0,0,0),y=new a(this.eosTokenId,1,this.len,0,0);this.nodes.push(f.clone()),this.nodes.push(y.clone()),this.beginNodes[this.len].push(y),this.endNodes[0].push(f)}insert(d,u,g,f){const y=this.nodes.length,I=new a(f,y,d,u,g);this.beginNodes[d].push(I),this.endNodes[d+u].push(I),this.nodes.push(I)}viterbi(){const d=this.len;let u=0;for(;u<=d;){if(this.beginNodes[u].length==0)return[];for(let w of this.beginNodes[u]){w.prev=null;let b=0,k=null;for(let x of this.endNodes[u]){const v=x.backtraceScore+w.score;(k===null||v>b)&&(k=x.clone(),b=v)}if(k!==null)w.prev=k,w.backtraceScore=b;else return[]}++u}const g=[],y=this.beginNodes[d][0].prev;if(y===null)return[];let I=y.clone();for(;I.prev!==null;)g.push(I.clone()),I=I.clone().prev.clone();return g.reverse(),g}piece(d){return this.chars.slice(d.pos,d.pos+d.length).join("")}tokens(){return this.viterbi().map(u=>this.piece(u))}tokenIds(){return this.viterbi().map(u=>u.tokenId)}}class a{constructor(d,u,g,f,y){this.tokenId=d,this.nodeId=u,this.pos=g,this.length=f,this.score=y,this.prev=null,this.backtraceScore=0}clone(){const d=new a(this.tokenId,this.nodeId,this.pos,this.length,this.score);return d.prev=this.prev,d.backtraceScore=this.backtraceScore,d}}class l{constructor(d){this.trie=this._buildTrie(d)}_buildTrie(d){var g;const u=Object.create(null);for(const f of d){let y=u;for(let I=0;I<f.length;++I)y=y[g=f[I]]??(y[g]=Object.create(null));y.end=f}return u}split(d){const u=[],g=d.length;let f=0,y=0;for(;y<g;){let I=this.trie,w=null,b=y;for(;b<g&&(I=I[d[b]]);)I.end&&(w=I.end),++b;w?(y>f&&u.push(d.slice(f,y)),u.push(w),y+=w.length,f=y):++y}return f<g&&u.push(d.slice(f)),u}}class c{constructor(d){this.capacity=d,this.cache=new Map}get(d){if(!this.cache.has(d))return;const u=this.cache.get(d);return this.cache.delete(d),this.cache.set(d,u),u}put(d,u){this.cache.has(d)&&this.cache.delete(d),this.cache.set(d,u),this.cache.size>this.capacity&&this.cache.delete(this.cache.keys().next().value)}clear(){this.cache.clear()}}},"./src/utils/devices.js":(e,r,t)=>{t.r(r),t.d(r,{DEVICE_TYPES:()=>s});const s=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(e,r,t)=>{t.r(r),t.d(r,{DATA_TYPES:()=>i,DEFAULT_DEVICE_DTYPE_MAPPING:()=>a,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>n});var s=t("./src/env.js"),o=t("./src/utils/devices.js");const n=function(){let c;return async function(){if(c===void 0)if(!s.apis.IS_WEBGPU_AVAILABLE)c=!1;else try{c=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{c=!1}return c}}(),i=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),a=Object.freeze({[o.DEVICE_TYPES.wasm]:i.q8}),l=Object.freeze({[i.fp32]:"",[i.fp16]:"_fp16",[i.int8]:"_int8",[i.uint8]:"_uint8",[i.q8]:"_quantized",[i.q4]:"_q4",[i.q4f16]:"_q4f16",[i.bnb4]:"_bnb4"})},"./src/utils/generic.js":(e,r,t)=>{t.r(r),t.d(r,{Callable:()=>s});const s=class{constructor(){let o=function(...n){return o._call(...n)};return Object.setPrototypeOf(o,new.target.prototype)}_call(...o){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(e,r,t)=>{t.r(r),t.d(r,{MAX_EXTERNAL_DATA_CHUNKS:()=>a,getFile:()=>g,getModelFile:()=>b,getModelJSON:()=>x,getModelText:()=>k});var s=t("?7992"),o=t("?5af5"),n=t("./src/env.js"),i=t("./src/utils/core.js");const a=100,l={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class c{constructor(C){if(this.filePath=C,this.headers=new Headers,this.exists=s.existsSync(C),this.exists){this.status=200,this.statusText="OK";let D=s.statSync(C);this.headers.set("content-length",D.size.toString()),this.updateContentType();const z=s.createReadStream(C);this.body=new ReadableStream({start(K){z.on("data",H=>K.enqueue(H)),z.on("end",()=>K.close()),z.on("error",H=>K.error(H))},cancel(){z.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const C=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",l[C]??"application/octet-stream")}clone(){let C=new c(this.filePath);return C.exists=this.exists,C.status=this.status,C.statusText=this.statusText,C.headers=new Headers(this.headers),C}async arrayBuffer(){return(await s.promises.readFile(this.filePath)).buffer}async blob(){const C=await s.promises.readFile(this.filePath);return new Blob([C],{type:this.headers.get("content-type")})}async text(){return await s.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function m(T,C=null,D=null){let z;try{z=new URL(T)}catch{return!1}return!(C&&!C.includes(z.protocol)||D&&!D.includes(z.hostname))}const d=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;function u(T){return!(!d.test(T)||T.includes("..")||T.includes("--")||T.endsWith(".git")||T.endsWith(".ipynb"))}async function g(T){var C;if(n.env.useFS&&!m(T,["http:","https:","blob:"]))return new c(T instanceof URL?T.protocol==="file:"?T.pathname:T.toString():T);if(typeof process<"u"&&((C=process==null?void 0:process.release)==null?void 0:C.name)==="node"){const D=!!(Ns!=null&&Ns.TESTING_REMOTELY),z=n.env.version,K=new Headers;if(K.set("User-Agent",`transformers.js/${z}; is_ci/${D};`),m(T,["http:","https:"],["huggingface.co","hf.co"])){const R=(Ns==null?void 0:Ns.HF_TOKEN)??(Ns==null?void 0:Ns.HF_ACCESS_TOKEN);R&&K.set("Authorization",`Bearer ${R}`)}return fetch(T,{headers:K})}else return fetch(T)}const f={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function y(T,C,D){if(!D)return null;const z=f[T]??`Error (${T}) occurred while trying to load file`;throw Error(`${z}: "${C}".`)}class I{constructor(C){this.path=C}async match(C){let D=o.join(this.path,C),z=new c(D);if(z.exists)return z}async put(C,D,z=void 0){let K=o.join(this.path,C);try{const H=D.headers.get("Content-Length"),R=parseInt(H??"0");let re=0;await s.promises.mkdir(o.dirname(K),{recursive:!0});const q=s.createWriteStream(K),te=D.body.getReader();for(;;){const{done:ee,value:ie}=await te.read();if(ee)break;await new Promise((de,N)=>{q.write(ie,O=>{if(O){N(O);return}de()})}),re+=ie.length;const he=R?re/R*100:0;z==null||z({progress:he,loaded:re,total:R})}q.close()}catch(H){try{await s.promises.unlink(K)}catch{}throw H}}}async function w(T,...C){for(let D of C)try{let z=await T.match(D);if(z)return z}catch{continue}}async function b(T,C,D=!0,z={},K=!1){if(!n.env.allowLocalModels){if(z.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!n.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,i.dispatchCallback)(z.progress_callback,{status:"initiate",name:T,file:C});let H;if(!H&&n.env.useCustomCache){if(!n.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!n.env.customCache.match||!n.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");H=n.env.customCache}if(!H&&n.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{H=await caches.open("transformers-cache")}catch(fe){console.warn("An error occurred while opening the browser cache:",fe)}}if(!H&&n.env.useFSCache){if(!n.apis.IS_FS_AVAILABLE)throw Error("File System Cache is not available in this environment.");H=new I(z.cache_dir??n.env.cacheDir)}const R=z.revision??"main",re=E(T,C),q=u(T),te=q?E(n.env.localModelPath,re):re,ee=E(n.env.remoteHost,n.env.remotePathTemplate.replaceAll("{model}",T).replaceAll("{revision}",encodeURIComponent(R)),C);let ie;const he=H instanceof I?R==="main"?re:E(T,R,C):ee;let de=!1,N;H&&(N=await w(H,te,he));const O=N!==void 0;if(N===void 0){if(n.env.allowLocalModels)if(m(re,["http:","https:"])){if(z.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${re}.`);if(!n.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${re}.`)}else try{N=await g(te),ie=te}catch(ae){console.warn(`Unable to load from local path "${te}": "${ae}"`)}if(N===void 0||N.status===404){if(z.local_files_only||!n.env.allowRemoteModels){if(D)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${te}".`);return null}if(!q)throw Error(`Local file missing at "${te}" and download aborted due to invalid model ID "${T}".`);if(N=await g(ee),N.status!==200)return y(N.status,ee,D);ie=he}de=H&&typeof Response<"u"&&N instanceof Response&&N.status===200}(0,i.dispatchCallback)(z.progress_callback,{status:"download",name:T,file:C});let W;if(!(n.apis.IS_NODE_ENV&&K)){let fe;z.progress_callback?O&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(fe=new Uint8Array(await N.arrayBuffer()),(0,i.dispatchCallback)(z.progress_callback,{status:"progress",name:T,file:C,progress:100,loaded:fe.length,total:fe.length})):fe=await v(N,ae=>{(0,i.dispatchCallback)(z.progress_callback,{status:"progress",name:T,file:C,...ae})}):fe=new Uint8Array(await N.arrayBuffer()),W=fe}if(de&&ie&&await H.match(ie)===void 0&&(W?await H.put(ie,new Response(W,{headers:N.headers})).catch(fe=>{console.warn(`Unable to add response to browser cache: ${fe}.`)}):await H.put(ie,N,z.progress_callback)),(0,i.dispatchCallback)(z.progress_callback,{status:"done",name:T,file:C}),W){if(!n.apis.IS_NODE_ENV&&K)throw new Error("Cannot return path in a browser environment.");return W}if(N instanceof c)return N.filePath;const ne=await(H==null?void 0:H.match(ie));if(ne instanceof c)return ne.filePath;if(ne instanceof Response)return new Uint8Array(await ne.arrayBuffer());if(typeof ne=="string")return ne;throw new Error("Unable to get model file path or buffer.")}async function k(T,C,D=!0,z={}){const K=await b(T,C,D,z,!1);return K===null?null:new TextDecoder("utf-8").decode(K)}async function x(T,C,D=!0,z={}){const K=await k(T,C,D,z);return K===null?{}:JSON.parse(K)}async function v(T,C){const D=T.headers.get("Content-Length");D===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let z=parseInt(D??"0"),K=new Uint8Array(z),H=0;const R=T.body.getReader();async function re(){const{done:q,value:te}=await R.read();if(q)return;const ee=H+te.length;if(ee>z){z=ee;const he=new Uint8Array(z);he.set(K),K=he}K.set(te,H),H=ee;const ie=H/z*100;return C({progress:ie,loaded:H,total:z}),re()}return await re(),K}function E(...T){return T=T.map((C,D)=>(D&&(C=C.replace(new RegExp("^/"),"")),D!==T.length-1&&(C=C.replace(new RegExp("/$"),"")),C)),T.join("/")}},"./src/utils/image.js":(e,r,t)=>{t.r(r),t.d(r,{RawImage:()=>f,load_image:()=>y});var s=t("./src/utils/core.js"),o=t("./src/utils/hub.js"),n=t("./src/env.js"),i=t("./src/utils/tensor.js"),a=t("?2b25");let l,c,m;const d=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV;if(d)l=(I,w)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(I,w)},m=self.createImageBitmap,c=self.ImageData;else if(a)m=async I=>{const b=(await I.metadata()).channels,{data:k,info:x}=await I.rotate().raw().toBuffer({resolveWithObject:!0}),v=new f(new Uint8ClampedArray(k),x.width,x.height,x.channels);return b!==void 0&&b!==x.channels&&v.convert(b),v};else throw new Error("Unable to load image processing library.");const u={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},g=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class f{constructor(w,b,k,x){this.data=w,this.width=b,this.height=k,this.channels=x}get size(){return[this.width,this.height]}static async read(w){if(w instanceof f)return w;if(typeof w=="string"||w instanceof URL)return await this.fromURL(w);if(w instanceof Blob)return await this.fromBlob(w);if(typeof HTMLCanvasElement<"u"&&w instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&w instanceof OffscreenCanvas)return this.fromCanvas(w);throw new Error(`Unsupported input type: ${typeof w}`)}static fromCanvas(w){if(!d)throw new Error("fromCanvas() is only supported in browser environments.");const k=w.getContext("2d").getImageData(0,0,w.width,w.height).data;return new f(k,w.width,w.height,4)}static async fromURL(w){const b=await(0,o.getFile)(w);if(b.status!==200)throw new Error(`Unable to read image from "${w}" (${b.status} ${b.statusText})`);const k=await b.blob();return this.fromBlob(k)}static async fromBlob(w){if(d){const b=await m(w),k=l(b.width,b.height).getContext("2d");return k.drawImage(b,0,0),new this(k.getImageData(0,0,b.width,b.height).data,b.width,b.height,4)}else{const b=a(await w.arrayBuffer());return await m(b)}}static fromTensor(w,b="CHW"){if(w.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${w.dims.length} dimensions.`);if(b==="CHW")w=w.transpose(1,2,0);else if(b!=="HWC")throw new Error(`Unsupported channel format: ${b}`);if(!(w.data instanceof Uint8ClampedArray||w.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${w.type}`);switch(w.dims[2]){case 1:case 2:case 3:case 4:return new f(w.data,w.dims[1],w.dims[0],w.dims[2]);default:throw new Error(`Unsupported number of channels: ${w.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const w=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let b=0,k=0;b<this.data.length;b+=this.channels){const x=this.data[b],v=this.data[b+1],E=this.data[b+2];w[k++]=Math.round(.2989*x+.587*v+.114*E)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(w,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const w=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let b=0,k=0;b<this.data.length;++b)w[k++]=this.data[b],w[k++]=this.data[b],w[k++]=this.data[b];break;case 4:for(let b=0,k=0;b<this.data.length;b+=4)w[k++]=this.data[b],w[k++]=this.data[b+1],w[k++]=this.data[b+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(w,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const w=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let b=0,k=0;b<this.data.length;++b)w[k++]=this.data[b],w[k++]=this.data[b],w[k++]=this.data[b],w[k++]=255;break;case 3:for(let b=0,k=0;b<this.data.length;b+=3)w[k++]=this.data[b],w[k++]=this.data[b+1],w[k++]=this.data[b+2],w[k++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(w,this.width,this.height,4)}putAlpha(w){if(w.width!==this.width||w.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${w.width}x${w.height}`);if(w.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${w.channels}`);const b=this.data,k=w.data,x=this.width*this.height;if(this.channels===3){const v=new Uint8ClampedArray(x*4);for(let E=0,T=0,C=0;E<x;++E)v[C++]=b[T++],v[C++]=b[T++],v[C++]=b[T++],v[C++]=k[E];return this._update(v,this.width,this.height,4)}else if(this.channels===4){for(let v=0;v<x;++v)b[4*v+3]=k[v];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(w,b,{resample:k=2}={}){if(this.width===w&&this.height===b)return this;let x=u[k]??k;const v=(0,s.isNullishDimension)(w),E=(0,s.isNullishDimension)(b);if(v&&E)return this;if(v?w=b/this.height*this.width:E&&(b=w/this.width*this.height),d){const T=this.channels,C=this.toCanvas(),D=l(w,b).getContext("2d");return D.drawImage(C,0,0,w,b),new f(D.getImageData(0,0,w,b).data,w,b,4).convert(T)}else{let T=this.toSharp();switch(x){case"box":case"hamming":(x==="box"||x==="hamming")&&(console.warn(`Resampling method ${x} is not yet supported. Using bilinear instead.`),x="bilinear");case"nearest":case"bilinear":case"bicubic":T=T.affine([w/this.width,0,0,b/this.height],{interpolator:x});break;case"lanczos":T=T.resize({width:w,height:b,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${x} is not supported.`)}return await m(T)}}async pad([w,b,k,x]){if(w=Math.max(w,0),b=Math.max(b,0),k=Math.max(k,0),x=Math.max(x,0),w===0&&b===0&&k===0&&x===0)return this;if(d){const v=this.channels,E=this.toCanvas(),T=this.width+w+b,C=this.height+k+x,D=l(T,C).getContext("2d");return D.drawImage(E,0,0,this.width,this.height,w,k,this.width,this.height),new f(D.getImageData(0,0,T,C).data,T,C,4).convert(v)}else{const v=this.toSharp().extend({left:w,right:b,top:k,bottom:x});return await m(v)}}async crop([w,b,k,x]){if(w=Math.max(w,0),b=Math.max(b,0),k=Math.min(k,this.width-1),x=Math.min(x,this.height-1),w===0&&b===0&&k===this.width-1&&x===this.height-1)return this;const v=k-w+1,E=x-b+1;if(d){const T=this.channels,C=this.toCanvas(),D=l(v,E).getContext("2d");return D.drawImage(C,w,b,v,E,0,0,v,E),new f(D.getImageData(0,0,v,E).data,v,E,4).convert(T)}else{const T=this.toSharp().extract({left:w,top:b,width:v,height:E});return await m(T)}}async center_crop(w,b){if(this.width===w&&this.height===b)return this;const k=(this.width-w)/2,x=(this.height-b)/2;if(d){const v=this.channels,E=this.toCanvas(),T=l(w,b).getContext("2d");let C=0,D=0,z=0,K=0;return k>=0?C=k:z=-k,x>=0?D=x:K=-x,T.drawImage(E,C,D,w,b,z,K,w,b),new f(T.getImageData(0,0,w,b).data,w,b,4).convert(v)}else{let v=this.toSharp();if(k>=0&&x>=0)v=v.extract({left:Math.floor(k),top:Math.floor(x),width:w,height:b});else if(k<=0&&x<=0){const E=Math.floor(-x),T=Math.floor(-k);v=v.extend({top:E,left:T,right:w-this.width-T,bottom:b-this.height-E})}else{let E=[0,0],T=0;x<0?(E[0]=Math.floor(-x),E[1]=b-this.height-E[0]):T=Math.floor(x);let C=[0,0],D=0;k<0?(C[0]=Math.floor(-k),C[1]=w-this.width-C[0]):D=Math.floor(k),v=v.extend({top:E[0],bottom:E[1],left:C[0],right:C[1]}).extract({left:D,top:T,width:w,height:b})}return await m(v)}}async toBlob(w="image/png",b=1){if(!d)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:w,quality:b})}toTensor(w="CHW"){let b=new i.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(w!=="HWC")if(w==="CHW")b=b.permute(2,0,1);else throw new Error(`Unsupported channel format: ${w}`);return b}toCanvas(){if(!d)throw new Error("toCanvas() is only supported in browser environments.");const w=this.clone().rgba(),b=l(w.width,w.height),k=new c(w.data,w.width,w.height);return b.getContext("2d").putImageData(k,0,0),b}split(){const{data:w,width:b,height:k,channels:x}=this,v=w.constructor,E=w.length/x,T=Array.from({length:x},()=>new v(E));for(let C=0;C<E;++C){const D=x*C;for(let z=0;z<x;++z)T[z][C]=w[D+z]}return T.map(C=>new f(C,b,k,1))}_update(w,b,k,x=null){return this.data=w,this.width=b,this.height=k,x!==null&&(this.channels=x),this}clone(){return new f(this.data.slice(),this.width,this.height,this.channels)}convert(w){if(this.channels===w)return this;switch(w){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(w){if(d){if(n.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const b=w.split(".").pop().toLowerCase(),k=g.get(b)??"image/png",x=await this.toBlob(k);(0,s.saveBlob)(w,x)}else{if(n.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(w);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(d)throw new Error("toSharp() is only supported in server-side environments.");return a(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const y=f.read.bind(f)},"./src/utils/maths.js":(e,r,t)=>{t.r(r),t.d(r,{FFT:()=>y,bankers_round:()=>b,cos_sim:()=>l,dot:()=>a,dynamic_time_warping:()=>k,interpolate_data:()=>s,log_softmax:()=>i,magnitude:()=>c,max:()=>d,medianFilter:()=>I,min:()=>m,permute_data:()=>o,round:()=>w,softmax:()=>n});function s(x,[v,E,T],[C,D],z="bilinear",K=!1){const H=D/T,R=C/E,re=new x.constructor(C*D*v),q=E*T,te=C*D;for(let ee=0;ee<C;++ee)for(let ie=0;ie<D;++ie){const he=ee*D+ie,de=(ie+.5)/H-.5,N=(ee+.5)/R-.5;let O=Math.floor(de),W=Math.floor(N);const ne=Math.min(O+1,T-1),fe=Math.min(W+1,E-1);O=Math.max(O,0),W=Math.max(W,0);const ae=de-O,xe=N-W,Be=(1-ae)*(1-xe),Ke=ae*(1-xe),Ae=(1-ae)*xe,J=ae*xe,le=W*T,G=fe*T,ye=le+O,Ie=le+ne,Pe=G+O,be=G+ne;for(let $e=0;$e<v;++$e){const Me=$e*q;re[$e*te+he]=Be*x[Me+ye]+Ke*x[Me+Ie]+Ae*x[Me+Pe]+J*x[Me+be]}}return re}function o(x,v,E){const T=new Array(E.length),C=new Array(E.length);for(let K=E.length-1,H=1;K>=0;--K)C[K]=H,T[K]=v[E[K]],H*=T[K];const D=E.map((K,H)=>C[E.indexOf(H)]),z=new x.constructor(x.length);for(let K=0;K<x.length;++K){let H=0;for(let R=v.length-1,re=K;R>=0;--R)H+=re%v[R]*D[R],re=Math.floor(re/v[R]);z[H]=x[K]}return[z,T]}function n(x){const v=d(x)[0],E=x.map(D=>Math.exp(D-v)),T=E.reduce((D,z)=>D+z,0);return E.map(D=>D/T)}function i(x){const v=d(x)[0];let E=0;for(let D=0;D<x.length;++D)E+=Math.exp(x[D]-v);const T=Math.log(E);return x.map(D=>D-v-T)}function a(x,v){let E=0;for(let T=0;T<x.length;++T)E+=x[T]*v[T];return E}function l(x,v){const E=a(x,v),T=c(x),C=c(v);return E/(T*C)}function c(x){return Math.sqrt(x.reduce((v,E)=>v+E*E,0))}function m(x){if(x.length===0)throw Error("Array must not be empty");let v=x[0],E=0;for(let T=1;T<x.length;++T)x[T]<v&&(v=x[T],E=T);return[v,E]}function d(x){if(x.length===0)throw Error("Array must not be empty");let v=x[0],E=0;for(let T=1;T<x.length;++T)x[T]>v&&(v=x[T],E=T);return[v,E]}function u(x){return x>0&&(x&x-1)===0}class g{constructor(v){if(this.size=v|0,this.size<=1||!u(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=v<<1,this.table=new Float64Array(this.size*2);for(let T=0;T<this.table.length;T+=2){const C=Math.PI*T/this.size;this.table[T]=Math.cos(C),this.table[T+1]=-Math.sin(C)}let E=0;for(let T=1;this.size>T;T<<=1)++E;this._width=E%2===0?E-1:E,this._bitrev=new Int32Array(1<<this._width);for(let T=0;T<this._bitrev.length;++T){this._bitrev[T]=0;for(let C=0;C<this._width;C+=2){const D=this._width-C-2;this._bitrev[T]|=(T>>>C&3)<<D}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(v,E){const T=E||new Array(v.length>>>1);for(let C=0;C<v.length;C+=2)T[C>>>1]=v[C];return T}toComplexArray(v,E){const T=E||this.createComplexArray();for(let C=0;C<T.length;C+=2)T[C]=v[C>>>1],T[C+1]=0;return T}transform(v,E){if(v===E)throw new Error("Input and output buffers must be different");this._transform4(v,E,1)}realTransform(v,E){if(v===E)throw new Error("Input and output buffers must be different");this._realTransform4(v,E,1)}inverseTransform(v,E){if(v===E)throw new Error("Input and output buffers must be different");this._transform4(v,E,-1);for(let T=0;T<v.length;++T)v[T]/=this.size}_transform4(v,E,T){const C=this._csize;let z=1<<this._width,K=C/z<<1,H,R;const re=this._bitrev;if(K===4)for(H=0,R=0;H<C;H+=K,++R){const te=re[R];this._singleTransform2(E,v,H,te,z)}else for(H=0,R=0;H<C;H+=K,++R){const te=re[R];this._singleTransform4(E,v,H,te,z,T)}const q=this.table;for(z>>=2;z>=2;z>>=2){K=C/z<<1;const te=K>>>2;for(H=0;H<C;H+=K){const ee=H+te-1;for(let ie=H,he=0;ie<ee;ie+=2,he+=z){const de=ie,N=de+te,O=N+te,W=O+te,ne=v[de],fe=v[de+1],ae=v[N],xe=v[N+1],Be=v[O],Ke=v[O+1],Ae=v[W],J=v[W+1],le=q[he],G=T*q[he+1],ye=ae*le-xe*G,Ie=ae*G+xe*le,Pe=q[2*he],be=T*q[2*he+1],$e=Be*Pe-Ke*be,Me=Be*be+Ke*Pe,Fe=q[3*he],Re=T*q[3*he+1],Xe=Ae*Fe-J*Re,Te=Ae*Re+J*Fe,et=ne+$e,He=fe+Me,ot=ne-$e,Ye=fe-Me,De=ye+Xe,Ze=Ie+Te,it=T*(ye-Xe),At=T*(Ie-Te);v[de]=et+De,v[de+1]=He+Ze,v[N]=ot+At,v[N+1]=Ye-it,v[O]=et-De,v[O+1]=He-Ze,v[W]=ot-At,v[W+1]=Ye+it}}}}_singleTransform2(v,E,T,C,D){const z=v[C],K=v[C+1],H=v[C+D],R=v[C+D+1];E[T]=z+H,E[T+1]=K+R,E[T+2]=z-H,E[T+3]=K-R}_singleTransform4(v,E,T,C,D,z){const K=D*2,H=D*3,R=v[C],re=v[C+1],q=v[C+D],te=v[C+D+1],ee=v[C+K],ie=v[C+K+1],he=v[C+H],de=v[C+H+1],N=R+ee,O=re+ie,W=R-ee,ne=re-ie,fe=q+he,ae=te+de,xe=z*(q-he),Be=z*(te-de);E[T]=N+fe,E[T+1]=O+ae,E[T+2]=W+Be,E[T+3]=ne-xe,E[T+4]=N-fe,E[T+5]=O-ae,E[T+6]=W-Be,E[T+7]=ne+xe}_realTransform4(v,E,T){const C=this._csize;let z=1<<this._width,K=C/z<<1,H,R;const re=this._bitrev;if(K===4)for(H=0,R=0;H<C;H+=K,++R){const ee=re[R];this._singleRealTransform2(E,v,H,ee>>>1,z>>>1)}else for(H=0,R=0;H<C;H+=K,++R){const ee=re[R];this._singleRealTransform4(E,v,H,ee>>>1,z>>>1,T)}const q=this.table;for(z>>=2;z>=2;z>>=2){K=C/z<<1;const ee=K>>>1,ie=ee>>>1,he=ie>>>1;for(H=0;H<C;H+=K)for(let de=0,N=0;de<=he;de+=2,N+=z){const O=H+de,W=O+ie,ne=W+ie,fe=ne+ie,ae=v[O],xe=v[O+1],Be=v[W],Ke=v[W+1],Ae=v[ne],J=v[ne+1],le=v[fe],G=v[fe+1],ye=ae,Ie=xe,Pe=q[N],be=T*q[N+1],$e=Be*Pe-Ke*be,Me=Be*be+Ke*Pe,Fe=q[2*N],Re=T*q[2*N+1],Xe=Ae*Fe-J*Re,Te=Ae*Re+J*Fe,et=q[3*N],He=T*q[3*N+1],ot=le*et-G*He,Ye=le*He+G*et,De=ye+Xe,Ze=Ie+Te,it=ye-Xe,At=Ie-Te,$t=$e+ot,Mt=Me+Ye,br=T*($e-ot),Pr=T*(Me-Ye);if(v[O]=De+$t,v[O+1]=Ze+Mt,v[W]=it+Pr,v[W+1]=At-br,de===0){v[ne]=De-$t,v[ne+1]=Ze-Mt;continue}if(de===he)continue;const jr=H+ie-de,as=H+ee-de;v[jr]=it-T*Pr,v[jr+1]=-At-T*br,v[as]=De-T*$t,v[as+1]=-Ze+T*Mt}}const te=C>>>1;for(let ee=2;ee<te;ee+=2)v[C-ee]=v[ee],v[C-ee+1]=-v[ee+1]}_singleRealTransform2(v,E,T,C,D){const z=v[C],K=v[C+D];E[T]=z+K,E[T+1]=0,E[T+2]=z-K,E[T+3]=0}_singleRealTransform4(v,E,T,C,D,z){const K=D*2,H=D*3,R=v[C],re=v[C+D],q=v[C+K],te=v[C+H],ee=R+q,ie=R-q,he=re+te,de=z*(re-te);E[T]=ee+he,E[T+1]=0,E[T+2]=ie,E[T+3]=-de,E[T+4]=ee-he,E[T+5]=0,E[T+6]=ie,E[T+7]=de}}class f{constructor(v){const E=2*(v-1),T=2*(2*v-1),C=2**Math.ceil(Math.log2(T));this.bufferSize=C,this._a=E;const D=new Float64Array(T),z=new Float64Array(C);this._chirpBuffer=new Float64Array(C),this._buffer1=new Float64Array(C),this._buffer2=new Float64Array(C),this._outBuffer1=new Float64Array(C),this._outBuffer2=new Float64Array(C);const K=-2*Math.PI/v,H=Math.cos(K),R=Math.sin(K);for(let re=0;re<T>>1;++re){const q=(re+1-v)**2/2,te=Math.sqrt(H**2+R**2)**q,ee=q*Math.atan2(R,H),ie=2*re;D[ie]=te*Math.cos(ee),D[ie+1]=te*Math.sin(ee),z[ie]=D[ie],z[ie+1]=-D[ie+1]}this._slicedChirpBuffer=D.subarray(E,T),this._f=new g(C>>1),this._f.transform(this._chirpBuffer,z)}_transform(v,E,T){const C=this._buffer1,D=this._buffer2,z=this._outBuffer1,K=this._outBuffer2,H=this._chirpBuffer,R=this._slicedChirpBuffer,re=this._a;if(T)for(let q=0;q<R.length;q+=2){const te=q+1,ee=q>>1,ie=E[ee];C[q]=ie*R[q],C[te]=ie*R[te]}else for(let q=0;q<R.length;q+=2){const te=q+1;C[q]=E[q]*R[q]-E[te]*R[te],C[te]=E[q]*R[te]+E[te]*R[q]}this._f.transform(z,C);for(let q=0;q<H.length;q+=2){const te=q+1;D[q]=z[q]*H[q]-z[te]*H[te],D[te]=z[q]*H[te]+z[te]*H[q]}this._f.inverseTransform(K,D);for(let q=0;q<K.length;q+=2){const te=K[q+re],ee=K[q+re+1],ie=R[q],he=R[q+1];v[q]=te*ie-ee*he,v[q+1]=te*he+ee*ie}}transform(v,E){this._transform(v,E,!1)}realTransform(v,E){this._transform(v,E,!0)}}class y{constructor(v){this.fft_length=v,this.isPowerOfTwo=u(v),this.isPowerOfTwo?(this.fft=new g(v),this.outputBufferSize=2*v):(this.fft=new f(v),this.outputBufferSize=this.fft.bufferSize)}realTransform(v,E){this.fft.realTransform(v,E)}transform(v,E){this.fft.transform(v,E)}}function I(x,v){if(v%2===0||v<=0)throw new Error("Window size must be a positive odd number");const E=new x.constructor(x.length),T=new x.constructor(v),C=Math.floor(v/2);for(let D=0;D<x.length;++D){let z=0;for(let K=-C;K<=C;++K){let H=D+K;H<0?H=Math.abs(H):H>=x.length&&(H=2*(x.length-1)-H),T[z++]=x[H]}T.sort(),E[D]=T[C]}return E}function w(x,v){const E=Math.pow(10,v);return Math.round(x*E)/E}function b(x){const v=Math.round(x);return Math.abs(x)%1===.5?v%2===0?v:v-1:v}function k(x){const v=x.length,E=x[0].length,T=[v+1,E+1],C=Array.from({length:T[0]},()=>Array(T[1]).fill(1/0));C[0][0]=0;const D=Array.from({length:T[0]},()=>Array(T[1]).fill(-1));for(let re=1;re<T[1];++re)for(let q=1;q<T[0];++q){const te=C[q-1][re-1],ee=C[q-1][re],ie=C[q][re-1];let he,de;te<ee&&te<ie?(he=te,de=0):ee<te&&ee<ie?(he=ee,de=1):(he=ie,de=2),C[q][re]=x[q-1][re-1]+he,D[q][re]=de}for(let re=0;re<T[1];++re)D[0][re]=2;for(let re=0;re<T[0];++re)D[re][0]=1;let z=v,K=E,H=[],R=[];for(;z>0||K>0;)switch(H.push(z-1),R.push(K-1),D[z][K]){case 0:--z,--K;break;case 1:--z;break;case 2:--K;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${z}, ${K}]. Please file a bug report.`)}return H.reverse(),R.reverse(),[H,R]}},"./src/utils/tensor.js":(e,r,t)=>{t.r(r),t.d(r,{DataTypeMap:()=>i,Tensor:()=>a,cat:()=>E,full:()=>R,full_like:()=>re,interpolate:()=>m,interpolate_4d:()=>d,layer_norm:()=>b,matmul:()=>u,mean:()=>z,mean_pooling:()=>w,ones:()=>q,ones_like:()=>te,permute:()=>c,quantize_embeddings:()=>de,rand:()=>he,rfft:()=>g,slice:()=>I,stack:()=>T,std_mean:()=>D,topk:()=>f,zeros:()=>ee,zeros_like:()=>ie});var s=t("./src/utils/maths.js"),o=t("./src/backends/onnx.js"),n=t("./src/ops/registry.js");const i=Object.freeze({float32:Float32Array,float16:typeof Float16Array<"u"?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class a{constructor(...O){Y(this,"ort_tensor");return(0,o.isONNXTensor)(O[0])?this.ort_tensor=O[0]:this.ort_tensor=new o.Tensor(O[0],O[1],O[2]),new Proxy(this,{get:(W,ne)=>{if(typeof ne=="string"){let fe=Number(ne);if(Number.isInteger(fe))return W._getitem(fe)}return W[ne]},set:(W,ne,fe)=>W[ne]=fe})}get dims(){return this.ort_tensor.dims}set dims(O){this.ort_tensor.dims=O}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[O,...W]=this.dims;if(W.length>0){const ne=W.reduce((fe,ae)=>fe*ae);for(let fe=0;fe<O;++fe)yield this._subarray(fe,ne,W)}else yield*this.data}_getitem(O){const[W,...ne]=this.dims;if(O=v(O,W),ne.length>0){const fe=ne.reduce((ae,xe)=>ae*xe);return this._subarray(O,fe,ne)}else return new a(this.type,[this.data[O]],ne)}indexOf(O){const W=this.data;for(let ne=0;ne<W.length;++ne)if(W[ne]==O)return ne;return-1}_subarray(O,W,ne){const fe=O*W,ae=(O+1)*W,xe="subarray"in this.data?this.data.subarray(fe,ae):this.data.slice(fe,ae);return new a(this.type,xe,ne)}item(){const O=this.data;if(O.length!==1)throw new Error(`a Tensor with ${O.length} elements cannot be converted to Scalar`);return O[0]}tolist(){return l(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const O=this.data;for(let W=0;W<O.length;++W)O[W]=1/(1+Math.exp(-O[W]));return this}map(O){return this.clone().map_(O)}map_(O){const W=this.data;for(let ne=0;ne<W.length;++ne)W[ne]=O(W[ne],ne,W);return this}mul(O){return this.clone().mul_(O)}mul_(O){const W=this.data;for(let ne=0;ne<W.length;++ne)W[ne]*=O;return this}div(O){return this.clone().div_(O)}div_(O){const W=this.data;for(let ne=0;ne<W.length;++ne)W[ne]/=O;return this}add(O){return this.clone().add_(O)}add_(O){const W=this.data;for(let ne=0;ne<W.length;++ne)W[ne]+=O;return this}sub(O){return this.clone().sub_(O)}sub_(O){const W=this.data;for(let ne=0;ne<W.length;++ne)W[ne]-=O;return this}clone(){return new a(this.type,this.data.slice(),this.dims.slice())}slice(...O){const W=[],ne=[];for(let J=0;J<this.dims.length;++J){let le=O[J];if(le==null)ne.push([0,this.dims[J]]),W.push(this.dims[J]);else if(typeof le=="number")le=v(le,this.dims[J],J),ne.push([le,le+1]);else if(Array.isArray(le)&&le.length===2){let[G,ye]=le;if(G=G===null?0:v(G,this.dims[J],J,!1),ye=ye===null?this.dims[J]:v(ye,this.dims[J],J,!1),G>ye)throw new Error(`Invalid slice: ${le}`);const Ie=[Math.max(G,0),Math.min(ye,this.dims[J])];ne.push(Ie),W.push(Ie[1]-Ie[0])}else throw new Error(`Invalid slice: ${le}`)}const fe=ne.map(([J,le])=>le-J),ae=fe.reduce((J,le)=>J*le),xe=this.data,Be=new xe.constructor(ae),Ke=this.stride();let Ae=!0;for(let J=1;J<fe.length;++J)if(ne[J][0]!==0||ne[J][1]!==this.dims[J]){Ae=!1;break}if(Ae){const J=ne[0][0]*Ke[0],le=ne[0][1]*Ke[0];if(ArrayBuffer.isView(xe))Be.set(xe.subarray(J,le));else if(Array.isArray(xe)){const G=xe.slice(J,le);for(let ye=0;ye<G.length;++ye)Be[ye]=G[ye]}else throw new Error("Unsupported data type for slicing")}else for(let J=0;J<ae;++J){let le=0;for(let G=fe.length-1,ye=J;G>=0;--G){const Ie=fe[G];le+=(ye%Ie+ne[G][0])*Ke[G],ye=Math.floor(ye/Ie)}Be[J]=xe[le]}return new a(this.type,Be,W)}permute(...O){return c(this,O)}transpose(...O){return this.permute(...O)}sum(O=null,W=!1){return this.norm(1,O,W)}norm(O="fro",W=null,ne=!1){if(O==="fro")O=2;else if(typeof O=="string")throw Error(`Unsupported norm: ${O}`);const fe=this.data,ae=(Ae,J)=>Ae+J**O;if(W===null){const Ae=fe.reduce(ae,0)**(1/O);return new a(this.type,[Ae],[])}const[xe,Be,Ke]=C(ae,this,W,ne);if(O!==1)for(let Ae=0;Ae<Be.length;++Ae)Be[Ae]=Be[Ae]**(1/O);return new a(xe,Be,Ke)}normalize_(O=2,W=1){W=v(W,this.dims.length);const ne=this.norm(O,W,!0),fe=this.data,ae=ne.data;for(let xe=0;xe<fe.length;++xe){let Be=0;for(let Ke=this.dims.length-1,Ae=xe,J=1;Ke>=0;--Ke){const le=this.dims[Ke];if(Ke!==W){const G=Ae%le;Be+=G*J,J*=this.dims[Ke]}Ae=Math.floor(Ae/le)}fe[xe]/=ae[Be]}return this}normalize(O=2,W=1){return this.clone().normalize_(O,W)}stride(){return K(this.dims)}squeeze(O=null){return new a(this.type,this.data,k(this.dims,O))}squeeze_(O=null){return this.dims=k(this.dims,O),this}unsqueeze(O=null){return new a(this.type,this.data,x(this.dims,O))}unsqueeze_(O=null){return this.dims=x(this.dims,O),this}flatten_(O=0,W=-1){W=(W+this.dims.length)%this.dims.length;let ne=this.dims.slice(0,O),fe=this.dims.slice(O,W+1),ae=this.dims.slice(W+1);return this.dims=[...ne,fe.reduce((xe,Be)=>xe*Be,1),...ae],this}flatten(O=0,W=-1){return this.clone().flatten_(O,W)}view(...O){let W=-1;for(let fe=0;fe<O.length;++fe)if(O[fe]===-1){if(W!==-1)throw new Error("Only one dimension can be inferred");W=fe}const ne=this.data;if(W!==-1){const fe=O.reduce((ae,xe,Be)=>Be!==W?ae*xe:ae,1);O[W]=ne.length/fe}return new a(this.type,ne,O)}neg_(){const O=this.data;for(let W=0;W<O.length;++W)O[W]=-O[W];return this}neg(){return this.clone().neg_()}gt(O){const W=new Uint8Array(this.data.length),ne=this.data;for(let fe=0;fe<ne.length;++fe)W[fe]=ne[fe]>O?1:0;return new a("bool",W,this.dims)}lt(O){const W=new Uint8Array(this.data.length),ne=this.data;for(let fe=0;fe<ne.length;++fe)W[fe]=ne[fe]<O?1:0;return new a("bool",W,this.dims)}clamp_(O,W){const ne=this.data;for(let fe=0;fe<ne.length;++fe)ne[fe]=Math.min(Math.max(ne[fe],O),W);return this}clamp(O,W){return this.clone().clamp_(O,W)}round_(){const O=this.data;for(let W=0;W<O.length;++W)O[W]=Math.round(O[W]);return this}round(){return this.clone().round_()}mean(O=null,W=!1){return z(this,O,W)}min(O=null,W=!1){if(O===null){const xe=(0,s.min)(this.data)[0];return new a(this.type,[xe],[])}const[ne,fe,ae]=C((xe,Be)=>Math.min(xe,Be),this,O,W,1/0);return new a(ne,fe,ae)}max(O=null,W=!1){if(O===null){const xe=(0,s.max)(this.data)[0];return new a(this.type,[xe],[])}const[ne,fe,ae]=C((xe,Be)=>Math.max(xe,Be),this,O,W,-1/0);return new a(ne,fe,ae)}argmin(O=null,W=!1){if(O!==null)throw new Error("`dim !== null` not yet implemented.");const ne=(0,s.min)(this.data)[1];return new a("int64",[BigInt(ne)],[])}argmax(O=null,W=!1){if(O!==null)throw new Error("`dim !== null` not yet implemented.");const ne=(0,s.max)(this.data)[1];return new a("int64",[BigInt(ne)],[])}to(O){if(this.type===O)return this;if(!i.hasOwnProperty(O))throw new Error(`Unsupported type: ${O}`);let W;const ne=["int64","uint64"].includes(this.type),fe=["int64","uint64"].includes(O);return ne&&!fe?W=Number:!ne&&fe&&(W=BigInt),new a(O,i[O].from(this.data,W),this.dims)}}function l(N,O){const W=N.length,ne=O.reduce((ae,xe)=>ae*xe);if(W!==ne)throw Error(`cannot reshape array of size ${W} into shape (${O})`);let fe=N;for(let ae=O.length-1;ae>=0;ae--)fe=fe.reduce((xe,Be)=>{let Ke=xe[xe.length-1];return Ke.length<O[ae]?Ke.push(Be):xe.push([Be]),xe},[[]]);return fe[0]}function c(N,O){const[W,ne]=(0,s.permute_data)(N.data,N.dims,O);return new a(N.type,W,ne)}function m(N,[O,W],ne="bilinear",fe=!1){const ae=N.dims.at(-3)??1,xe=N.dims.at(-2),Be=N.dims.at(-1);let Ke=(0,s.interpolate_data)(N.data,[ae,xe,Be],[O,W],ne,fe);return new a(N.type,Ke,[ae,O,W])}async function d(N,{size:O=null,mode:W="bilinear"}={}){if(N.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!O)throw new Error("`interpolate_4d` requires a `size` argument.");let ne;if(O.length===2)ne=[...N.dims.slice(0,2),...O];else if(O.length===3)ne=[N.dims[0],...O];else if(O.length===4)ne=O;else throw new Error("`size` must be of length 2, 3, or 4.");let fe;if(W==="nearest")fe=await n.TensorOpRegistry.nearest_interpolate_4d;else if(W==="bilinear")fe=await n.TensorOpRegistry.bilinear_interpolate_4d;else if(W==="bicubic")fe=await n.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${W}`);const ae=new a("int64",new BigInt64Array(ne.map(BigInt)),[ne.length]);return await fe({x:N,s:ae})}async function u(N,O){return await(await n.TensorOpRegistry.matmul)({a:N,b:O})}async function g(N,O){return await(await n.TensorOpRegistry.rfft)({x:N,a:O})}async function f(N,O){const W=await n.TensorOpRegistry.top_k;return O==null?O=N.dims.at(-1):O=Math.min(O,N.dims.at(-1)),await W({x:N,k:new a("int64",[BigInt(O)],[1])})}const y=N=>new a("int64",N,[N.length]);async function I(N,O,W,ne,fe){return await(await n.TensorOpRegistry.slice)({x:N,s:y(O),e:y(W),a:y(ne),t:y(fe??new Array(ne.length).fill(1))})}function w(N,O){const W=N.data,ne=O.data,fe=[N.dims[0],N.dims[2]],ae=new W.constructor(fe[0]*fe[1]),[xe,Be,Ke]=N.dims;let Ae=0;for(let J=0;J<xe;++J){const le=J*Ke*Be;for(let G=0;G<Ke;++G){let ye=0,Ie=0;const Pe=J*Be,be=le+G;for(let Me=0;Me<Be;++Me){const Fe=Number(ne[Pe+Me]);Ie+=Fe,ye+=W[be+Me*Ke]*Fe}const $e=ye/Ie;ae[Ae++]=$e}}return new a(N.type,ae,fe)}function b(N,O,{eps:W=1e-5}={}){if(N.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[ne,fe]=N.dims;if(O.length!==1&&O[0]!==fe)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[ae,xe]=D(N,1,0,!0),Be=ae.data,Ke=xe.data,Ae=N.data,J=new Ae.constructor(Ae.length);for(let le=0;le<ne;++le){const G=le*fe;for(let ye=0;ye<fe;++ye){const Ie=G+ye;J[Ie]=(Ae[Ie]-Ke[le])/(Be[le]+W)}}return new a(N.type,J,N.dims)}function k(N,O){return N=N.slice(),O===null?N=N.filter(W=>W!==1):typeof O=="number"?N[O]===1&&N.splice(O,1):Array.isArray(O)&&(N=N.filter((W,ne)=>W!==1||!O.includes(ne))),N}function x(N,O){return O=v(O,N.length+1),N=N.slice(),N.splice(O,0,1),N}function v(N,O,W=null,ne=!0){if(N<-O||N>=O){if(ne)throw new Error(`IndexError: index ${N} is out of bounds for dimension${W===null?"":" "+W} with size ${O}`);return N<-O?0:O}return N<0&&(N=(N%O+O)%O),N}function E(N,O=0){O=v(O,N[0].dims.length);const W=N[0].dims.slice();W[O]=N.reduce((xe,Be)=>xe+Be.dims[O],0);const ne=W.reduce((xe,Be)=>xe*Be,1),fe=new N[0].data.constructor(ne),ae=N[0].type;if(O===0){let xe=0;for(const Be of N){const Ke=Be.data;fe.set(Ke,xe),xe+=Ke.length}}else{let xe=0;for(let Be=0;Be<N.length;++Be){const{data:Ke,dims:Ae}=N[Be];for(let J=0;J<Ke.length;++J){let le=0;for(let G=Ae.length-1,ye=J,Ie=1;G>=0;--G){const Pe=Ae[G];let be=ye%Pe;G===O&&(be+=xe),le+=be*Ie,Ie*=W[G],ye=Math.floor(ye/Pe)}fe[le]=Ke[J]}xe+=Ae[O]}}return new a(ae,fe,W)}function T(N,O=0){return E(N.map(W=>W.unsqueeze(O)),O)}function C(N,O,W=null,ne=!1,fe=null){const ae=O.data,xe=O.dims;W=v(W,xe.length);const Be=xe.slice();Be[W]=1;const Ke=new ae.constructor(ae.length/xe[W]);fe!==null&&Ke.fill(fe);for(let Ae=0;Ae<ae.length;++Ae){let J=0;for(let le=xe.length-1,G=Ae,ye=1;le>=0;--le){const Ie=xe[le];if(le!==W){const Pe=G%Ie;J+=Pe*ye,ye*=Be[le]}G=Math.floor(G/Ie)}Ke[J]=N(Ke[J],ae[Ae],Ae,J)}return ne||Be.splice(W,1),[O.type,Ke,Be]}function D(N,O=null,W=1,ne=!1){const fe=N.data,ae=N.dims;if(O===null){const ye=fe.reduce(($e,Me)=>$e+Me,0)/fe.length,Ie=Math.sqrt(fe.reduce(($e,Me)=>$e+(Me-ye)**2,0)/(fe.length-W)),Pe=new a(N.type,[ye],[]);return[new a(N.type,[Ie],[]),Pe]}O=v(O,ae.length);const xe=z(N,O,ne),Be=xe.data,[Ke,Ae,J]=C((G,ye,Ie,Pe)=>G+(ye-Be[Pe])**2,N,O,ne);for(let G=0;G<Ae.length;++G)Ae[G]=Math.sqrt(Ae[G]/(ae[O]-W));return[new a(Ke,Ae,J),xe]}function z(N,O=null,W=!1){const ne=N.dims,fe=N.data;if(O===null){const Ke=fe.reduce((Ae,J)=>Ae+J,0);return new a(N.type,[Ke/fe.length],[])}O=v(O,ne.length);const[ae,xe,Be]=C((Ke,Ae)=>Ke+Ae,N,O,W);if(ne[O]!==1)for(let Ke=0;Ke<xe.length;++Ke)xe[Ke]/=ne[O];return new a(ae,xe,Be)}function K(N){const O=new Array(N.length);for(let W=N.length-1,ne=1;W>=0;--W)O[W]=ne,ne*=N[W];return O}function H(N,O,W,ne){const fe=N.reduce((ae,xe)=>ae*xe,1);return new a(W,new ne(fe).fill(O),N)}function R(N,O){let W,ne;if(typeof O=="number")W="float32",ne=Float32Array;else if(typeof O=="bigint")W="int64",ne=BigInt64Array;else if(typeof O=="boolean")W="bool",ne=Uint8Array;else throw new Error(`Unsupported data type: ${typeof O}`);return H(N,O,W,ne)}function re(N,O){return R(N.dims,O)}function q(N){return H(N,1n,"int64",BigInt64Array)}function te(N){return q(N.dims)}function ee(N){return H(N,0n,"int64",BigInt64Array)}function ie(N){return ee(N.dims)}function he(N){const O=N.reduce((W,ne)=>W*ne,1);return new a("float32",Float32Array.from({length:O},()=>Math.random()),N)}function de(N,O){if(N.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(N.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(O))throw new Error("The precision must be either 'binary' or 'ubinary'");const W=O==="binary",ne=W?"int8":"uint8",fe=W?Int8Array:Uint8Array,ae=N.data,xe=new fe(ae.length/8);for(let Be=0;Be<ae.length;++Be){const Ke=ae[Be]>0?1:0,Ae=Math.floor(Be/8),J=Be%8;xe[Ae]|=Ke<<7-J,W&&J===0&&(xe[Ae]-=128)}return new a(ne,xe,[N.dims[0],N.dims[1]/8])}},"./src/utils/video.js":(e,r,t)=>{t.r(r),t.d(r,{RawVideo:()=>i,RawVideoFrame:()=>n,load_video:()=>a});var s=t("./src/utils/image.js"),o=t("./src/env.js");class n{constructor(c,m){this.image=c,this.timestamp=m}}class i{constructor(c,m){c.length>0&&c[0]instanceof s.RawImage&&(c=c.map((d,u)=>new n(d,(u+1)/(c.length+1)*m))),this.frames=c,this.duration=m}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function a(l,{num_frames:c=null,fps:m=null}={}){if(!o.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(c==null&&m==null)throw new Error("Either num_frames or fps must be provided.");const d=[],u=document.createElement("video");if(u.crossOrigin="anonymous",u.muted=!0,typeof l=="string")u.src=l;else if(l instanceof Blob)u.src=URL.createObjectURL(l);else if(l instanceof HTMLVideoElement)u.src=l.src;else throw new Error("Invalid URL or video element provided.");if(await new Promise(k=>u.onloadedmetadata=k),u.seekable.start(0)===u.seekable.end(0)){const x=await(await fetch(u.src)).blob();u.src=URL.createObjectURL(x),await new Promise(v=>u.onloadedmetadata=v)}const g=u.duration;let f,y;c!=null?(f=c,y=c===1?0:g/(c-1)):(y=1/m,f=Math.floor(g/y));let I=[];for(let k=0;k<f;++k)I.push(c===1?g/2:k*y);const w=document.createElement("canvas");w.width=u.videoWidth,w.height=u.videoHeight;const b=w.getContext("2d",{willReadFrequently:!0});for(const k of I){u.currentTime=k,await new Promise(T=>{u.onseeked=T}),b.drawImage(u,0,0,w.width,w.height);const x=b.getImageData(0,0,w.width,w.height),v=new s.RawImage(x.data,w.width,w.height,4),E=new n(v,k);d.push(E)}return u.remove(),new i(d,g)}}},AM={};function Ut(e){var r=AM[e];if(r!==void 0)return r.exports;var t=AM[e]={exports:{}};return PT[e](t,t.exports,Ut),t.exports}(()=>{var e=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,r;Ut.t=function(t,s){if(s&1&&(t=this(t)),s&8||typeof t=="object"&&t&&(s&4&&t.__esModule||s&16&&typeof t.then=="function"))return t;var o=Object.create(null);Ut.r(o);var n={};r=r||[null,e({}),e([]),e(e)];for(var i=s&2&&t;typeof i=="object"&&!~r.indexOf(i);i=e(i))Object.getOwnPropertyNames(i).forEach(a=>n[a]=()=>t[a]);return n.default=()=>t,Ut.d(o,n),o}})();Ut.d=(e,r)=>{for(var t in r)Ut.o(r,t)&&!Ut.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})};Ut.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);Ut.r=e=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var _={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/Ut.r(_),Ut.d(_,{ASTFeatureExtractor:()=>d.ASTFeatureExtractor,ASTForAudioClassification:()=>t.ASTForAudioClassification,ASTModel:()=>t.ASTModel,ASTPreTrainedModel:()=>t.ASTPreTrainedModel,AlbertForMaskedLM:()=>t.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>t.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>t.AlbertForSequenceClassification,AlbertModel:()=>t.AlbertModel,AlbertPreTrainedModel:()=>t.AlbertPreTrainedModel,AlbertTokenizer:()=>s.AlbertTokenizer,ArceeForCausalLM:()=>t.ArceeForCausalLM,ArceeModel:()=>t.ArceeModel,ArceePreTrainedModel:()=>t.ArceePreTrainedModel,AudioClassificationPipeline:()=>r.AudioClassificationPipeline,AutoConfig:()=>o.AutoConfig,AutoFeatureExtractor:()=>u.AutoFeatureExtractor,AutoImageProcessor:()=>y.AutoImageProcessor,AutoModel:()=>t.AutoModel,AutoModelForAudioClassification:()=>t.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>t.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>t.AutoModelForAudioTextToText,AutoModelForCTC:()=>t.AutoModelForCTC,AutoModelForCausalLM:()=>t.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>t.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>t.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>t.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>t.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>t.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>t.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>t.AutoModelForImageTextToText,AutoModelForImageToImage:()=>t.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>t.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>t.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>t.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>t.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>t.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>t.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>t.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>t.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>t.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>t.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>t.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>t.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>t.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>t.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>t.AutoModelForVision2Seq,AutoModelForXVector:()=>t.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>t.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>b.AutoProcessor,AutoTokenizer:()=>s.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>r.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>r.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>t.BartForConditionalGeneration,BartForSequenceClassification:()=>t.BartForSequenceClassification,BartModel:()=>t.BartModel,BartPretrainedModel:()=>t.BartPretrainedModel,BartTokenizer:()=>s.BartTokenizer,BaseModelOutput:()=>t.BaseModelOutput,BaseStreamer:()=>k.BaseStreamer,BeitFeatureExtractor:()=>f.BeitFeatureExtractor,BeitForImageClassification:()=>t.BeitForImageClassification,BeitModel:()=>t.BeitModel,BeitPreTrainedModel:()=>t.BeitPreTrainedModel,BertForMaskedLM:()=>t.BertForMaskedLM,BertForQuestionAnswering:()=>t.BertForQuestionAnswering,BertForSequenceClassification:()=>t.BertForSequenceClassification,BertForTokenClassification:()=>t.BertForTokenClassification,BertModel:()=>t.BertModel,BertPreTrainedModel:()=>t.BertPreTrainedModel,BertTokenizer:()=>s.BertTokenizer,BitImageProcessor:()=>f.BitImageProcessor,BlenderbotForConditionalGeneration:()=>t.BlenderbotForConditionalGeneration,BlenderbotModel:()=>t.BlenderbotModel,BlenderbotPreTrainedModel:()=>t.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>t.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>t.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>t.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>s.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>s.BlenderbotTokenizer,BloomForCausalLM:()=>t.BloomForCausalLM,BloomModel:()=>t.BloomModel,BloomPreTrainedModel:()=>t.BloomPreTrainedModel,BloomTokenizer:()=>s.BloomTokenizer,CLIPFeatureExtractor:()=>f.CLIPFeatureExtractor,CLIPImageProcessor:()=>f.CLIPImageProcessor,CLIPModel:()=>t.CLIPModel,CLIPPreTrainedModel:()=>t.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>t.CLIPSegForImageSegmentation,CLIPSegModel:()=>t.CLIPSegModel,CLIPSegPreTrainedModel:()=>t.CLIPSegPreTrainedModel,CLIPTextModel:()=>t.CLIPTextModel,CLIPTextModelWithProjection:()=>t.CLIPTextModelWithProjection,CLIPTokenizer:()=>s.CLIPTokenizer,CLIPVisionModel:()=>t.CLIPVisionModel,CLIPVisionModelWithProjection:()=>t.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>t.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>t.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>t.CamembertForSequenceClassification,CamembertForTokenClassification:()=>t.CamembertForTokenClassification,CamembertModel:()=>t.CamembertModel,CamembertPreTrainedModel:()=>t.CamembertPreTrainedModel,CamembertTokenizer:()=>s.CamembertTokenizer,CausalLMOutput:()=>t.CausalLMOutput,CausalLMOutputWithPast:()=>t.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>f.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>t.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>t.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>t.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>d.ClapFeatureExtractor,ClapModel:()=>t.ClapModel,ClapPreTrainedModel:()=>t.ClapPreTrainedModel,ClapTextModelWithProjection:()=>t.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>v.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>t.CodeGenForCausalLM,CodeGenModel:()=>t.CodeGenModel,CodeGenPreTrainedModel:()=>t.CodeGenPreTrainedModel,CodeGenTokenizer:()=>s.CodeGenTokenizer,CodeLlamaTokenizer:()=>s.CodeLlamaTokenizer,CohereForCausalLM:()=>t.CohereForCausalLM,CohereModel:()=>t.CohereModel,CoherePreTrainedModel:()=>t.CoherePreTrainedModel,CohereTokenizer:()=>s.CohereTokenizer,ConvBertForMaskedLM:()=>t.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>t.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>t.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>t.ConvBertForTokenClassification,ConvBertModel:()=>t.ConvBertModel,ConvBertPreTrainedModel:()=>t.ConvBertPreTrainedModel,ConvBertTokenizer:()=>s.ConvBertTokenizer,ConvNextFeatureExtractor:()=>f.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>t.ConvNextForImageClassification,ConvNextImageProcessor:()=>f.ConvNextImageProcessor,ConvNextModel:()=>t.ConvNextModel,ConvNextPreTrainedModel:()=>t.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>t.ConvNextV2ForImageClassification,ConvNextV2Model:()=>t.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>t.ConvNextV2PreTrainedModel,DFineForObjectDetection:()=>t.DFineForObjectDetection,DFineModel:()=>t.DFineModel,DFinePreTrainedModel:()=>t.DFinePreTrainedModel,DINOv3ConvNextModel:()=>t.DINOv3ConvNextModel,DINOv3ConvNextPreTrainedModel:()=>t.DINOv3ConvNextPreTrainedModel,DINOv3ViTImageProcessor:()=>f.DINOv3ViTImageProcessor,DINOv3ViTModel:()=>t.DINOv3ViTModel,DINOv3ViTPreTrainedModel:()=>t.DINOv3ViTPreTrainedModel,DPTFeatureExtractor:()=>f.DPTFeatureExtractor,DPTForDepthEstimation:()=>t.DPTForDepthEstimation,DPTImageProcessor:()=>f.DPTImageProcessor,DPTModel:()=>t.DPTModel,DPTPreTrainedModel:()=>t.DPTPreTrainedModel,DacDecoderModel:()=>t.DacDecoderModel,DacDecoderOutput:()=>t.DacDecoderOutput,DacEncoderModel:()=>t.DacEncoderModel,DacEncoderOutput:()=>t.DacEncoderOutput,DacFeatureExtractor:()=>d.DacFeatureExtractor,DacModel:()=>t.DacModel,DacPreTrainedModel:()=>t.DacPreTrainedModel,DataTypeMap:()=>l.DataTypeMap,DebertaForMaskedLM:()=>t.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>t.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>t.DebertaForSequenceClassification,DebertaForTokenClassification:()=>t.DebertaForTokenClassification,DebertaModel:()=>t.DebertaModel,DebertaPreTrainedModel:()=>t.DebertaPreTrainedModel,DebertaTokenizer:()=>s.DebertaTokenizer,DebertaV2ForMaskedLM:()=>t.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>t.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>t.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>t.DebertaV2ForTokenClassification,DebertaV2Model:()=>t.DebertaV2Model,DebertaV2PreTrainedModel:()=>t.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>s.DebertaV2Tokenizer,DecisionTransformerModel:()=>t.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>t.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>f.DeiTFeatureExtractor,DeiTForImageClassification:()=>t.DeiTForImageClassification,DeiTImageProcessor:()=>f.DeiTImageProcessor,DeiTModel:()=>t.DeiTModel,DeiTPreTrainedModel:()=>t.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>t.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>t.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>r.DepthEstimationPipeline,DepthProForDepthEstimation:()=>t.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>t.DepthProPreTrainedModel,DetrFeatureExtractor:()=>f.DetrFeatureExtractor,DetrForObjectDetection:()=>t.DetrForObjectDetection,DetrForSegmentation:()=>t.DetrForSegmentation,DetrImageProcessor:()=>f.DetrImageProcessor,DetrModel:()=>t.DetrModel,DetrObjectDetectionOutput:()=>t.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>t.DetrPreTrainedModel,DetrSegmentationOutput:()=>t.DetrSegmentationOutput,Dinov2ForImageClassification:()=>t.Dinov2ForImageClassification,Dinov2Model:()=>t.Dinov2Model,Dinov2PreTrainedModel:()=>t.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>t.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>t.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>t.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>t.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>t.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>t.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>t.DistilBertForTokenClassification,DistilBertModel:()=>t.DistilBertModel,DistilBertPreTrainedModel:()=>t.DistilBertPreTrainedModel,DistilBertTokenizer:()=>s.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>r.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>f.DonutFeatureExtractor,DonutImageProcessor:()=>f.DonutImageProcessor,DonutSwinModel:()=>t.DonutSwinModel,DonutSwinPreTrainedModel:()=>t.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>t.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>f.EfficientNetImageProcessor,EfficientNetModel:()=>t.EfficientNetModel,EfficientNetPreTrainedModel:()=>t.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>t.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>t.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>t.ElectraForSequenceClassification,ElectraForTokenClassification:()=>t.ElectraForTokenClassification,ElectraModel:()=>t.ElectraModel,ElectraPreTrainedModel:()=>t.ElectraPreTrainedModel,ElectraTokenizer:()=>s.ElectraTokenizer,EncodecFeatureExtractor:()=>d.EncodecFeatureExtractor,EosTokenCriteria:()=>x.EosTokenCriteria,Ernie4_5_ForCausalLM:()=>t.Ernie4_5_ForCausalLM,Ernie4_5_Model:()=>t.Ernie4_5_Model,Ernie4_5_PretrainedModel:()=>t.Ernie4_5_PretrainedModel,Ernie4_5_Tokenizer:()=>s.Ernie4_5_Tokenizer,EsmForMaskedLM:()=>t.EsmForMaskedLM,EsmForSequenceClassification:()=>t.EsmForSequenceClassification,EsmForTokenClassification:()=>t.EsmForTokenClassification,EsmModel:()=>t.EsmModel,EsmPreTrainedModel:()=>t.EsmPreTrainedModel,EsmTokenizer:()=>s.EsmTokenizer,ExaoneForCausalLM:()=>t.ExaoneForCausalLM,ExaoneModel:()=>t.ExaoneModel,ExaonePreTrainedModel:()=>t.ExaonePreTrainedModel,FFT:()=>c.FFT,FalconForCausalLM:()=>t.FalconForCausalLM,FalconModel:()=>t.FalconModel,FalconPreTrainedModel:()=>t.FalconPreTrainedModel,FalconTokenizer:()=>s.FalconTokenizer,FastViTForImageClassification:()=>t.FastViTForImageClassification,FastViTModel:()=>t.FastViTModel,FastViTPreTrainedModel:()=>t.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>r.FeatureExtractionPipeline,FeatureExtractor:()=>m.FeatureExtractor,FillMaskPipeline:()=>r.FillMaskPipeline,Florence2ForConditionalGeneration:()=>t.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>t.Florence2PreTrainedModel,Florence2Processor:()=>w.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>v.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>v.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>f.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>t.GLPNForDepthEstimation,GLPNModel:()=>t.GLPNModel,GLPNPreTrainedModel:()=>t.GLPNPreTrainedModel,GPT2LMHeadModel:()=>t.GPT2LMHeadModel,GPT2Model:()=>t.GPT2Model,GPT2PreTrainedModel:()=>t.GPT2PreTrainedModel,GPT2Tokenizer:()=>s.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>t.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>t.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>t.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>t.GPTJForCausalLM,GPTJModel:()=>t.GPTJModel,GPTJPreTrainedModel:()=>t.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>t.GPTNeoForCausalLM,GPTNeoModel:()=>t.GPTNeoModel,GPTNeoPreTrainedModel:()=>t.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>t.GPTNeoXForCausalLM,GPTNeoXModel:()=>t.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>t.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>s.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>t.Gemma2ForCausalLM,Gemma2Model:()=>t.Gemma2Model,Gemma2PreTrainedModel:()=>t.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>t.Gemma3ForCausalLM,Gemma3Model:()=>t.Gemma3Model,Gemma3PreTrainedModel:()=>t.Gemma3PreTrainedModel,Gemma3nAudioFeatureExtractor:()=>d.Gemma3nAudioFeatureExtractor,Gemma3nForConditionalGeneration:()=>t.Gemma3nForConditionalGeneration,Gemma3nPreTrainedModel:()=>t.Gemma3nPreTrainedModel,Gemma3nProcessor:()=>w.Gemma3nProcessor,GemmaForCausalLM:()=>t.GemmaForCausalLM,GemmaModel:()=>t.GemmaModel,GemmaPreTrainedModel:()=>t.GemmaPreTrainedModel,GemmaTokenizer:()=>s.GemmaTokenizer,GlmForCausalLM:()=>t.GlmForCausalLM,GlmModel:()=>t.GlmModel,GlmPreTrainedModel:()=>t.GlmPreTrainedModel,GraniteForCausalLM:()=>t.GraniteForCausalLM,GraniteModel:()=>t.GraniteModel,GranitePreTrainedModel:()=>t.GranitePreTrainedModel,Grok1Tokenizer:()=>s.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>t.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>t.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>w.GroundingDinoProcessor,GroupViTModel:()=>t.GroupViTModel,GroupViTPreTrainedModel:()=>t.GroupViTPreTrainedModel,HeliumForCausalLM:()=>t.HeliumForCausalLM,HeliumModel:()=>t.HeliumModel,HeliumPreTrainedModel:()=>t.HeliumPreTrainedModel,HerbertTokenizer:()=>s.HerbertTokenizer,HieraForImageClassification:()=>t.HieraForImageClassification,HieraModel:()=>t.HieraModel,HieraPreTrainedModel:()=>t.HieraPreTrainedModel,HubertForCTC:()=>t.HubertForCTC,HubertForSequenceClassification:()=>t.HubertForSequenceClassification,HubertModel:()=>t.HubertModel,HubertPreTrainedModel:()=>t.HubertPreTrainedModel,IJepaForImageClassification:()=>t.IJepaForImageClassification,IJepaModel:()=>t.IJepaModel,IJepaPreTrainedModel:()=>t.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>t.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>f.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>t.Idefics3PreTrainedModel,Idefics3Processor:()=>w.Idefics3Processor,ImageClassificationPipeline:()=>r.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>r.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>d.ImageFeatureExtractor,ImageMattingOutput:()=>t.ImageMattingOutput,ImageProcessor:()=>g.ImageProcessor,ImageSegmentationPipeline:()=>r.ImageSegmentationPipeline,ImageToImagePipeline:()=>r.ImageToImagePipeline,ImageToTextPipeline:()=>r.ImageToTextPipeline,InterruptableStoppingCriteria:()=>x.InterruptableStoppingCriteria,JAISLMHeadModel:()=>t.JAISLMHeadModel,JAISModel:()=>t.JAISModel,JAISPreTrainedModel:()=>t.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>f.JinaCLIPImageProcessor,JinaCLIPModel:()=>t.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>t.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>w.JinaCLIPProcessor,JinaCLIPTextModel:()=>t.JinaCLIPTextModel,JinaCLIPVisionModel:()=>t.JinaCLIPVisionModel,Lfm2ForCausalLM:()=>t.Lfm2ForCausalLM,Lfm2Model:()=>t.Lfm2Model,Lfm2PreTrainedModel:()=>t.Lfm2PreTrainedModel,LiteWhisperForConditionalGeneration:()=>t.LiteWhisperForConditionalGeneration,LlamaForCausalLM:()=>t.LlamaForCausalLM,LlamaModel:()=>t.LlamaModel,LlamaPreTrainedModel:()=>t.LlamaPreTrainedModel,LlamaTokenizer:()=>s.LlamaTokenizer,LlavaForConditionalGeneration:()=>t.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>t.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>f.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>t.LlavaPreTrainedModel,LlavaProcessor:()=>w.LlavaProcessor,LlavaQwen2ForCausalLM:()=>t.LlavaQwen2ForCausalLM,LogitsProcessor:()=>v.LogitsProcessor,LogitsProcessorList:()=>v.LogitsProcessorList,LogitsWarper:()=>v.LogitsWarper,LongT5ForConditionalGeneration:()=>t.LongT5ForConditionalGeneration,LongT5Model:()=>t.LongT5Model,LongT5PreTrainedModel:()=>t.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>t.M2M100ForConditionalGeneration,M2M100Model:()=>t.M2M100Model,M2M100PreTrainedModel:()=>t.M2M100PreTrainedModel,M2M100Tokenizer:()=>s.M2M100Tokenizer,MBart50Tokenizer:()=>s.MBart50Tokenizer,MBartForCausalLM:()=>t.MBartForCausalLM,MBartForConditionalGeneration:()=>t.MBartForConditionalGeneration,MBartForSequenceClassification:()=>t.MBartForSequenceClassification,MBartModel:()=>t.MBartModel,MBartPreTrainedModel:()=>t.MBartPreTrainedModel,MBartTokenizer:()=>s.MBartTokenizer,MPNetForMaskedLM:()=>t.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>t.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>t.MPNetForSequenceClassification,MPNetForTokenClassification:()=>t.MPNetForTokenClassification,MPNetModel:()=>t.MPNetModel,MPNetPreTrainedModel:()=>t.MPNetPreTrainedModel,MPNetTokenizer:()=>s.MPNetTokenizer,MT5ForConditionalGeneration:()=>t.MT5ForConditionalGeneration,MT5Model:()=>t.MT5Model,MT5PreTrainedModel:()=>t.MT5PreTrainedModel,MarianMTModel:()=>t.MarianMTModel,MarianModel:()=>t.MarianModel,MarianPreTrainedModel:()=>t.MarianPreTrainedModel,MarianTokenizer:()=>s.MarianTokenizer,Mask2FormerImageProcessor:()=>f.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>f.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>t.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>f.MaskFormerImageProcessor,MaskFormerModel:()=>t.MaskFormerModel,MaskFormerPreTrainedModel:()=>t.MaskFormerPreTrainedModel,MaskedLMOutput:()=>t.MaskedLMOutput,MaxLengthCriteria:()=>x.MaxLengthCriteria,Metric3DForDepthEstimation:()=>t.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>t.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>t.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>t.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>t.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>t.MgpstrModelOutput,MgpstrPreTrainedModel:()=>t.MgpstrPreTrainedModel,MgpstrProcessor:()=>w.MgpstrProcessor,MgpstrTokenizer:()=>s.MgpstrTokenizer,MimiDecoderModel:()=>t.MimiDecoderModel,MimiDecoderOutput:()=>t.MimiDecoderOutput,MimiEncoderModel:()=>t.MimiEncoderModel,MimiEncoderOutput:()=>t.MimiEncoderOutput,MimiModel:()=>t.MimiModel,MimiPreTrainedModel:()=>t.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>v.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>v.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>t.MistralForCausalLM,MistralModel:()=>t.MistralModel,MistralPreTrainedModel:()=>t.MistralPreTrainedModel,MobileBertForMaskedLM:()=>t.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>t.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>t.MobileBertForSequenceClassification,MobileBertModel:()=>t.MobileBertModel,MobileBertPreTrainedModel:()=>t.MobileBertPreTrainedModel,MobileBertTokenizer:()=>s.MobileBertTokenizer,MobileLLMForCausalLM:()=>t.MobileLLMForCausalLM,MobileLLMModel:()=>t.MobileLLMModel,MobileLLMPreTrainedModel:()=>t.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>f.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>t.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>t.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>f.MobileNetV1ImageProcessor,MobileNetV1Model:()=>t.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>t.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>f.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>t.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>t.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>f.MobileNetV2ImageProcessor,MobileNetV2Model:()=>t.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>t.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>f.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>t.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>t.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>f.MobileNetV3ImageProcessor,MobileNetV3Model:()=>t.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>t.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>f.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>t.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>t.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>f.MobileNetV4ImageProcessor,MobileNetV4Model:()=>t.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>t.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>f.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>t.MobileViTForImageClassification,MobileViTImageProcessor:()=>f.MobileViTImageProcessor,MobileViTModel:()=>t.MobileViTModel,MobileViTPreTrainedModel:()=>t.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>t.MobileViTV2ForImageClassification,MobileViTV2Model:()=>t.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>t.MobileViTV2PreTrainedModel,ModelOutput:()=>t.ModelOutput,ModernBertDecoderForCausalLM:()=>t.ModernBertDecoderForCausalLM,ModernBertDecoderModel:()=>t.ModernBertDecoderModel,ModernBertDecoderPreTrainedModel:()=>t.ModernBertDecoderPreTrainedModel,ModernBertForMaskedLM:()=>t.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>t.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>t.ModernBertForTokenClassification,ModernBertModel:()=>t.ModernBertModel,ModernBertPreTrainedModel:()=>t.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>t.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>d.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>t.MoonshineForConditionalGeneration,MoonshineModel:()=>t.MoonshineModel,MoonshinePreTrainedModel:()=>t.MoonshinePreTrainedModel,MoonshineProcessor:()=>w.MoonshineProcessor,MptForCausalLM:()=>t.MptForCausalLM,MptModel:()=>t.MptModel,MptPreTrainedModel:()=>t.MptPreTrainedModel,MultiModalityCausalLM:()=>t.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>t.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>t.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>t.MusicgenForConditionalGeneration,MusicgenModel:()=>t.MusicgenModel,MusicgenPreTrainedModel:()=>t.MusicgenPreTrainedModel,NeoBertForMaskedLM:()=>t.NeoBertForMaskedLM,NeoBertForQuestionAnswering:()=>t.NeoBertForQuestionAnswering,NeoBertForSequenceClassification:()=>t.NeoBertForSequenceClassification,NeoBertForTokenClassification:()=>t.NeoBertForTokenClassification,NeoBertModel:()=>t.NeoBertModel,NeoBertPreTrainedModel:()=>t.NeoBertPreTrainedModel,NllbTokenizer:()=>s.NllbTokenizer,NoBadWordsLogitsProcessor:()=>v.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>v.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>t.NomicBertModel,NomicBertPreTrainedModel:()=>t.NomicBertPreTrainedModel,NougatImageProcessor:()=>f.NougatImageProcessor,NougatTokenizer:()=>s.NougatTokenizer,OPTForCausalLM:()=>t.OPTForCausalLM,OPTModel:()=>t.OPTModel,OPTPreTrainedModel:()=>t.OPTPreTrainedModel,ObjectDetectionPipeline:()=>r.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>t.Olmo2ForCausalLM,Olmo2Model:()=>t.Olmo2Model,Olmo2PreTrainedModel:()=>t.Olmo2PreTrainedModel,OlmoForCausalLM:()=>t.OlmoForCausalLM,OlmoModel:()=>t.OlmoModel,OlmoPreTrainedModel:()=>t.OlmoPreTrainedModel,OpenELMForCausalLM:()=>t.OpenELMForCausalLM,OpenELMModel:()=>t.OpenELMModel,OpenELMPreTrainedModel:()=>t.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>f.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>t.OwlViTForObjectDetection,OwlViTImageProcessor:()=>f.OwlViTImageProcessor,OwlViTModel:()=>t.OwlViTModel,OwlViTPreTrainedModel:()=>t.OwlViTPreTrainedModel,OwlViTProcessor:()=>w.OwlViTProcessor,Owlv2ForObjectDetection:()=>t.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>f.Owlv2ImageProcessor,Owlv2Model:()=>t.Owlv2Model,Owlv2PreTrainedModel:()=>t.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>t.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>t.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>w.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>t.PatchTSMixerForPrediction,PatchTSMixerModel:()=>t.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>t.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>t.PatchTSTForPrediction,PatchTSTModel:()=>t.PatchTSTModel,PatchTSTPreTrainedModel:()=>t.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>t.Phi3ForCausalLM,Phi3Model:()=>t.Phi3Model,Phi3PreTrainedModel:()=>t.Phi3PreTrainedModel,Phi3VForCausalLM:()=>t.Phi3VForCausalLM,Phi3VImageProcessor:()=>f.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>t.Phi3VPreTrainedModel,Phi3VProcessor:()=>w.Phi3VProcessor,PhiForCausalLM:()=>t.PhiForCausalLM,PhiModel:()=>t.PhiModel,PhiPreTrainedModel:()=>t.PhiPreTrainedModel,Pipeline:()=>r.Pipeline,PreTrainedModel:()=>t.PreTrainedModel,PreTrainedTokenizer:()=>s.PreTrainedTokenizer,PretrainedConfig:()=>o.PretrainedConfig,PretrainedMixin:()=>t.PretrainedMixin,Processor:()=>I.Processor,PvtForImageClassification:()=>t.PvtForImageClassification,PvtImageProcessor:()=>f.PvtImageProcessor,PvtModel:()=>t.PvtModel,PvtPreTrainedModel:()=>t.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>d.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>t.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>t.PyAnnoteModel,PyAnnotePreTrainedModel:()=>t.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>w.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>t.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>r.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>t.Qwen2ForCausalLM,Qwen2Model:()=>t.Qwen2Model,Qwen2PreTrainedModel:()=>t.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>s.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>t.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>f.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>t.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>w.Qwen2VLProcessor,Qwen3ForCausalLM:()=>t.Qwen3ForCausalLM,Qwen3Model:()=>t.Qwen3Model,Qwen3PreTrainedModel:()=>t.Qwen3PreTrainedModel,RFDetrForObjectDetection:()=>t.RFDetrForObjectDetection,RFDetrModel:()=>t.RFDetrModel,RFDetrObjectDetectionOutput:()=>t.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>t.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>t.RTDetrForObjectDetection,RTDetrImageProcessor:()=>f.RTDetrImageProcessor,RTDetrModel:()=>t.RTDetrModel,RTDetrObjectDetectionOutput:()=>t.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>t.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>t.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>t.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>t.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>t.RTDetrV2PreTrainedModel,RawAudio:()=>n.RawAudio,RawImage:()=>i.RawImage,RawVideo:()=>a.RawVideo,RawVideoFrame:()=>a.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>v.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>t.ResNetForImageClassification,ResNetModel:()=>t.ResNetModel,ResNetPreTrainedModel:()=>t.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>t.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>t.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>t.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>t.RoFormerForTokenClassification,RoFormerModel:()=>t.RoFormerModel,RoFormerPreTrainedModel:()=>t.RoFormerPreTrainedModel,RoFormerTokenizer:()=>s.RoFormerTokenizer,RobertaForMaskedLM:()=>t.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>t.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>t.RobertaForSequenceClassification,RobertaForTokenClassification:()=>t.RobertaForTokenClassification,RobertaModel:()=>t.RobertaModel,RobertaPreTrainedModel:()=>t.RobertaPreTrainedModel,RobertaTokenizer:()=>s.RobertaTokenizer,SamImageProcessor:()=>f.SamImageProcessor,SamImageSegmentationOutput:()=>t.SamImageSegmentationOutput,SamModel:()=>t.SamModel,SamPreTrainedModel:()=>t.SamPreTrainedModel,SamProcessor:()=>w.SamProcessor,SapiensForDepthEstimation:()=>t.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>t.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>t.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>t.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>d.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>f.SegformerFeatureExtractor,SegformerForImageClassification:()=>t.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>t.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>f.SegformerImageProcessor,SegformerModel:()=>t.SegformerModel,SegformerPreTrainedModel:()=>t.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>t.Seq2SeqLMOutput,SequenceClassifierOutput:()=>t.SequenceClassifierOutput,SiglipImageProcessor:()=>f.SiglipImageProcessor,SiglipModel:()=>t.SiglipModel,SiglipPreTrainedModel:()=>t.SiglipPreTrainedModel,SiglipTextModel:()=>t.SiglipTextModel,SiglipTokenizer:()=>s.SiglipTokenizer,SiglipVisionModel:()=>t.SiglipVisionModel,SmolLM3ForCausalLM:()=>t.SmolLM3ForCausalLM,SmolLM3Model:()=>t.SmolLM3Model,SmolLM3PreTrainedModel:()=>t.SmolLM3PreTrainedModel,SmolVLMForConditionalGeneration:()=>t.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>f.SmolVLMImageProcessor,SmolVLMProcessor:()=>w.SmolVLMProcessor,SnacDecoderModel:()=>t.SnacDecoderModel,SnacEncoderModel:()=>t.SnacEncoderModel,SnacFeatureExtractor:()=>d.SnacFeatureExtractor,SnacModel:()=>t.SnacModel,SnacPreTrainedModel:()=>t.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>d.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>t.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>t.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>t.SpeechT5HifiGan,SpeechT5Model:()=>t.SpeechT5Model,SpeechT5PreTrainedModel:()=>t.SpeechT5PreTrainedModel,SpeechT5Processor:()=>w.SpeechT5Processor,SpeechT5Tokenizer:()=>s.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>t.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>t.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>t.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>t.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>t.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>s.SqueezeBertTokenizer,StableLmForCausalLM:()=>t.StableLmForCausalLM,StableLmModel:()=>t.StableLmModel,StableLmPreTrainedModel:()=>t.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>t.Starcoder2ForCausalLM,Starcoder2Model:()=>t.Starcoder2Model,Starcoder2PreTrainedModel:()=>t.Starcoder2PreTrainedModel,StoppingCriteria:()=>x.StoppingCriteria,StoppingCriteriaList:()=>x.StoppingCriteriaList,StyleTextToSpeech2Model:()=>t.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>t.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>r.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>v.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>t.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>f.Swin2SRImageProcessor,Swin2SRModel:()=>t.Swin2SRModel,Swin2SRPreTrainedModel:()=>t.Swin2SRPreTrainedModel,SwinForImageClassification:()=>t.SwinForImageClassification,SwinForSemanticSegmentation:()=>t.SwinForSemanticSegmentation,SwinModel:()=>t.SwinModel,SwinPreTrainedModel:()=>t.SwinPreTrainedModel,T5ForConditionalGeneration:()=>t.T5ForConditionalGeneration,T5Model:()=>t.T5Model,T5PreTrainedModel:()=>t.T5PreTrainedModel,T5Tokenizer:()=>s.T5Tokenizer,TableTransformerForObjectDetection:()=>t.TableTransformerForObjectDetection,TableTransformerModel:()=>t.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>t.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>t.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>v.TemperatureLogitsWarper,Tensor:()=>l.Tensor,Text2TextGenerationPipeline:()=>r.Text2TextGenerationPipeline,TextClassificationPipeline:()=>r.TextClassificationPipeline,TextGenerationPipeline:()=>r.TextGenerationPipeline,TextStreamer:()=>k.TextStreamer,TextToAudioPipeline:()=>r.TextToAudioPipeline,TokenClassificationPipeline:()=>r.TokenClassificationPipeline,TokenClassifierOutput:()=>t.TokenClassifierOutput,TokenizerModel:()=>s.TokenizerModel,TopKLogitsWarper:()=>v.TopKLogitsWarper,TopPLogitsWarper:()=>v.TopPLogitsWarper,TrOCRForCausalLM:()=>t.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>t.TrOCRPreTrainedModel,TranslationPipeline:()=>r.TranslationPipeline,UltravoxModel:()=>t.UltravoxModel,UltravoxPreTrainedModel:()=>t.UltravoxPreTrainedModel,UltravoxProcessor:()=>w.UltravoxProcessor,UniSpeechForCTC:()=>t.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>t.UniSpeechForSequenceClassification,UniSpeechModel:()=>t.UniSpeechModel,UniSpeechPreTrainedModel:()=>t.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>t.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>t.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>t.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>t.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>t.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>w.VLChatProcessor,VLMImageProcessor:()=>f.VLMImageProcessor,ViTFeatureExtractor:()=>f.ViTFeatureExtractor,ViTForImageClassification:()=>t.ViTForImageClassification,ViTImageProcessor:()=>f.ViTImageProcessor,ViTMAEModel:()=>t.ViTMAEModel,ViTMAEPreTrainedModel:()=>t.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>t.ViTMSNForImageClassification,ViTMSNModel:()=>t.ViTMSNModel,ViTMSNPreTrainedModel:()=>t.ViTMSNPreTrainedModel,ViTModel:()=>t.ViTModel,ViTPreTrainedModel:()=>t.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>t.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>t.VitMatteForImageMatting,VitMatteImageProcessor:()=>f.VitMatteImageProcessor,VitMattePreTrainedModel:()=>t.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>t.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>f.VitPoseImageProcessor,VitPosePreTrainedModel:()=>t.VitPosePreTrainedModel,VitsModel:()=>t.VitsModel,VitsModelOutput:()=>t.VitsModelOutput,VitsPreTrainedModel:()=>t.VitsPreTrainedModel,VitsTokenizer:()=>s.VitsTokenizer,VoxtralForConditionalGeneration:()=>t.VoxtralForConditionalGeneration,VoxtralProcessor:()=>w.VoxtralProcessor,Wav2Vec2BertForCTC:()=>t.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>t.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>t.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>t.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>s.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>d.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>t.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>t.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>t.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>t.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>t.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>w.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>w.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>t.WavLMForAudioFrameClassification,WavLMForCTC:()=>t.WavLMForCTC,WavLMForSequenceClassification:()=>t.WavLMForSequenceClassification,WavLMForXVector:()=>t.WavLMForXVector,WavLMModel:()=>t.WavLMModel,WavLMPreTrainedModel:()=>t.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>d.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>t.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>t.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>d.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>t.WhisperForConditionalGeneration,WhisperModel:()=>t.WhisperModel,WhisperPreTrainedModel:()=>t.WhisperPreTrainedModel,WhisperProcessor:()=>w.WhisperProcessor,WhisperTextStreamer:()=>k.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>v.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>s.WhisperTokenizer,XLMForQuestionAnswering:()=>t.XLMForQuestionAnswering,XLMForSequenceClassification:()=>t.XLMForSequenceClassification,XLMForTokenClassification:()=>t.XLMForTokenClassification,XLMModel:()=>t.XLMModel,XLMPreTrainedModel:()=>t.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>t.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>t.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>t.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>t.XLMRobertaForTokenClassification,XLMRobertaModel:()=>t.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>t.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>s.XLMRobertaTokenizer,XLMTokenizer:()=>s.XLMTokenizer,XLMWithLMHeadModel:()=>t.XLMWithLMHeadModel,XVectorOutput:()=>t.XVectorOutput,YolosFeatureExtractor:()=>f.YolosFeatureExtractor,YolosForObjectDetection:()=>t.YolosForObjectDetection,YolosImageProcessor:()=>f.YolosImageProcessor,YolosModel:()=>t.YolosModel,YolosObjectDetectionOutput:()=>t.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>t.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>r.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>r.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>r.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>r.ZeroShotObjectDetectionPipeline,bankers_round:()=>c.bankers_round,cat:()=>l.cat,cos_sim:()=>c.cos_sim,dot:()=>c.dot,dynamic_time_warping:()=>c.dynamic_time_warping,env:()=>e.env,full:()=>l.full,full_like:()=>l.full_like,getCacheShapes:()=>o.getCacheShapes,hamming:()=>n.hamming,hanning:()=>n.hanning,interpolate:()=>l.interpolate,interpolate_4d:()=>l.interpolate_4d,interpolate_data:()=>c.interpolate_data,is_chinese_char:()=>s.is_chinese_char,layer_norm:()=>l.layer_norm,load_image:()=>i.load_image,load_video:()=>a.load_video,log_softmax:()=>c.log_softmax,magnitude:()=>c.magnitude,matmul:()=>l.matmul,max:()=>c.max,mean:()=>l.mean,mean_pooling:()=>l.mean_pooling,medianFilter:()=>c.medianFilter,mel_filter_bank:()=>n.mel_filter_bank,min:()=>c.min,ones:()=>l.ones,ones_like:()=>l.ones_like,permute:()=>l.permute,permute_data:()=>c.permute_data,pipeline:()=>r.pipeline,quantize_embeddings:()=>l.quantize_embeddings,rand:()=>l.rand,read_audio:()=>n.read_audio,rfft:()=>l.rfft,round:()=>c.round,slice:()=>l.slice,softmax:()=>c.softmax,spectrogram:()=>n.spectrogram,stack:()=>l.stack,std_mean:()=>l.std_mean,topk:()=>l.topk,window_function:()=>n.window_function,zeros:()=>l.zeros,zeros_like:()=>l.zeros_like});var e=Ut("./src/env.js"),r=Ut("./src/pipelines.js"),t=Ut("./src/models.js"),s=Ut("./src/tokenizers.js"),o=Ut("./src/configs.js"),n=Ut("./src/utils/audio.js"),i=Ut("./src/utils/image.js"),a=Ut("./src/utils/video.js"),l=Ut("./src/utils/tensor.js"),c=Ut("./src/utils/maths.js"),m=Ut("./src/base/feature_extraction_utils.js"),d=Ut("./src/models/feature_extractors.js"),u=Ut("./src/models/auto/feature_extraction_auto.js"),g=Ut("./src/base/image_processors_utils.js"),f=Ut("./src/models/image_processors.js"),y=Ut("./src/models/auto/image_processing_auto.js"),I=Ut("./src/base/processing_utils.js"),w=Ut("./src/models/processors.js"),b=Ut("./src/models/auto/processing_auto.js"),k=Ut("./src/generation/streamers.js"),x=Ut("./src/generation/stopping_criteria.js"),v=Ut("./src/generation/logits_process.js")})();_.ASTFeatureExtractor;_.ASTForAudioClassification;_.ASTModel;_.ASTPreTrainedModel;_.AlbertForMaskedLM;_.AlbertForQuestionAnswering;_.AlbertForSequenceClassification;_.AlbertModel;_.AlbertPreTrainedModel;_.AlbertTokenizer;_.ArceeForCausalLM;_.ArceeModel;_.ArceePreTrainedModel;_.AudioClassificationPipeline;_.AutoConfig;_.AutoFeatureExtractor;_.AutoImageProcessor;_.AutoModel;_.AutoModelForAudioClassification;_.AutoModelForAudioFrameClassification;_.AutoModelForAudioTextToText;_.AutoModelForCTC;_.AutoModelForCausalLM;_.AutoModelForDepthEstimation;_.AutoModelForDocumentQuestionAnswering;_.AutoModelForImageClassification;_.AutoModelForImageFeatureExtraction;_.AutoModelForImageMatting;_.AutoModelForImageSegmentation;var CT=_.AutoModelForImageTextToText;_.AutoModelForImageToImage;_.AutoModelForMaskGeneration;_.AutoModelForMaskedLM;_.AutoModelForNormalEstimation;_.AutoModelForObjectDetection;_.AutoModelForPoseEstimation;_.AutoModelForQuestionAnswering;_.AutoModelForSemanticSegmentation;_.AutoModelForSeq2SeqLM;_.AutoModelForSequenceClassification;_.AutoModelForSpeechSeq2Seq;_.AutoModelForTextToSpectrogram;_.AutoModelForTextToWaveform;_.AutoModelForTokenClassification;_.AutoModelForUniversalSegmentation;_.AutoModelForVision2Seq;_.AutoModelForXVector;_.AutoModelForZeroShotObjectDetection;var ST=_.AutoProcessor,$T=_.AutoTokenizer;_.AutomaticSpeechRecognitionPipeline;_.BackgroundRemovalPipeline;_.BartForConditionalGeneration;_.BartForSequenceClassification;_.BartModel;_.BartPretrainedModel;_.BartTokenizer;_.BaseModelOutput;_.BaseStreamer;_.BeitFeatureExtractor;_.BeitForImageClassification;_.BeitModel;_.BeitPreTrainedModel;_.BertForMaskedLM;_.BertForQuestionAnswering;_.BertForSequenceClassification;_.BertForTokenClassification;_.BertModel;_.BertPreTrainedModel;_.BertTokenizer;_.BitImageProcessor;_.BlenderbotForConditionalGeneration;_.BlenderbotModel;_.BlenderbotPreTrainedModel;_.BlenderbotSmallForConditionalGeneration;_.BlenderbotSmallModel;_.BlenderbotSmallPreTrainedModel;_.BlenderbotSmallTokenizer;_.BlenderbotTokenizer;_.BloomForCausalLM;_.BloomModel;_.BloomPreTrainedModel;_.BloomTokenizer;_.CLIPFeatureExtractor;_.CLIPImageProcessor;_.CLIPModel;_.CLIPPreTrainedModel;_.CLIPSegForImageSegmentation;_.CLIPSegModel;_.CLIPSegPreTrainedModel;_.CLIPTextModel;_.CLIPTextModelWithProjection;_.CLIPTokenizer;_.CLIPVisionModel;_.CLIPVisionModelWithProjection;_.CamembertForMaskedLM;_.CamembertForQuestionAnswering;_.CamembertForSequenceClassification;_.CamembertForTokenClassification;_.CamembertModel;_.CamembertPreTrainedModel;_.CamembertTokenizer;_.CausalLMOutput;_.CausalLMOutputWithPast;_.ChineseCLIPFeatureExtractor;_.ChineseCLIPModel;_.ChineseCLIPPreTrainedModel;_.ClapAudioModelWithProjection;_.ClapFeatureExtractor;_.ClapModel;_.ClapPreTrainedModel;_.ClapTextModelWithProjection;_.ClassifierFreeGuidanceLogitsProcessor;_.CodeGenForCausalLM;_.CodeGenModel;_.CodeGenPreTrainedModel;_.CodeGenTokenizer;_.CodeLlamaTokenizer;_.CohereForCausalLM;_.CohereModel;_.CoherePreTrainedModel;_.CohereTokenizer;_.ConvBertForMaskedLM;_.ConvBertForQuestionAnswering;_.ConvBertForSequenceClassification;_.ConvBertForTokenClassification;_.ConvBertModel;_.ConvBertPreTrainedModel;_.ConvBertTokenizer;_.ConvNextFeatureExtractor;_.ConvNextForImageClassification;_.ConvNextImageProcessor;_.ConvNextModel;_.ConvNextPreTrainedModel;_.ConvNextV2ForImageClassification;_.ConvNextV2Model;_.ConvNextV2PreTrainedModel;_.DFineForObjectDetection;_.DFineModel;_.DFinePreTrainedModel;_.DINOv3ConvNextModel;_.DINOv3ConvNextPreTrainedModel;_.DINOv3ViTImageProcessor;_.DINOv3ViTModel;_.DINOv3ViTPreTrainedModel;_.DPTFeatureExtractor;_.DPTForDepthEstimation;_.DPTImageProcessor;_.DPTModel;_.DPTPreTrainedModel;_.DacDecoderModel;_.DacDecoderOutput;_.DacEncoderModel;_.DacEncoderOutput;_.DacFeatureExtractor;_.DacModel;_.DacPreTrainedModel;_.DataTypeMap;_.DebertaForMaskedLM;_.DebertaForQuestionAnswering;_.DebertaForSequenceClassification;_.DebertaForTokenClassification;_.DebertaModel;_.DebertaPreTrainedModel;_.DebertaTokenizer;_.DebertaV2ForMaskedLM;_.DebertaV2ForQuestionAnswering;_.DebertaV2ForSequenceClassification;_.DebertaV2ForTokenClassification;_.DebertaV2Model;_.DebertaV2PreTrainedModel;_.DebertaV2Tokenizer;_.DecisionTransformerModel;_.DecisionTransformerPreTrainedModel;_.DeiTFeatureExtractor;_.DeiTForImageClassification;_.DeiTImageProcessor;_.DeiTModel;_.DeiTPreTrainedModel;_.DepthAnythingForDepthEstimation;_.DepthAnythingPreTrainedModel;_.DepthEstimationPipeline;_.DepthProForDepthEstimation;_.DepthProPreTrainedModel;_.DetrFeatureExtractor;_.DetrForObjectDetection;_.DetrForSegmentation;_.DetrImageProcessor;_.DetrModel;_.DetrObjectDetectionOutput;_.DetrPreTrainedModel;_.DetrSegmentationOutput;_.Dinov2ForImageClassification;_.Dinov2Model;_.Dinov2PreTrainedModel;_.Dinov2WithRegistersForImageClassification;_.Dinov2WithRegistersModel;_.Dinov2WithRegistersPreTrainedModel;_.DistilBertForMaskedLM;_.DistilBertForQuestionAnswering;_.DistilBertForSequenceClassification;_.DistilBertForTokenClassification;_.DistilBertModel;_.DistilBertPreTrainedModel;_.DistilBertTokenizer;_.DocumentQuestionAnsweringPipeline;_.DonutFeatureExtractor;_.DonutImageProcessor;_.DonutSwinModel;_.DonutSwinPreTrainedModel;_.EfficientNetForImageClassification;_.EfficientNetImageProcessor;_.EfficientNetModel;_.EfficientNetPreTrainedModel;_.ElectraForMaskedLM;_.ElectraForQuestionAnswering;_.ElectraForSequenceClassification;_.ElectraForTokenClassification;_.ElectraModel;_.ElectraPreTrainedModel;_.ElectraTokenizer;_.EncodecFeatureExtractor;_.EosTokenCriteria;_.Ernie4_5_ForCausalLM;_.Ernie4_5_Model;_.Ernie4_5_PretrainedModel;_.Ernie4_5_Tokenizer;_.EsmForMaskedLM;_.EsmForSequenceClassification;_.EsmForTokenClassification;_.EsmModel;_.EsmPreTrainedModel;_.EsmTokenizer;_.ExaoneForCausalLM;_.ExaoneModel;_.ExaonePreTrainedModel;_.FFT;_.FalconForCausalLM;_.FalconModel;_.FalconPreTrainedModel;_.FalconTokenizer;_.FastViTForImageClassification;_.FastViTModel;_.FastViTPreTrainedModel;_.FeatureExtractionPipeline;_.FeatureExtractor;_.FillMaskPipeline;_.Florence2ForConditionalGeneration;_.Florence2PreTrainedModel;_.Florence2Processor;_.ForcedBOSTokenLogitsProcessor;_.ForcedEOSTokenLogitsProcessor;_.GLPNFeatureExtractor;_.GLPNForDepthEstimation;_.GLPNModel;_.GLPNPreTrainedModel;_.GPT2LMHeadModel;_.GPT2Model;_.GPT2PreTrainedModel;_.GPT2Tokenizer;_.GPTBigCodeForCausalLM;_.GPTBigCodeModel;_.GPTBigCodePreTrainedModel;_.GPTJForCausalLM;_.GPTJModel;_.GPTJPreTrainedModel;_.GPTNeoForCausalLM;_.GPTNeoModel;_.GPTNeoPreTrainedModel;_.GPTNeoXForCausalLM;_.GPTNeoXModel;_.GPTNeoXPreTrainedModel;_.GPTNeoXTokenizer;_.Gemma2ForCausalLM;_.Gemma2Model;_.Gemma2PreTrainedModel;_.Gemma3ForCausalLM;_.Gemma3Model;_.Gemma3PreTrainedModel;_.Gemma3nAudioFeatureExtractor;_.Gemma3nForConditionalGeneration;_.Gemma3nPreTrainedModel;_.Gemma3nProcessor;_.GemmaForCausalLM;_.GemmaModel;_.GemmaPreTrainedModel;_.GemmaTokenizer;_.GlmForCausalLM;_.GlmModel;_.GlmPreTrainedModel;_.GraniteForCausalLM;_.GraniteModel;_.GranitePreTrainedModel;_.Grok1Tokenizer;_.GroundingDinoForObjectDetection;_.GroundingDinoImageProcessor;_.GroundingDinoPreTrainedModel;_.GroundingDinoProcessor;_.GroupViTModel;_.GroupViTPreTrainedModel;_.HeliumForCausalLM;_.HeliumModel;_.HeliumPreTrainedModel;_.HerbertTokenizer;_.HieraForImageClassification;_.HieraModel;_.HieraPreTrainedModel;_.HubertForCTC;_.HubertForSequenceClassification;_.HubertModel;_.HubertPreTrainedModel;_.IJepaForImageClassification;_.IJepaModel;_.IJepaPreTrainedModel;_.Idefics3ForConditionalGeneration;_.Idefics3ImageProcessor;_.Idefics3PreTrainedModel;_.Idefics3Processor;_.ImageClassificationPipeline;_.ImageFeatureExtractionPipeline;_.ImageFeatureExtractor;_.ImageMattingOutput;_.ImageProcessor;_.ImageSegmentationPipeline;_.ImageToImagePipeline;_.ImageToTextPipeline;_.InterruptableStoppingCriteria;_.JAISLMHeadModel;_.JAISModel;_.JAISPreTrainedModel;_.JinaCLIPImageProcessor;_.JinaCLIPModel;_.JinaCLIPPreTrainedModel;_.JinaCLIPProcessor;_.JinaCLIPTextModel;_.JinaCLIPVisionModel;_.Lfm2ForCausalLM;_.Lfm2Model;_.Lfm2PreTrainedModel;_.LiteWhisperForConditionalGeneration;_.LlamaForCausalLM;_.LlamaModel;_.LlamaPreTrainedModel;_.LlamaTokenizer;_.LlavaForConditionalGeneration;_.LlavaOnevisionForConditionalGeneration;_.LlavaOnevisionImageProcessor;_.LlavaPreTrainedModel;_.LlavaProcessor;_.LlavaQwen2ForCausalLM;_.LogitsProcessor;_.LogitsProcessorList;_.LogitsWarper;_.LongT5ForConditionalGeneration;_.LongT5Model;_.LongT5PreTrainedModel;_.M2M100ForConditionalGeneration;_.M2M100Model;_.M2M100PreTrainedModel;_.M2M100Tokenizer;_.MBart50Tokenizer;_.MBartForCausalLM;_.MBartForConditionalGeneration;_.MBartForSequenceClassification;_.MBartModel;_.MBartPreTrainedModel;_.MBartTokenizer;_.MPNetForMaskedLM;_.MPNetForQuestionAnswering;_.MPNetForSequenceClassification;_.MPNetForTokenClassification;_.MPNetModel;_.MPNetPreTrainedModel;_.MPNetTokenizer;_.MT5ForConditionalGeneration;_.MT5Model;_.MT5PreTrainedModel;_.MarianMTModel;_.MarianModel;_.MarianPreTrainedModel;_.MarianTokenizer;_.Mask2FormerImageProcessor;_.MaskFormerFeatureExtractor;_.MaskFormerForInstanceSegmentation;_.MaskFormerImageProcessor;_.MaskFormerModel;_.MaskFormerPreTrainedModel;_.MaskedLMOutput;_.MaxLengthCriteria;_.Metric3DForDepthEstimation;_.Metric3DPreTrainedModel;_.Metric3Dv2ForDepthEstimation;_.Metric3Dv2PreTrainedModel;_.MgpstrForSceneTextRecognition;_.MgpstrModelOutput;_.MgpstrPreTrainedModel;_.MgpstrProcessor;_.MgpstrTokenizer;_.MimiDecoderModel;_.MimiDecoderOutput;_.MimiEncoderModel;_.MimiEncoderOutput;_.MimiModel;_.MimiPreTrainedModel;_.MinLengthLogitsProcessor;_.MinNewTokensLengthLogitsProcessor;_.MistralForCausalLM;_.MistralModel;_.MistralPreTrainedModel;_.MobileBertForMaskedLM;_.MobileBertForQuestionAnswering;_.MobileBertForSequenceClassification;_.MobileBertModel;_.MobileBertPreTrainedModel;_.MobileBertTokenizer;_.MobileLLMForCausalLM;_.MobileLLMModel;_.MobileLLMPreTrainedModel;_.MobileNetV1FeatureExtractor;_.MobileNetV1ForImageClassification;_.MobileNetV1ForSemanticSegmentation;_.MobileNetV1ImageProcessor;_.MobileNetV1Model;_.MobileNetV1PreTrainedModel;_.MobileNetV2FeatureExtractor;_.MobileNetV2ForImageClassification;_.MobileNetV2ForSemanticSegmentation;_.MobileNetV2ImageProcessor;_.MobileNetV2Model;_.MobileNetV2PreTrainedModel;_.MobileNetV3FeatureExtractor;_.MobileNetV3ForImageClassification;_.MobileNetV3ForSemanticSegmentation;_.MobileNetV3ImageProcessor;_.MobileNetV3Model;_.MobileNetV3PreTrainedModel;_.MobileNetV4FeatureExtractor;_.MobileNetV4ForImageClassification;_.MobileNetV4ForSemanticSegmentation;_.MobileNetV4ImageProcessor;_.MobileNetV4Model;_.MobileNetV4PreTrainedModel;_.MobileViTFeatureExtractor;_.MobileViTForImageClassification;_.MobileViTImageProcessor;_.MobileViTModel;_.MobileViTPreTrainedModel;_.MobileViTV2ForImageClassification;_.MobileViTV2Model;_.MobileViTV2PreTrainedModel;_.ModelOutput;_.ModernBertDecoderForCausalLM;_.ModernBertDecoderModel;_.ModernBertDecoderPreTrainedModel;_.ModernBertForMaskedLM;_.ModernBertForSequenceClassification;_.ModernBertForTokenClassification;_.ModernBertModel;_.ModernBertPreTrainedModel;_.Moondream1ForConditionalGeneration;_.MoonshineFeatureExtractor;_.MoonshineForConditionalGeneration;_.MoonshineModel;_.MoonshinePreTrainedModel;_.MoonshineProcessor;_.MptForCausalLM;_.MptModel;_.MptPreTrainedModel;_.MultiModalityCausalLM;_.MultiModalityPreTrainedModel;_.MusicgenForCausalLM;_.MusicgenForConditionalGeneration;_.MusicgenModel;_.MusicgenPreTrainedModel;_.NeoBertForMaskedLM;_.NeoBertForQuestionAnswering;_.NeoBertForSequenceClassification;_.NeoBertForTokenClassification;_.NeoBertModel;_.NeoBertPreTrainedModel;_.NllbTokenizer;_.NoBadWordsLogitsProcessor;_.NoRepeatNGramLogitsProcessor;_.NomicBertModel;_.NomicBertPreTrainedModel;_.NougatImageProcessor;_.NougatTokenizer;_.OPTForCausalLM;_.OPTModel;_.OPTPreTrainedModel;_.ObjectDetectionPipeline;_.Olmo2ForCausalLM;_.Olmo2Model;_.Olmo2PreTrainedModel;_.OlmoForCausalLM;_.OlmoModel;_.OlmoPreTrainedModel;_.OpenELMForCausalLM;_.OpenELMModel;_.OpenELMPreTrainedModel;_.OwlViTFeatureExtractor;_.OwlViTForObjectDetection;_.OwlViTImageProcessor;_.OwlViTModel;_.OwlViTPreTrainedModel;_.OwlViTProcessor;_.Owlv2ForObjectDetection;_.Owlv2ImageProcessor;_.Owlv2Model;_.Owlv2PreTrainedModel;_.PaliGemmaForConditionalGeneration;_.PaliGemmaPreTrainedModel;_.PaliGemmaProcessor;_.PatchTSMixerForPrediction;_.PatchTSMixerModel;_.PatchTSMixerPreTrainedModel;_.PatchTSTForPrediction;_.PatchTSTModel;_.PatchTSTPreTrainedModel;_.Phi3ForCausalLM;_.Phi3Model;_.Phi3PreTrainedModel;_.Phi3VForCausalLM;_.Phi3VImageProcessor;_.Phi3VPreTrainedModel;_.Phi3VProcessor;_.PhiForCausalLM;_.PhiModel;_.PhiPreTrainedModel;_.Pipeline;_.PreTrainedModel;_.PreTrainedTokenizer;_.PretrainedConfig;_.PretrainedMixin;_.Processor;_.PvtForImageClassification;_.PvtImageProcessor;_.PvtModel;_.PvtPreTrainedModel;_.PyAnnoteFeatureExtractor;_.PyAnnoteForAudioFrameClassification;_.PyAnnoteModel;_.PyAnnotePreTrainedModel;_.PyAnnoteProcessor;_.QuestionAnsweringModelOutput;_.QuestionAnsweringPipeline;_.Qwen2ForCausalLM;_.Qwen2Model;_.Qwen2PreTrainedModel;_.Qwen2Tokenizer;_.Qwen2VLForConditionalGeneration;_.Qwen2VLImageProcessor;_.Qwen2VLPreTrainedModel;_.Qwen2VLProcessor;_.Qwen3ForCausalLM;_.Qwen3Model;_.Qwen3PreTrainedModel;_.RFDetrForObjectDetection;_.RFDetrModel;_.RFDetrObjectDetectionOutput;_.RFDetrPreTrainedModel;_.RTDetrForObjectDetection;_.RTDetrImageProcessor;_.RTDetrModel;_.RTDetrObjectDetectionOutput;_.RTDetrPreTrainedModel;_.RTDetrV2ForObjectDetection;_.RTDetrV2Model;_.RTDetrV2ObjectDetectionOutput;_.RTDetrV2PreTrainedModel;_.RawAudio;_.RawImage;_.RawVideo;_.RawVideoFrame;_.RepetitionPenaltyLogitsProcessor;_.ResNetForImageClassification;_.ResNetModel;_.ResNetPreTrainedModel;_.RoFormerForMaskedLM;_.RoFormerForQuestionAnswering;_.RoFormerForSequenceClassification;_.RoFormerForTokenClassification;_.RoFormerModel;_.RoFormerPreTrainedModel;_.RoFormerTokenizer;_.RobertaForMaskedLM;_.RobertaForQuestionAnswering;_.RobertaForSequenceClassification;_.RobertaForTokenClassification;_.RobertaModel;_.RobertaPreTrainedModel;_.RobertaTokenizer;_.SamImageProcessor;_.SamImageSegmentationOutput;_.SamModel;_.SamPreTrainedModel;_.SamProcessor;_.SapiensForDepthEstimation;_.SapiensForNormalEstimation;_.SapiensForSemanticSegmentation;_.SapiensPreTrainedModel;_.SeamlessM4TFeatureExtractor;_.SegformerFeatureExtractor;_.SegformerForImageClassification;_.SegformerForSemanticSegmentation;_.SegformerImageProcessor;_.SegformerModel;_.SegformerPreTrainedModel;_.Seq2SeqLMOutput;_.SequenceClassifierOutput;_.SiglipImageProcessor;_.SiglipModel;_.SiglipPreTrainedModel;_.SiglipTextModel;_.SiglipTokenizer;_.SiglipVisionModel;_.SmolLM3ForCausalLM;_.SmolLM3Model;_.SmolLM3PreTrainedModel;_.SmolVLMForConditionalGeneration;_.SmolVLMImageProcessor;_.SmolVLMProcessor;_.SnacDecoderModel;_.SnacEncoderModel;_.SnacFeatureExtractor;_.SnacModel;_.SnacPreTrainedModel;_.SpeechT5FeatureExtractor;_.SpeechT5ForSpeechToText;_.SpeechT5ForTextToSpeech;_.SpeechT5HifiGan;_.SpeechT5Model;_.SpeechT5PreTrainedModel;_.SpeechT5Processor;_.SpeechT5Tokenizer;_.SqueezeBertForMaskedLM;_.SqueezeBertForQuestionAnswering;_.SqueezeBertForSequenceClassification;_.SqueezeBertModel;_.SqueezeBertPreTrainedModel;_.SqueezeBertTokenizer;_.StableLmForCausalLM;_.StableLmModel;_.StableLmPreTrainedModel;_.Starcoder2ForCausalLM;_.Starcoder2Model;_.Starcoder2PreTrainedModel;_.StoppingCriteria;_.StoppingCriteriaList;_.StyleTextToSpeech2Model;_.StyleTextToSpeech2PreTrainedModel;_.SummarizationPipeline;_.SuppressTokensAtBeginLogitsProcessor;_.Swin2SRForImageSuperResolution;_.Swin2SRImageProcessor;_.Swin2SRModel;_.Swin2SRPreTrainedModel;_.SwinForImageClassification;_.SwinForSemanticSegmentation;_.SwinModel;_.SwinPreTrainedModel;_.T5ForConditionalGeneration;_.T5Model;_.T5PreTrainedModel;_.T5Tokenizer;_.TableTransformerForObjectDetection;_.TableTransformerModel;_.TableTransformerObjectDetectionOutput;_.TableTransformerPreTrainedModel;_.TemperatureLogitsWarper;_.Tensor;_.Text2TextGenerationPipeline;_.TextClassificationPipeline;_.TextGenerationPipeline;var kT=_.TextStreamer;_.TextToAudioPipeline;_.TokenClassificationPipeline;_.TokenClassifierOutput;_.TokenizerModel;_.TopKLogitsWarper;_.TopPLogitsWarper;_.TrOCRForCausalLM;_.TrOCRPreTrainedModel;_.TranslationPipeline;_.UltravoxModel;_.UltravoxPreTrainedModel;_.UltravoxProcessor;_.UniSpeechForCTC;_.UniSpeechForSequenceClassification;_.UniSpeechModel;_.UniSpeechPreTrainedModel;_.UniSpeechSatForAudioFrameClassification;_.UniSpeechSatForCTC;_.UniSpeechSatForSequenceClassification;_.UniSpeechSatModel;_.UniSpeechSatPreTrainedModel;_.VLChatProcessor;_.VLMImageProcessor;_.ViTFeatureExtractor;_.ViTForImageClassification;_.ViTImageProcessor;_.ViTMAEModel;_.ViTMAEPreTrainedModel;_.ViTMSNForImageClassification;_.ViTMSNModel;_.ViTMSNPreTrainedModel;_.ViTModel;_.ViTPreTrainedModel;_.VisionEncoderDecoderModel;_.VitMatteForImageMatting;_.VitMatteImageProcessor;_.VitMattePreTrainedModel;_.VitPoseForPoseEstimation;_.VitPoseImageProcessor;_.VitPosePreTrainedModel;_.VitsModel;_.VitsModelOutput;_.VitsPreTrainedModel;_.VitsTokenizer;_.VoxtralForConditionalGeneration;_.VoxtralProcessor;_.Wav2Vec2BertForCTC;_.Wav2Vec2BertForSequenceClassification;_.Wav2Vec2BertModel;_.Wav2Vec2BertPreTrainedModel;_.Wav2Vec2CTCTokenizer;_.Wav2Vec2FeatureExtractor;_.Wav2Vec2ForAudioFrameClassification;_.Wav2Vec2ForCTC;_.Wav2Vec2ForSequenceClassification;_.Wav2Vec2Model;_.Wav2Vec2PreTrainedModel;_.Wav2Vec2Processor;_.Wav2Vec2ProcessorWithLM;_.WavLMForAudioFrameClassification;_.WavLMForCTC;_.WavLMForSequenceClassification;_.WavLMForXVector;_.WavLMModel;_.WavLMPreTrainedModel;_.WeSpeakerFeatureExtractor;_.WeSpeakerResNetModel;_.WeSpeakerResNetPreTrainedModel;_.WhisperFeatureExtractor;_.WhisperForConditionalGeneration;_.WhisperModel;_.WhisperPreTrainedModel;_.WhisperProcessor;_.WhisperTextStreamer;_.WhisperTimeStampLogitsProcessor;_.WhisperTokenizer;_.XLMForQuestionAnswering;_.XLMForSequenceClassification;_.XLMForTokenClassification;_.XLMModel;_.XLMPreTrainedModel;_.XLMRobertaForMaskedLM;_.XLMRobertaForQuestionAnswering;_.XLMRobertaForSequenceClassification;_.XLMRobertaForTokenClassification;_.XLMRobertaModel;_.XLMRobertaPreTrainedModel;_.XLMRobertaTokenizer;_.XLMTokenizer;_.XLMWithLMHeadModel;_.XVectorOutput;_.YolosFeatureExtractor;_.YolosForObjectDetection;_.YolosImageProcessor;_.YolosModel;_.YolosObjectDetectionOutput;_.YolosPreTrainedModel;_.ZeroShotAudioClassificationPipeline;_.ZeroShotClassificationPipeline;_.ZeroShotImageClassificationPipeline;_.ZeroShotObjectDetectionPipeline;_.bankers_round;_.cat;_.cos_sim;_.dot;_.dynamic_time_warping;var IT=_.env;_.full;_.full_like;_.getCacheShapes;_.hamming;_.hanning;_.interpolate;_.interpolate_4d;_.interpolate_data;_.is_chinese_char;_.layer_norm;var AT=_.load_image;_.load_video;_.log_softmax;_.magnitude;_.matmul;_.max;_.mean;_.mean_pooling;_.medianFilter;_.mel_filter_bank;_.min;_.ones;_.ones_like;_.permute;_.permute_data;var FT=_.pipeline;_.quantize_embeddings;_.rand;_.read_audio;_.rfft;_.round;_.slice;_.softmax;_.spectrogram;_.stack;_.std_mean;_.topk;_.window_function;_.zeros;_.zeros_like;function OT(){return typeof navigator<"u"&&"gpu"in navigator}function DT(e,r="image/png"){const t=atob(e.split(",")[1]),s=new Array(t.length);for(let n=0;n<t.length;n++)s[n]=t.charCodeAt(n);const o=new Uint8Array(s);return new Blob([o],{type:r})}const LT=OT()?"webgpu":"wasm";console.log(`Loading pipeline on device: ${LT}`);chrome.action.onClicked.addListener(()=>{chrome.tabs.create({url:"src/pages/popup/index.html"})});IT.allowLocalModels=!1;class Mv{static async getInstance(r){return this.instance||(this.instance=CT.from_pretrained("onnx-community/FastVLM-0.5B-ONNX",{dtype:{embed_tokens:"q4",vision_encoder:"q4",decoder_model_merged:"q4"},progress_callback:r,device:"webgpu"})),this.instance}}Y(Mv,"instance",null);class Qo{static async getInstance(r){return this.pipelineFn??(this.pipelineFn=async(...t)=>(this.pipelineInstance??(this.pipelineInstance=FT("token-classification","onnx-community/piiranha-v1-detect-personal-information-ONNX",{progress_callback:r,device:"webgpu",dtype:"q4"})),this.promiseChain=(this.promiseChain??Promise.resolve()).then(async()=>(await this.pipelineInstance)(...t))))}static async classifyText(r,t){this.tokenizer||(this.tokenizer=await $T.from_pretrained("onnx-community/piiranha-v1-detect-personal-information-ONNX"));const s=256,o=await this.tokenizer(r.text,{add_special_tokens:!0}),n=Array.from(o.input_ids.ort_tensor.cpuData),i=[];for(let m=0;m<n.length;m+=s)i.push(n.slice(m,m+s));const a=await Promise.all(i.map(m=>this.tokenizer.decode(m,{skip_special_tokens:!0}))),l=await this.getInstance(t);let c=[];for(const m of a){const d=await l(m);c=c.concat(d)}return c}}Y(Qo,"tokenizer",null),Y(Qo,"pipelineInstance",null),Y(Qo,"pipelineFn",null),Y(Qo,"promiseChain",null);const zT=async e=>{const r=await ST.from_pretrained("onnx-community/FastVLM-0.5B-ONNX"),t=await Mv.getInstance(p),s=[{role:"user",content:"<image>Describe this image in detail. Include all PII you find in response."}],o=r.apply_chat_template(s,{add_generation_prompt:!0}),n=DT(e),i=await AT(n),a=await r(i,o,{add_special_tokens:!1}),l=await t.generate({...a,max_new_tokens:512,do_sample:!1,streamer:new kT(r.tokenizer,{skip_prompt:!0,skip_special_tokens:!1,callback_function:m=>{console.log(m)}})}),c=r.batch_decode(l.slice(null,[a.input_ids.dims.at(-1),null]),{skip_special_tokens:!0});return console.log(c),c};chrome.runtime.onMessage.addListener((e,r,t)=>(e.action=="classify"?async function(){const s=await Qo.classifyText({text:e.text});t(s)}():e.action=="image"&&async function(){const s=await zT(e.text);t(s)}(),!0));
//# sourceMappingURL=index.js-Bpcq9X8Z.js.map
